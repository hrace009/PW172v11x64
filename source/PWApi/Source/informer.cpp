
#include <vector>
#include <iostream>
#include <fstream>
#include <cstdio>
#include <windows.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/timeb.h>
#include <string.h>
#include <tchar.h>

#include "../Header/config.h"
#include "../Header/asm.h"
#include "../Header/main.h"
#include "../Header/packet.h"
#include "../Header/informer.h"

//Perfect World GS 
#include "../Header/common/types.h"
#include "../Header/common/protocol.h"

ClassInformer* ClassInformer::instance = 0;

ClassInformer::CNET ClassInformer::cnet;

const char* ClassInformer::cgame_r[] = 		//CMD
{
	"PLAYER_INFO_1",
	"PLAYER_INFO_2",
	"PLAYER_INFO_3",
	"PLAYER_INFO_4",
	"PLAYER_INFO_1_LIST",
	"PLAYER_INFO_2_LIST",		//5
	"PLAYER_INFO_3_LIST",
	"PLAYER_INFO_23_LIST",
	"SELF_INFO_1",
	"NPC_INFO_LIST",
	"MATTER_INFO_LIST",		//10
	"NPC_ENTER_SLICE",
	"PLAYER_ENTER_SLICE",
	"OBJECT_LEAVE_SLICE",
	"OBJECT_NOTIFY_POS",		//这个命令时暂时的？
	"OBJECT_MOVE",			//15
	"NPC_ENTER_WORLD",
	"PLAYER_ENTER_WORLD",
	"MATTER_ENTER_WORLD",
	"PLAYER_LEAVE_WORLD",
	"NPC_DEAD",			//20
	"OBJECT_DISAPPEAR",
	"OBJECT_START_ATTACK",		//已经作废 ，完全没有用 
	"SELF_STOP_ATTACK",		//
	"SELF_ATTACK_RESULT",
	"ERROR_MESSAGE",			//25	
	"BE_ATTACKED",
	"PLAYER_DEAD",
	"BE_KILLED",
	"PLAYER_REVIVAL",
	"PICKUP_MONEY",			//30
	"PICKUP_ITEM",
	"PLAYER_INFO_00",
	"NPC_INFO_00",
	"OUT_OF_SIGHT_LIST",
	"OBJECT_STOP_MOVE",		//35
	"RECEIVE_EXP",
	"LEVEL_UP",
	"SELF_INFO_00",
	"UNSELECT",
	"SELF_ITEM_INFO",			//40
	"SELF_ITEM_EMPTY_INFO",
	"SELF_INVENTORY_DATA",
	"SELF_INVENTORY_DETAIL_DATA",
	"EXCHANGE_INVENTORY_ITEM",
	"MOVE_INVENTORY_ITEM",		//45
	"PLAYER_DROP_ITEM",
	"EXCHANGE_EQUIPMENT_ITEM",
	"EQUIP_ITEM",
	"MOVE_EQUIPMENT_ITEM",
	"SELF_GET_EXT_PROPERTY",		//50
	"SET_STATUS_POINT",
	"SELECT_TARGET",
	"PLAYER_EXTPROP_BASE",
	"PLAYER_EXTPROP_MOVE",
	"PLAYER_EXTPROP_ATTACK",		//55
	"PLAYER_EXTPROP_DEFENSE",
	"TEAM_LEADER_INVITE",
	"TEAM_REJECT_INVITE",
	"TEAM_JOIN_TEAM",
	"TEAM_MEMBER_LEAVE",		//60
	"TEAM_LEAVE_PARTY",
	"TEAM_NEW_MEMBER",
	"TEAM_LEADER_CANCEL_PARTY",
	"TEAM_MEMBER_DATA",
	"TEAMMATE_POS",			//65
	"EQUIPMENT_DATA",		//用户的装备数据，影响表现
	"EQUIPMENT_INFO_CHANGED",
	"EQUIPMENT_DAMAGED",		//装备损坏
	"TEAM_MEMBER_PICKUP",		//队友捡起装备
	"NPC_GREETING",			//70
	"NPC_SERVICE_CONTENT",
	"PURCHASE_ITEM",
	"ITEM_TO_MONEY",
	"REPAIR_ALL",
	"REPAIR",			//75
	"RENEW",
	"SPEND_MONEY",
	"PICKUP_MONEY_IN_TRADE",
	"PICKUP_ITEM_IN_TRADE",
	"PICKUP_MONEY_AFTER_TRADE",		//80
	"PICKUP_ITEM_AFTER_TRADE",
	"GET_OWN_MONEY",
	"OBJECT_ATTACK_ONCE",		//已经作废 ，完全没有用
	"SELF_START_ATTACK",
	"OBJECT_CAST_SKILL",		//85
	"SKILL_INTERRUPTED",
	"SELF_SKILL_INTERRUPTED",
	"SKILL_PERFORM",
	"OBJECT_BE_ATTACKED",		//已经作废 ，完全没有用
	"SKILL_DATA",			//90
	"PLAYER_USE_ITEM",
	"EMBED_ITEM",
	"CLEAR_EMBEDDED_CHIP",
	"COST_SKILL_POINT",
	"LEARN_SKILL",			//95
	"OBJECT_TAKEOFF",
	"OBJECT_LANDING",
	"FLYSWORD_TIME_CAPACITY",
	"OBTAIN_ITEM",
	"PRODUCE_START",			//100
	"PRODUCE_ONCE",
	"PRODUCE_END",
	"DECOMPOSE_START",
	"DECOMPOSE_END",
	"TASK_DATA",			//105
	"TASK_VAR_DATA",
	"OBJECT_START_USE",
	"OBJECT_CANCEL_USE",
	"OBJECT_USE_ITEM",
	"OBJECT_START_USE_WITH_TARGET",		//110
	"OBJECT_SIT_DOWN",
	"OBJECT_STAND_UP",
	"OBJECT_DO_EMOTE",
	"SERVER_TIMESTAMP",
	"NOTIFY_ROOT",			//115
	"DISPEL_ROOT",
	"INVADER_RISE",
	"PARIAH_RISE",
	"INVADER_FADE",
	"OBJECT_ATTACK_RESULT",		//120
	"BE_HURT",
	"HURT_RESULT",
	"SELF_STOP_SKILL",
	"UPDATE_VISIBLE_STATE",
	"OBJECT_STATE_NOTIFY",		//125
	"PLAYER_GATHER_START",
	"PLAYER_GATHER_STOP",
	"TRASHBOX_PASSWD_CHANGED",
	"TRASHBOX_PASSWD_STATE",
	"TRASHBOX_OPEN",			//130
	"TRASHBOX_CLOSE",
	"TRASHBOX_WEALTH",
	"EXCHANGE_TRASHBOX_ITEM",
	"MOVE_TRASHBOX_ITEM",
	"EXCHANGE_TRASHBOX_INVENTORY",		//135
	"INVENTORY_ITEM_TO_TRASH",
	"TRASH_ITEM_TO_INVENTORY",
	"EXCHANGE_TRASH_MONEY",
	"ENCHANT_RESULT",
	"SELF_NOTIFY_ROOT",		//140
	"OBJECT_DO_ACTION",
	"SELF_SKILL_ATTACK_RESULT",
	"OBJECT_SKILL_ATTACK_RESULT",
	"BE_SKILL_ATTACKED",
	"PLAYER_SET_ADV_DATA",		//145
	"PLAYER_CLR_ADV_DATA",
	"PLAYER_IN_TEAM",
	"TEAM_APPLY_REQUEST",
	"OBJECT_DO_EMOTE_RESTORE",
	"CONCURRENT_EMOTE_REQUEST",		//150
	"DO_CONCURRENT_EMOTE",
	"MATTER_PICKUP",
	"MAFIA_INFO_NOTIFY",
	"MAFIA_TRADE_START",
	"MAFIA_TRADE_END",		//155
	"TASK_DELIVER_ITEM",
	"TASK_DELIVER_REPUTATION",
	"TASK_DELIVER_EXP",
	"TASK_DELIVER_MONEY",
	"TASK_DELIVER_LEVEL2",		//160
	"PLAYER_REPUTATION",
	"IDENTIFY_RESULT",
	"PLAYER_CHANGE_SHAPE",
	"OBJECT_ENTER_SANCTUARY",
	"OBJECT_LEAVE_SANCTUARY",		//165
	"PLAYER_OPEN_MARKET",
	"SELF_OPEN_MARKET",
	"PLAYER_CANCEL_MARKET",
	"PLAYER_MARKET_INFO",
	"PLAYER_MARKET_TRADE_SUCCESS",		//170
	"PLAYER_MARKET_NAME",
	"PLAYER_START_TRAVEL",
	"SELF_START_TRAVEL",
	"PLAYER_COMPLETE_TRAVEL",
	"GM_TOGGLE_INVINCIBLE",		//175
	"GM_TOGGLE_INVISIBLE",
	"SELF_TRACE_CUR_POS",
	"OBJECT_CAST_INSTANT_SKILL",
	"ACTIVATE_WAYPOINT",
	"PLAYER_WAYPOINT_LIST",		//180
	"UNLOCK_INVENTORY_SLOT",
	"TEAM_INVITE_PLAYER_TIMEOUT",
	"PLAYER_ENABLE_PVP",
	"PLAYER_DISABLE_PVP",
	"PLAYER_PVP_COOLDOWN",		//185
	"COOLDOWN_DATA",
	"SKILL_ABILITY_NOTFIY",
	"PERSONAL_MARKET_AVAILABLE",
	"BREATH_DATA",
	"PLAYER_STOP_DIVE",		//190
	"TRADE_AWAY_ITEM",
	"PLAYER_ENABLE_FASHION_MODE",
	"ENABLE_FREE_PVP_MODE",
	"OBJECT_IS_INVALID",
	"PLAYER_ENABLE_EFFECT",		//195
	"PLAYER_DISABLE_EFFECT",
	"ENABLE_RESURRECT_STATE",
	"SET_COOLDOWN",
	"CHANGE_TEAM_LEADER",
	"KICKOUT_INSTANCE",		//200
	"PLAYER_COSMETIC_BEGIN",
	"PLAYER_COSMETIC_END",
	"COSMETIC_SUCCESS",
	"OBJECT_CAST_POS_SKILL",
	"CHANGE_MOVE_SEQ",		//205
	"SERVER_CONFIG_DATA",
	"PLAYER_RUSH_MODE",
	"TRASHBOX_CAPACITY_NOTIFY",
	"NPC_DEAD_2",
	"PRODUCE_NULL",			//210
	"ACTIVE_PVP_COMBAT_STATE",
	"DOUBLE_EXP_TIME",
	"AVAILABLE_DOUBLE_EXP_TIME",
	"DUEL_RECV_REQUEST",
	"DUEL_REJECT_REQUEST",		//215
	"DUEL_PREPARE",
	"DUEL_CANCEL",
	"DUEL_START",
	"DUEL_STOP",
	"DUEL_RESULT",			//220
	"PLAYER_BIND_REQUEST",
	"PLAYER_BIND_INVITE",
	"PLAYER_BIND_REQUEST_REPLY",
	"PLAYER_BIND_INVITE_REPLY",
	"PLAYER_BIND_START",		//225
	"PLAYER_BIND_STOP",
	"PLAYER_MOUNTING",
	"PLAYER_EQUIP_DETAIL",
	"ELSE_DUEL_START",
	"PARIAH_DURATION",		//230
	"PLAYER_GAIN_PET",
	"PLAYER_FREE_PET",
	"PLAYER_SUMMON_PET",
	"PLAYER_RECALL_PET",
	"PLAYER_START_PET_OP",		//235
	"PLAYER_STOP_PET_OP",
	"PLAYER_PET_RECV_EXP",
	"PLAYER_PET_LEVELUP",
	"PLAYER_PET_ROOM",
	"PLAYER_PET_ROOM_CAPACITY",		//240
	"PLAYER_PET_HONOR_POINT",
	"PLAYER_PET_HUNGER_GAUGE",
	"ENTER_BATTLEGROUND",
	"TURRET_LEADER_NOTIFY",
	"BATTLE_RESULT",			//245
	"BATTLE_SCORE",
	"PET_DEAD",
	"PET_REVIVE",
	"PET_HP_NOTIFY",
	"PET_AI_STATE",			//250
	"REFINE_RESULT",
	"PET_SET_COOLDOWN",
	"PLAYER_CASH",
	"PLAYER_BIND_SUCCESS",
	"PLAYER_CHANGE_INVENTORY_SIZE",		//255
	"PLAYER_PVP_MODE",
	"PLAYER_WALLOW_INFO",
	"PLAYER_USE_ITEM_WITH_ARG",
	"OBJECT_USE_ITEM_WITH_ARG",
	"PLAYER_CHANGE_SPOUSE",		//260
	"NOTIFY_SAFE_LOCK",
	"ELF_VIGOR",		//lgc
	"ELF_ENHANCE",
	"ELF_STAMINA",
	"ELF_CMD_RESULT",		//265
	"COMMON_DATA_NOTIFY",
	"COMMON_DATA_LIST",
	"PLAYER_ELF_REFINE_ACTIVATE",
	"PLAYER_CAST_ELF_SKILL",
	"MALL_ITEM_PRICE",		//270
	"MALL_ITEM_BUY_FAILED",
	"PLAYER_ELF_LEVELUP",
	"PLAYER_PROPERTY",
	"PLAYER_CAST_RUNE_SKILL",
	"PLAYER_CAST_RUNE_INSTANT_SKILL",	//275
	"EQUIP_TRASHBOX_ITEM",
	"SECURITY_PASSWD_CHECKED",
	"OBJECT_INVISIBLE",
	"HP_STEAL",
	"PLAYER_DIVIDEND",                //280
	"DIVIDEND_MALL_ITEM_PRICE",
	"DIVIDEND_MALL_ITEM_BUY_FAILED",
	"ELF_EXP",
	"PUBLIC_QUEST_INFO",
	"PUBLIC_QUEST_RANKS",			//285
	"MULTI_EXP_INFO",
	"CHANGE_MULTI_EXP_STATE",
	"WORLD_LIFE_TIME",
	"WEDDING_BOOK_LIST",
	"WEDDING_BOOK_SUCCESS",		//290
	"CALC_NETWORK_DELAY",
	"PLAYER_KNOCKBACK",
	"PLAYER_SUMMON_PLANT_PET",
	"PLANT_PET_DISAPPEAR",
	"PLANT_PET_HP_NOTIFY",		//295
	"PET_PROPERTY",
	"FACTION_CONTRIB_NOTIFY",
	"FACTION_FORTRESS_INFO",
	"ENTER_FACTIONFORTRESS",
	"FACTION_RELATION_NOTIFY",	//300
	"PLAYER_EQUIP_DISABLED",
	"PLAYER_SPEC_ITEM_LIST",
	"OBJECT_START_PLAY_ACTION",
	"OBJECT_STOP_PLAY_ACTION",
	"CONGREGATE_REQUEST",		//305
	"REJECT_CONGREGATE",
	"CONGREGATE_START",
	"CANCEL_CONGREGATE",
	"ENGRAVE_START",
	"ENGRAVE_END",			//310
	"ENGRAVE_RESULT",
	"DPS_DPH_RANK",
	"ADDONREGEN_START",
	"ADDONREGEN_END",
	"ADDONREGEN_RESULT",		//315
	"INVISIBLE_OBJ_LIST",
	"SET_PLAYER_LIMIT",
	"PLAYER_TELEPORT",
	"OBJECT_FORBID_BE_SELECTED",
	"PLAYER_INVENTORY_DETAIL",	//320
	"PLAYER_FORCE_DATA",
	"PLAYER_FORCE_CHANGED",
	"PLAYER_FORCE_DATA_UPDATE",
	"FORCE_GLOBAL_DATA",
	"ADD_MULTIOBJ_EFFECT",		//325
	"REMOVE_MULTIOBJ_EFFECT",
	"ENTER_WEDDING_SCENE",
	"PRODUCE4_ITEM_INFO",
	"ONLINE_AWARD_DATA",
	"TOGGLE_ONLINE_AWARD",		//330
	"PLAYER_PROFIT_TIME",
	"ENTER_NONPENALTY_PVP_STATE",
	"SELF_COUNTRY_NOTIFY",
	"PLAYER_COUNTRY_CHANGED",
	"ENTER_COUNTRYBATTLE",		//335
	"COUNTRYBATTLE_RESULT",
	"COUNTRYBATTLE_SCORE",
	"COUNTRYBATTLE_RESURRECT_REST_TIMES",
	"COUNTRYBATTLE_FLAG_CARRIER_NOTIFY",
	"COUNTRYBATTLE_BECAME_FLAG_CARRIER",	//340
	"COUNTRYBATTLE_PERSONAL_SCORE",
	"COUNTRYBATTLE_FLAG_MSG_NOTIFY",
	"DEFENSE_RUNE_ENABLED",
	"COUNTRYBATTLE_INFO",
	"SET_PROFITTIME_STATE",		//345
	"CASH_MONEY_EXCHG_RATE",
	"PET_REBUILD_INHERIT_START",
	"PET_REBUILD_INHERIT_INFO",
	"PET_REBUILD_INHERIT_END",
	"PET_EVOLUTION_DONE",			//350
	"PET_REBUILD_NATURE_START",
	"PET_REBUILD_NATURE_INFO",
	"PET_REBUILD_NATURE_END",
	"EQUIP_ADDON_UPDATE_NOTIFY",
	"SELF_KING_NOTIFY",			//355
	"PLAYER_KING_CHANGED",
	"NOTIFY_MERIDIAN_DATA",
	"TRY_REFINE_MERIDIAN_RESULT",
	"COUNTRYBATTLE_STRONGHOLD_STATE_NOTIFY",
	"QUERY_TOUCH_POINT",		//360
	"COST_TOUCH_POINT",
	"QUERY_ADDUP_MONEY",
	"QUERY_TITLE",
	"CHANGE_CURR_TITLE",
	"MODIFY_TITLE_NOTIFY", 		//365
	"REFRESH_SIGNIN",
	"PARALLEL_WORLD_INFO",
	"PLAYER_REINCARNATION",
	"REINCARNATION_TOME_INFO",
	"ACTIVATE_REINCARNATION_TOME",	//370
	"UNIQUE_DATA_NOTIFY",
	"GIFTCARD_REDEEM_NOTIFY",
	"REALM_EXP",
	"REALM_LEVEL_UP",
	"ENTER_TRICKBATTLE",			//375
	"TRICKBATTLE_PERSONAL_SCORE",
	"TRICKBATTLE_CHARIOT_INFO",
	"PLAYER_LEADERSHIP",
	"GENERALCARD_COLLECTION_DATA",
	"ADD_GENERALCARD_COLLECTION",		//380
	"REFRESH_FATERING",
	"MINE_GATHERD",
	"PLAYER_ACTIVE_COMBAT",
	"PLAYER_QUERY_CHARIOTS",
	"COUNTRYBATTLE_LIVE_RESULT",		//385
	"RANDOM_MALL_SHOPPING_RESULT",
	"PLAYER_MAFIA_PVP_MASK_NOTIFY",
	"PLAYER_WORLD_CONTRIB",
	"RANDOM_MAP_ORDER",
	"SCENE_SERVICE_NPC_LIST",			//390
	"NPC_VISIBLE_TID_NOTIFY",
	"CLIENT_SCREEN_EFFECT",
	"EQUIP_CAN_INHERIT_ADDONS",
	"COMBO_SKILL_PREPARE",
	"INSTANCE_REENTER_NOTIFY",		//395
	"PRAY_DISTANCE_CHANGE",
	"ASTROLABE_INFO_NOTIFY",
	"ASTROLABE_OPERATE_RESULT",
	"SOLO_CHALLENGE_AWARD_INFO_NOTIFY",
	"SOLO_CHALLENGE_OPERATE_RESULT",  //400
	"SOLO_CHALLENGE_CHALLENGING_STATE_NOTIFY",
	"SOLO_CHALLENGE_BUFF_INFO_NOTIFY",
	"PROPERTY_SCORE_RESULT",
	"MNFACTION_RESOURCE_POINT_INFO",
	"MNFACTION_PLAYER_COUNT_INFO",  //405
	"MNFACTION_RESULT",
	"MNFACTION_RESOURCE_TOWER_STATE_INFO",
	"MNFACTION_SWITCH_TOWER_STATE_INFO",
	"MNFACTION_TRANSMIT_POS_STATE_INFO",
	"MNFACTION_RESOURCE_POINT_STATE_INFO", //410
	"MNFACTION_PLAYER_FACTION_INFO",
	"MNFACTION_BATTLE_GROUND_HAVE_START_TIME",
	"MNFACTION_FACTION_KILLED_PLAYER_NUM",
	"MNFACTION_SHOUT_AT_THE_CLIENT",
	"MNFACTION_PLAYER_POS_INFO",          //415
	"FIX_POSITION_TRANSMIT_ADD_POSITION",
	"FIX_POSITION_TRANSMIT_DELETE_POSITION",
	"FIX_POSITION_TRANSMIT_RENAME",
	"FIX_POSITION_ENERGY_INFO",
	"FIX_POSITION_ALL_INFO",              // 420
	"CASH_VIP_MALL_ITEM_PRICE",
	"CASH_VIP_MALL_ITEM_BUY_RESULT",
	"CASH_VIP_INFO_NOTIFY",
	"PURCHASE_LIMIT_INFO_NOTIFY",
	"LOOKUP_ENEMY_RESULT",                // 425
	"CASH_RESURRECT_INFO",
};

const char* ClassInformer::cgame_s[] =		//CMD
{
	"PLAYER_MOVE",
	"LOGOUT",
	"SELECT_TARGET",
	"NORMAL_ATTACK",
	"RESURRECT_IN_TOWN",
	"RESURRECT_BY_ITEM",
	"PICKUP",
	"STOP_MOVE",
	"UNSELECT",
	"GET_ITEM_INFO",
	"GET_INVENTORY",
	"GET_INVENTORY_DETAIL",
	"EXCHANGE_INVENTORY_ITEM",
	"MOVE_INVENTORY_ITEM",
	"DROP_INVENTORY_ITEM",
	"DROP_EQUIPMENT_ITEM",
	"EXCHANGE_EQUIPMENT_ITEM",
	"EQUIP_ITEM",
	"MOVE_ITEM_TO_EQUIPMENT",
	"GOTO",
	"DROP_MONEY",
	"SELF_GET_PROPERTY",
	"SET_STATUS_POINT",
	"GET_EXTPROP_BASE",
	"GET_EXTPROP_MOVE",
	"GET_EXTPROP_ATTACK",
	"GET_EXTPROP_DEFENSE",
	"TEAM_INVITE",
	"TEAM_AGREE_INVITE",
	"TEAM_REJECT_INVITE",
	"TEAM_LEAVE_PARTY",
	"TEAM_KICK_MEMBER",
	"TEAM_GET_TEAMMATE_POS",
	"GET_OTHERS_EQUIPMENT",
	"CHANGE_PICKUP_FLAG",
	"SERVICE_HELLO",
	"SERVICE_GET_CONTENT",
	"SERVICE_SERVE",
	"GET_OWN_WEALTH",
	"GET_ALL_DATA",
	"USE_ITEM",
	"CAST_SKILL",
	"CANCEL_ACTION",
	"RECHARGE_EQUIPPED_FLYSWORD",
	"RECHARGE_FLYSWORD",
	"USE_ITEM_WITH_TARGET",
	"SIT_DOWN",
	"STAND_UP",
	"EMOTE_ACTION",
	"TASK_NOTIFY",
	"ASSIST_SELECT",
	"CONTINUE_ACTION",
	"STOP_FALL",
	"GET_ITEM_INFO_LIST",
	"GATHER_MATERIAL",
	"GET_TRASHBOX_INFO",
	"EXCHANGE_TRASHBOX_ITEM",
	"MOVE_TRASHBOX_ITEM",
	"EXHCANGE_TRASHBOX_INVENTORY",
	"MOVE_TRASHBOX_ITEM_TO_INVENTORY",
	"MOVE_INVENTORY_ITEM_TO_TRASHBOX",
	"EXCHANGE_TRASHBOX_MONEY",
	"TRICKS_ACTION",
	"SET_ADV_DATA",
	"CLR_ADV_DATA",
	"TEAM_LFG_REQUEST",
	"TEAM_LFG_REPLY",
	"QUERY_PLAYER_INFO_1",
	"QUERY_NPC_INFO_1",
	"SESSION_EMOTE_ACTION",
	"CONCURRECT_EMOTE_REQUEST",
	"CONCURRECT_EMOTE_REPLY",
	"TEAM_CHANGE_LEADER",
	"DEAD_MOVE",
	"DEAD_STOP_MOVE",
	"ENTER_SANCTUARY",
	"OPEN_PERSONAL_MARKET",
	"CANCEL_PERSONAL_MARKET",
	"QUERY_PERSONAL_MARKET_NAME",
	"COMPLETE_TRAVEL",
	"CAST_INSTANT_SKILL",
	"DESTROY_ITEM",
	"ENABLE_PVP_STATE",
	"DISABLE_PVP_STATE",
	"TEST_PERSONAL_MARKET",
	"SWITCH_FASHION_MODE",
	"REGION_TRANSPORT",
	"RESURRECT_AT_ONCE",
	"NOTIFY_POS_TO_MEMBER",
	"CAST_POS_SKILL",
	"ACTIVE_RUSH_MODE",
	"QUERY_DOUBLE_EXP_INFO",
	"DUEL_REQUEST",
	"DUEL_REPLY",
	"BIND_PLAYER_REQUEST",
	"BIND_PLAYER_INVITE",
	"BIND_PLAYER_REQUEST_REPLY",
	"BIND_PLAYER_INVITE_REPLY",
	"BIND_PLAYER_CANCEL",
	"QUERY_OTHER_EQUIP_DETAIL",
	"SUMMON_PET",
	"RECALL_PET",
	"BANISH_PET",
	"PET_CTRL_CMD",
	"DEBUG_DELIVERY_CMD",
	"DEBUG_GS_CMD",
	"MALL_SHOPPING",
	"GET_WALLOW_INFO",
	"TEAM_DISMISS_PARTY",
	"USE_ITEM_WITH_ARG",
	"QUERY_CASH_INFO",
	"ELF_ADD_ATTRIBUTE",
	"ELF_ADD_GENIUS",
	"ELF_PLAYER_INSERT_EXP",
	"ELF_EQUIP_ITEM",
	"ELF_CHANGE_SECURE_STATUS",
	"CAST_ELF_SKILL",
	"RECHARGE_EQUIPPED_ELF",
	"GET_MALL_ITEM_PRICE",
	"EQUIP_TRASHBOX_FASHION_ITEM",
	"CHECK_SECURITY_PASSWD",
	"NOTIFY_FORCE_ATTACK",
	"DIVIDEND_MALL_SHOPPING",
	"GET_DIVIDEND_MALL_ITEM_PRICE",
	"CHOOSE_MULTI_EXP",
	"TOGGLE_MULTI_EXP",
	"MULTI_EXCHANGE_ITEM",
	"SYSAUCTION_OP",
	"CALC_NETWORK_DELAY",
	"GET_FACTION_FORTRESS_INFO",
	"CONGREGATE_REPLY",
	"GET_FORCE_GLOBAL_DATA",
	"PRODUCE4_CHOOSE",
	"RECHARGE_ONLINE_AWARD",
	"TOGGLE_ONLINE_AWARD",
	"QUERY_PROFIT_TIME",
	"ENTER_PK_PROTECTED",
	"COUNTRYBATTLE_GET_PERSONAL_SCORE",
	"GET_SERVER_TIMESTAMP",
	"COUNTRYBATTLE_LEAVE",
	"GET_CASH_MONEY_EXCHG_RATE",
	"EVOLUTION_PET",
	"ADD_PET_EXP",
	"REBUILD_PET_NATURE",
	"REBUILD_PET_INHERIT_RATIO",
	"PET_REBUILDINHERIT_CHOOSE",
	"PET_REBUILDNATURE_CHOOSE",
	"EXCHANGE_WANMEI_YINPIAO",
	"PLAYER_GIVE_PRESENT",
	"PLAYER_ASK_FOR_PRESENT",
	"TRY_REFINE_MERIDIAN",
	"COUNTRYBATTLE_GET_STRONGHOLD_STATE",
	"QUERY_TOUCH_POINT",
	"COST_TOUCH_POINT",
	"QUERY_TITLE",
	"CHANGE_CURR_TITLE",
	"DAILY_SIGNIN",
	"LATE_SIGNIN",
	"APPLY_SIGNIN_AWARD",
	"REFRESH_SIGNIN",
	"SWITCH_IN_PARALLEL_WORLD",
	"QUERY_PARALLEL_WORLD",
	"GET_REINCARNATION_TOME",
	"REWRITE_REINCARNATION_TOME",
	"ACTIVATE_REINCARNATION_TOME",
	"QUERY_UNIQUE_DATA",
	"AUTO_TEAM_SET_GOAL",
	"AUTO_TEAM_JUMP_TO_GOAL",
	"TRICKBATTLE_LEAVE",
	"TRICKBATTLE_UPGRADE_CHARIOT",
	"SWALLOW_GENERALCARD",
	"EQUIP_TRASHBOX_ITEM",
	"QUERY_TRICKBATTLE_CHARIOTS",
	"COUNTRYBATTLE_LIVE_SHOW",
	"SEND_MASS_MAIL",
	"RANDOM_MALL_SHOPPING",
	"QUERY_MAFIA_PVP_INFO",
	"QUERY_CAN_INHERIT_ADDONS",
	"ACTIVATE_REGION_WAYPOINTS",
	"INSTANCE_REENTER_REQUEST",
	"ASTROLABE_OPERATE_REQUEST",
	"SOLO_CHALLENGE_OPERATE_REQUEST",
	"PROPERTY_SCORE_REQUEST",
	"MNFACTION_GET_DOMAIN_DATA",
	"PICKUP_ALL",
	"FIX_POSITION_TRANSMIT_OPERATE_REQUEST",
	"REMOTE_REPAIR",
	"GET_CASH_VIP_MALL_ITEM_PRICE",
	"CASH_VIP_MALL_SHOPPING",
	"UPDATE_ENEMYLIST",
	"LOOKUP_ENEMY",
	"RESURRECT_BY_CASH",
};

void ClassInformer::Init()
{
#ifdef _WIN64
	SetCnet(0xFFFFFFFFFF, 0, "nop");
	SetCnet(0x014128C0D8, 1, "type_info");
	SetCnet(0x01411F0828, 2, "std::runtime_error");
	SetCnet(0x014109B520, 2, "std::exception");
	SetCnet(0x01411E8058, 6, "std::collate<wchar_t>");
	SetCnet(0x014109B800, 1, "std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >");
	SetCnet(0x014109B780, 15, "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >");
	SetCnet(0x014109B700, 1, "std::basic_ofstream<char,std::char_traits<char> >");
	SetCnet(0x014116B578, 1, "std::basic_ifstream<char,std::char_traits<char> >");
	SetCnet(0x01410D3058, 1, "std::basic_fstream<char,std::char_traits<char> >");
	SetCnet(0x014109B680, 15, "std::basic_filebuf<char,std::char_traits<char> >");
	SetCnet(0x014109B538, 2, "std::bad_cast");
	SetCnet(0x01411E80A0, 1, "std::_Root_node");
	SetCnet(0x01411E8288, 1, "std::_Node_str<wchar_t>");
	SetCnet(0x01411E8120, 1, "std::_Node_rep");
	SetCnet(0x01411E8100, 1, "std::_Node_if");
	SetCnet(0x01411E80F0, 1, "std::_Node_endif");
	SetCnet(0x01411E8110, 1, "std::_Node_end_rep");
	SetCnet(0x01411E80B0, 1, "std::_Node_end_group");
	SetCnet(0x01411E8298, 1, "std::_Node_class<wchar_t,std::regex_traits<wchar_t> >");
	SetCnet(0x01411E80D0, 1, "std::_Node_capture");
	SetCnet(0x01411E8090, 1, "std::_Node_base");
	SetCnet(0x01411E80E0, 1, "std::_Node_back");
	SetCnet(0x01411E80C0, 1, "std::_Node_assert");
	SetCnet(0x01410ADB50, 6, "std::_Func_impl<<lambda_ff310318baa6e31c9d6f51ffcd4c4fd7>,std::allocator<int>,void>");
	SetCnet(0x01411C9B28, 6, "std::_Func_impl<<lambda_dd0e7c2f17adfe80e15b86db765f3d80>,std::allocator<int>,void,void * __ptr64,CECLimitVisibilityInfo::LimitCondition * __ptr64>");
	SetCnet(0x01410A0910, 1, "std::_Func_impl<<lambda_8f880b167ee782e9a006111ffecdc911>,std::allocator<int>,void>");
	SetCnet(0x0141253868, 6, "std::_Func_impl<<lambda_529ea8e4e4601b4df0b4279e91881b4f>,std::allocator<int>,bool,unsigned __int64>");
	SetCnet(0x01411C2900, 6, "std::_Func_impl<<lambda_4c3d716080605b4686d9fbb444d13929>,std::allocator<int>,void,void * __ptr64,CECLimitVisibilityInfo::LimitCondition * __ptr64>");
	SetCnet(0x0141297130, 6, "std::_Func_impl<<lambda_1939f68b943fbc29cefabe76408c536c>,std::allocator<int>,unsigned int,unsigned __int64>");
	SetCnet(0x01412970F8, 6, "std::_Func_impl<<lambda_07d2271ac33f5acc36c4a20a3ca2daee>,std::allocator<int>,bool,unsigned __int64>");
	SetCnet(0x0141297168, 6, "std::_Func_impl<<lambda_0645f0acc70c051072d68604347103ed>,std::allocator<int>,unsigned __int64,unsigned __int64>");
	SetCnet(0x01410A08D8, 6, "std::_Func_base<void>");
	SetCnet(0x01411C28C8, 6, "std::_Func_base<void,void * __ptr64,CECLimitVisibilityInfo::LimitCondition * __ptr64>");
	SetCnet(0x0141253830, 6, "std::_Func_base<unsigned int,unsigned __int64>");
	SetCnet(0x01412970C0, 6, "std::_Func_base<unsigned __int64,unsigned __int64>");
	SetCnet(0x01412537F8, 6, "std::_Func_base<bool,unsigned __int64>");
	SetCnet(0x014121A590, 19, "pb::UserConfig");
	SetCnet(0x014121A090, 19, "pb::ITEM_GROUP");
	SetCnet(0x0141219E10, 19, "pb::EC_VIDEO_SETTING");
	SetCnet(0x014121A4F0, 19, "pb::EC_USER_OPERATE_DATA");
	SetCnet(0x0141219EB0, 19, "pb::EC_USERCHANNEL_CHATS");
	SetCnet(0x014121A1D0, 19, "pb::EC_LOTTERY_BATCH_SETTING");
	SetCnet(0x0141219F50, 19, "pb::EC_GAME_SETTING");
	SetCnet(0x014121A130, 19, "pb::EC_COMPUTER_AIDED_SETTING");
	SetCnet(0x0141219D70, 19, "pb::EC_COMBOSKILL");
	SetCnet(0x014121A310, 19, "pb::EC_CHATROOM_SETTING");
	SetCnet(0x0141219FF0, 19, "pb::EC_BLACKLIST_SETTING");
	SetCnet(0x014121A270, 19, "pb::EC_ARENA_LAST_PLAYER");
	SetCnet(0x014121A450, 19, "pb::EC_ADVERTISEMENT_TIME");
	SetCnet(0x014121A3B0, 19, "pb::DIVINATION_INFO");
	SetCnet(0x0141218080, 19, "pb::Animation::WorldInstance");
	SetCnet(0x01412178D8, 19, "pb::Animation::UIAction");
	SetCnet(0x0141217798, 19, "pb::Animation::SunMoonAction");
	SetCnet(0x01412176F8, 19, "pb::Animation::Point4F");
	SetCnet(0x0141217658, 19, "pb::Animation::Point3F");
	SetCnet(0x0141217838, 19, "pb::Animation::ColorFiltersAction");
	SetCnet(0x0141218280, 21, "pb::Animation::C2E_ReplyInitData_MapWorldInstanceEntry_DoNotUse");
	SetCnet(0x0141218490, 19, "pb::Animation::C2E_ReplyInitData");
	SetCnet(0x01411EF9B8, 6, "overlay::GTOverlay");
	SetCnet(0x0141266008, 1, "ime_str_val");
	SetCnet(0x014129AEB0, 6, "google::protobuf::io::ZeroCopyOutputStream");
	SetCnet(0x014129AEE8, 5, "google::protobuf::io::ZeroCopyInputStream");
	SetCnet(0x014129FF70, 6, "google::protobuf::io::StringOutputStream");
	SetCnet(0x014129FE10, 3, "google::protobuf::io::ErrorCollector");
	SetCnet(0x014129FF40, 5, "google::protobuf::io::ArrayInputStream");
	SetCnet(0x0141218330, 21, "google::protobuf::internal::TypeDefinedMapFieldBase<unsigned int,pb::Animation::WorldInstance>");
	SetCnet(0x014129C1B8, 19, "google::protobuf::internal::RepeatedPtrFieldStringAccessor");
	SetCnet(0x014129C2F0, 19, "google::protobuf::internal::RepeatedPtrFieldMessageAccessor");
	SetCnet(0x014129C700, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned int>");
	SetCnet(0x014129C650, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned __int64>");
	SetCnet(0x014129C120, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>");
	SetCnet(0x014129C258, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<float>");
	SetCnet(0x014129C970, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<double>");
	SetCnet(0x014129C840, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<bool>");
	SetCnet(0x014129C8D8, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<__int64>");
	SetCnet(0x0141217FE8, 18, "google::protobuf::internal::MapFieldBase");
	SetCnet(0x014129C798, 20, "google::protobuf::internal::MapFieldAccessor");
	SetCnet(0x01412183E0, 21, "google::protobuf::internal::MapField<pb::Animation::C2E_ReplyInitData_MapWorldInstanceEntry_DoNotUse,unsigned int,pb::Animation::WorldInstance,13,11,0>");
	SetCnet(0x0141218120, 21, "google::protobuf::internal::MapEntryImpl<pb::Animation::C2E_ReplyInitData_MapWorldInstanceEntry_DoNotUse,google::protobuf::Message,unsigned int,pb::Animation::WorldInstance,13,11,0>");
	SetCnet(0x01412181D0, 21, "google::protobuf::internal::MapEntry<pb::Animation::C2E_ReplyInitData_MapWorldInstanceEntry_DoNotUse,unsigned int,pb::Animation::WorldInstance,13,11,0>");
	SetCnet(0x01412A0338, 1, "google::protobuf::internal::GeneratedExtensionFinder");
	SetCnet(0x01412A0320, 2, "google::protobuf::internal::ExtensionFinder");
	SetCnet(0x014129CF80, 21, "google::protobuf::internal::DynamicMapField");
	SetCnet(0x01412A0460, 1, "google::protobuf::internal::DescriptorPoolExtensionFinder");
	SetCnet(0x014129C108, 2, "google::protobuf::`anonymous namespace'::GeneratedMessageFactory");
	SetCnet(0x014129FDF0, 3, "google::protobuf::`anonymous namespace'::AggregateErrorCollector");
	SetCnet(0x01412A09B0, 19, "google::protobuf::UninterpretedOption_NamePart");
	SetCnet(0x01412A0A50, 19, "google::protobuf::UninterpretedOption");
	SetCnet(0x01412A1EE8, 5, "google::protobuf::TextFormat::Printer::TextGenerator");
	SetCnet(0x01412A1FA0, 3, "google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector");
	SetCnet(0x014129FE60, 5, "google::protobuf::TextFormat::Finder");
	SetCnet(0x01412A1F18, 16, "google::protobuf::TextFormat::FastFieldValuePrinter");
	SetCnet(0x01412A1FC0, 5, "google::protobuf::TextFormat::BaseTextGenerator");
	SetCnet(0x01412A0730, 19, "google::protobuf::SourceCodeInfo_Location");
	SetCnet(0x01412A1540, 19, "google::protobuf::SourceCodeInfo");
	SetCnet(0x01412A1220, 19, "google::protobuf::ServiceOptions");
	SetCnet(0x01412A0550, 19, "google::protobuf::ServiceDescriptorProto");
	SetCnet(0x01412A14A0, 19, "google::protobuf::OneofOptions");
	SetCnet(0x01412A05F0, 19, "google::protobuf::OneofDescriptorProto");
	SetCnet(0x01412A12C0, 19, "google::protobuf::MethodOptions");
	SetCnet(0x01412A0F00, 19, "google::protobuf::MethodDescriptorProto");
	SetCnet(0x01412A1040, 19, "google::protobuf::MessageOptions");
	SetCnet(0x014129C6E8, 2, "google::protobuf::MessageFactory");
	SetCnet(0x01412A0BE0, 19, "google::protobuf::GeneratedCodeInfo_Annotation");
	SetCnet(0x01412A0910, 19, "google::protobuf::GeneratedCodeInfo");
	SetCnet(0x01412A1360, 19, "google::protobuf::FileOptions");
	SetCnet(0x01412A0690, 19, "google::protobuf::FileDescriptorSet");
	SetCnet(0x01412A0FA0, 19, "google::protobuf::FileDescriptorProto");
	SetCnet(0x01412A1400, 19, "google::protobuf::FieldOptions");
	SetCnet(0x01412A0C80, 19, "google::protobuf::FieldDescriptorProto");
	SetCnet(0x014129AF38, 2, "google::protobuf::FatalException");
	SetCnet(0x01412A15E0, 19, "google::protobuf::ExtensionRangeOptions");
	SetCnet(0x01412A10E0, 19, "google::protobuf::EnumValueOptions");
	SetCnet(0x01412A0D20, 19, "google::protobuf::EnumValueDescriptorProto");
	SetCnet(0x01412A1180, 19, "google::protobuf::EnumOptions");
	SetCnet(0x01412A07D0, 19, "google::protobuf::EnumDescriptorProto_EnumReservedRange");
	SetCnet(0x01412A0E60, 19, "google::protobuf::EnumDescriptorProto");
	SetCnet(0x01412A1680, 6, "google::protobuf::EncodedDescriptorDatabase");
	SetCnet(0x01412A1D18, 2, "google::protobuf::DynamicMessageFactory");
	SetCnet(0x01412A1D30, 19, "google::protobuf::DynamicMessage");
	SetCnet(0x01412A0870, 19, "google::protobuf::DescriptorProto_ReservedRange");
	SetCnet(0x01412A0B40, 19, "google::protobuf::DescriptorProto_ExtensionRange");
	SetCnet(0x01412A0DC0, 19, "google::protobuf::DescriptorProto");
	SetCnet(0x01412A18A0, 6, "google::protobuf::DescriptorDatabase");
	SetCnet(0x014129FE30, 5, "google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder");
	SetCnet(0x014113B9A0, 8, "element_skill_id_level_array");
	SetCnet(0x0141165FF8, 8, "element_skill_id_array");
	SetCnet(0x01410C91B8, 3, "`void __cdecl ShowHostWeapon(int)'::`2'::ShowWeapon");
	SetCnet(0x01411293D0, 2, "`void __cdecl SendEatCmd(CECIvtrItem * __ptr64,int)'::`2'::SendEatCmdMsgHandler");
	SetCnet(0x01411293F8, 2, "`void __cdecl SendAwardCmd(int,int)'::`24'::SendAwardCmdMsgHandler");
	SetCnet(0x01410B4C10, 2, "`void __cdecl NPCServCampJoinQuit(int,int,int,int,bool)'::`2'::CampJoinQuitMsgHandler");
	SetCnet(0x01410FBF78, 2, "`void __cdecl HostOrSpouseAddClean(int,float)'::`2'::AddCleanMessageBoxHandler");
	SetCnet(0x01411BC600, 3, "`void __cdecl CECLogicHelper::PlayMusic(int)'::`2'::CECBGMTimer");
	SetCnet(0x01411C5670, 2, "`public: void __cdecl CEMNFactionChooseBattleMediator::OnClick_OfflineEnter(int,int) __ptr64'::`2'::OfflinBattleEnterConfirmBox");
	SetCnet(0x01411D7278, 2, "`public: void __cdecl CECRedPacketMediator::OnClick_Recycle(void) __ptr64'::`2'::RecyleRedPacket");
	SetCnet(0x01411D70F8, 2, "`public: void __cdecl CECRedPacketEditMediator::SendMsg2Friend(void) __ptr64'::`19'::SendRedPacketMsgToWord");
	SetCnet(0x01411C2880, 3, "`public: void __cdecl CECOrnamentMan::ShowBrushInfo(CHBasedCD::CCDBrush * __ptr64) __ptr64'::`20'::ShowOrnamentTimer");
	SetCnet(0x01411A1248, 2, "`public: void __cdecl CECGuardianBeastMainMediator::OnCommand_Random(void) __ptr64'::`5'::RandomAttribute");
	SetCnet(0x01411A1260, 2, "`public: void __cdecl CECGuardianBeastMainMediator::OnCommand_AddMatchTimes(int) __ptr64'::`5'::AddMatchTimes");
	SetCnet(0x0141172E88, 2, "`public: void __cdecl CECFixPosTransmitMediator::OnClick_Transmit(int) __ptr64'::`7'::DoTransmitPosHandler");
	SetCnet(0x0141172E70, 2, "`public: void __cdecl CECFixPosTransmitMediator::OnClick_Del(int) __ptr64'::`2'::DelTransmitPosHandler");
	SetCnet(0x014116CE58, 2, "`public: void __cdecl CECEasyProduceMediator::ShowMessageBoxInfo(void) __ptr64'::`7'::QuickProduce");
	SetCnet(0x01411680A0, 2, "`public: void __cdecl CECControlLoopAnimation::Stop(void) __ptr64'::`7'::CreateOncePolicy");
	SetCnet(0x0141168088, 2, "`public: void __cdecl CECControlLoopAnimation::Start(void) __ptr64'::`4'::CreateAlwaysPolicy");
	SetCnet(0x0141167D58, 1, "`public: void __cdecl CECConsoleVariableHelper::Init(void) __ptr64'::`2'::CEAIniFile");
	SetCnet(0x01411557A8, 2, "`public: void __cdecl CDlgWorldMap::OnEventLButtonUp_Travel(unsigned __int64,__int64,AUIObject * __ptr64) __ptr64'::`32'::NPCTransmitDirectMessageBoxHandler");
	SetCnet(0x0141155790, 2, "`public: void __cdecl CDlgWorldMap::OnEventLButtonUp_Travel(unsigned __int64,__int64,AUIObject * __ptr64) __ptr64'::`20'::NPCTransmitNormalMessageBoxHandler");
	SetCnet(0x0141155B08, 2, "`public: void __cdecl CDlgWorldMap::OnEventLBD_WorldEvent(unsigned __int64,__int64,AUIObject * __ptr64) __ptr64'::`8'::ChoosePosHandle");
	SetCnet(0x014114BEC8, 2, "`public: void __cdecl CDlgWarTower::OnCommandConfirm(char const * __ptr64) __ptr64'::`2'::WarTowerMessageBoxHandler");
	SetCnet(0x0141147570, 2, "`public: void __cdecl CDlgTeamContext::OnCommand_MakeLeader(char const * __ptr64) __ptr64'::`5'::CECSecondConfirm");
	SetCnet(0x0141147588, 2, "`public: void __cdecl CDlgTeamContext::OnCommand_Kick(char const * __ptr64) __ptr64'::`5'::CECSecondConfirm");
	SetCnet(0x0141147558, 2, "`public: void __cdecl CDlgTeamContext::OnCommand_GroupLeave(char const * __ptr64) __ptr64'::`7'::CECSecondConfirm");
	SetCnet(0x0141146238, 3, "`public: void __cdecl CDlgTaskList::ConfirmRefresh(AUIDialog * __ptr64,int) __ptr64'::`13'::CECAutoHideTimer");
	SetCnet(0x0141140FB0, 2, "`public: void __cdecl CDlgStorage::OnCommand_Ensure(char const * __ptr64) __ptr64'::`9'::SecondEnsureMsg");
	SetCnet(0x01411406F0, 2, "`public: void __cdecl CDlgStoneTransfer::CheckTransferMoney(void) __ptr64'::`2'::StoneTransferMoneyMessageBoxHandler");
	SetCnet(0x01411403C8, 2, "`public: void __cdecl CDlgStoneReplace::CheckReplaceMoney(void) __ptr64'::`2'::StoneReplaceMoneyMessageBoxHandler");
	SetCnet(0x014113FA98, 2, "`public: void __cdecl CDlgStatueActionSelect::OnCommand_Submit(char const * __ptr64) __ptr64'::`7'::StatueActionSelectMessageBoxHandler");
	SetCnet(0x014113E1F0, 2, "`public: void __cdecl CDlgSplit::OnCommand_begin(char const * __ptr64) __ptr64'::`5'::SplitMessageBoxHandler");
	SetCnet(0x014113AB78, 2, "`public: void __cdecl CDlgSkillConfig::OnCommandBtnDel(char const * __ptr64) __ptr64'::`2'::DelHandler");
	SetCnet(0x014113A478, 2, "`public: void __cdecl CDlgSimulatorSuitList::OnCommand_Delete(char const * __ptr64) __ptr64'::`10'::DeleteFileW");
	SetCnet(0x0141132770, 2, "`public: void __cdecl CDlgShop::OnCommand_buy(char const * __ptr64) __ptr64'::`12'::BuyItemsFromNPCMessageBoxHandler");
	SetCnet(0x01411322C8, 2, "`public: void __cdecl CDlgSettingVideo::OnCommandResetPos(char const * __ptr64) __ptr64'::`2'::ResetDialogPos");
	SetCnet(0x0141130368, 2, "`public: void __cdecl CDlgServantLevelUp::OnCommandSubmit(char const * __ptr64) __ptr64'::`7'::CECMoneyTips");
	SetCnet(0x014112EE90, 3, "`public: void __cdecl CDlgServantInputName::OnServerNotifyBegResault(int) __ptr64'::`2'::CECHideObject");
	SetCnet(0x014112EC50, 3, "`public: void __cdecl CDlgServantGrowing::ShowForgeResult(void) __ptr64'::`2'::CECClearForgeInfo");
	SetCnet(0x014112EC08, 3, "`public: void __cdecl CDlgServantGrowing::ShowForgeGfx(int,int,int) __ptr64'::`2'::CECRefreshPage");
	SetCnet(0x014112EBA8, 3, "`public: void __cdecl CDlgServantGrowing::ShowArrangeLessonGfx(bool,int) __ptr64'::`7'::CECHideGfx02");
	SetCnet(0x014112EAD0, 2, "`public: void __cdecl CDlgServantGrowing::OnCommand_Arrage(char const * __ptr64) __ptr64'::`5'::CECSencondEnsure");
	SetCnet(0x0141130090, 3, "`public: void __cdecl CDlgServantAdult::ShowUpgradeGfx(int) __ptr64'::`5'::HideGfxTimer");
	SetCnet(0x014112AB68, 2, "`public: void __cdecl CDlgRefineTrans::OnCommandConfirm(char const * __ptr64) __ptr64'::`20'::RefineTransHandler");
	SetCnet(0x0141129438, 3, "`public: void __cdecl CDlgRedBookMain::ShowOpenVipAwardGfx(bool) __ptr64'::`2'::CECHideGfx");
	SetCnet(0x0141129410, 1, "`public: void __cdecl CDlgRedBookMain::OnCommandCurAward(char const * __ptr64) __ptr64'::`10'::GetAwardAfterMove");
	SetCnet(0x0141125E88, 2, "`public: void __cdecl CDlgQuickAction::OnCommand_InviteGroup(char const * __ptr64) __ptr64'::`5'::CECSecondConfirm");
	SetCnet(0x0141124F18, 2, "`public: void __cdecl CDlgQShopBuy::OnCommandConfirm(char const * __ptr64) __ptr64'::`10'::QShopBuyMsgHandler");
	SetCnet(0x01411232D8, 2, "`public: void __cdecl CDlgProduceLibrary::OnCommandProduce(char const * __ptr64) __ptr64'::`2'::ProduceLibraryMessageBoxHandler");
	SetCnet(0x01411232C0, 2, "`public: void __cdecl CDlgProduceLibrary::BeginProduce(void) __ptr64'::`4'::LibProduceMessageBox");
	SetCnet(0x0141122F30, 2, "`public: void __cdecl CDlgProduce::UpgradeEquipment(char) __ptr64'::`2'::UpgradeEquipmentMoneyMessageBoxHandler");
	SetCnet(0x0141122E88, 2, "`public: void __cdecl CDlgProduce::OnCommand_begin(char const * __ptr64) __ptr64'::`17'::ProduceMoneyMessageBoxHandler");
	SetCnet(0x014111FEB0, 2, "`public: void __cdecl CDlgPetHatch::OnCommandConfirm(char const * __ptr64) __ptr64'::`2'::PetHatchConfirmMessageBoxHandler");
	SetCnet(0x014111F428, 2, "`public: void __cdecl CDlgPetEvolution::OnCommand_Skin(char const * __ptr64) __ptr64'::`9'::PetSkinBuyMsgHandler");
	SetCnet(0x014111AA30, 2, "`public: void __cdecl CDlgOfflineBattleTiny::OnCommand_Leave(char const * __ptr64) __ptr64'::`2'::ArenaLeaveHandler");
	SetCnet(0x0141111468, 3, "`public: void __cdecl CDlgMentorStudentSearchBase::OnCommandRefreshRecruitList(char const * __ptr64) __ptr64'::`5'::CECDisableRefreshTimer");
	SetCnet(0x014110FB58, 2, "`public: void __cdecl CDlgMaterialRefine::convertGoldToSilverTip(void) __ptr64'::`2'::ConvertGold2SilverMessageBoxHandle");
	SetCnet(0x014110EE50, 2, "`public: void __cdecl CDlgMailWrite::OnCommandSend(char const * __ptr64) __ptr64'::`2'::SendMailMessageBoxHandler");
	SetCnet(0x014110D638, 3, "`public: void __cdecl CDlgLotteryMain::SetSomeCardInfo(int,CECLotteryMain::CardInfo,bool) __ptr64'::`27'::UpdataUI");
	SetCnet(0x014110D658, 3, "`public: void __cdecl CDlgLotteryMain::SetSomeCardInfo(CECLotteryMain::CardInfo) __ptr64'::`2'::UpdataUI");
	SetCnet(0x014110D5E0, 3, "`public: void __cdecl CDlgLotteryMain::SetBoxInfo(void) __ptr64'::`2'::UpdataUI1");
	SetCnet(0x014110D5C0, 3, "`public: void __cdecl CDlgLotteryMain::SetBoxInfo(void) __ptr64'::`2'::UpdataUI");
	SetCnet(0x014110D600, 3, "`public: void __cdecl CDlgLotteryMain::SetBoxInfo(std::vector<CECLotteryMain::CardInfo,std::allocator<CECLotteryMain::CardInfo> >,bool) __ptr64'::`2'::UpdataUI");
	SetCnet(0x014110A2E0, 2, "`public: void __cdecl CDlgLoanMain::OnCommand_DownPayment(char const * __ptr64) __ptr64'::`44'::SecondSure");
	SetCnet(0x014110A470, 2, "`public: void __cdecl CDlgLoanEquipUp::OnCommand_Confirm(char const * __ptr64) __ptr64'::`14'::TipsHandler");
	SetCnet(0x0141108D70, 3, "`public: void __cdecl CDlgLevel2UpgradeShowDeity::PlayLevelUpGfx(void) __ptr64'::`5'::NextStep");
	SetCnet(0x0141108D50, 3, "`public: void __cdecl CDlgLevel2UpgradeShowDeity::PlayLevelUpGfx(void) __ptr64'::`2'::CloseDlg");
	SetCnet(0x0141107088, 2, "`public: void __cdecl CDlgInventory::OnEventLButtonDown(unsigned __int64,__int64,AUIObject * __ptr64) __ptr64'::`44'::RepairMessageBoxHandler");
	SetCnet(0x01411070A0, 2, "`public: void __cdecl CDlgInventory::OnEventLButtonDown(unsigned __int64,__int64,AUIObject * __ptr64) __ptr64'::`40'::CostHandler");
	SetCnet(0x01411048C8, 2, "`public: void __cdecl CDlgInstall::OnCommandStart(char const * __ptr64) __ptr64'::`4'::InstallMoneyMessageBoxHandler");
	SetCnet(0x0141103838, 3, "`public: void __cdecl CDlgIdentifyItemMain::OnCommandIdentify(char const * __ptr64) __ptr64'::`7'::CECAward");
	SetCnet(0x0141103590, 2, "`public: void __cdecl CDlgIdentify::OnCommand_start(char const * __ptr64) __ptr64'::`7'::IdentifyMessageBoxHandler");
	SetCnet(0x01410FEFC8, 2, "`public: void __cdecl CDlgHomeWorldMap::OnEventLButtonDownBuyLand(unsigned __int64,__int64,AUIObject * __ptr64) __ptr64'::`2'::CECHomeMapBuyLandHandler");
	SetCnet(0x01410FECA8, 2, "`public: void __cdecl CDlgHomeWorkShopTalentChoose::OnCommandBtnChooseTalent(char const * __ptr64) __ptr64'::`22'::RenewHandler");
	SetCnet(0x01410FEAB8, 2, "`public: void __cdecl CDlgHomeWorkShopPurchaseLevelUp::OnCommandBtnLevelUp(char const * __ptr64) __ptr64'::`2'::HomeWorkshopPurchaseLevelupMessageBoxHandler");
	SetCnet(0x01410FE8A0, 2, "`public: void __cdecl CDlgHomeWorkShopPurchase::OnCommandBtnBeginProduce(char const * __ptr64) __ptr64'::`4'::HomeWorkshopPurchaseMessageBoxHandler");
	SetCnet(0x01410FE088, 2, "`public: void __cdecl CDlgHomeWorkShopOwnDelegateList::OnCommandBtnRemove(char const * __ptr64) __ptr64'::`2'::RemoveDelegateHandler");
	SetCnet(0x01410FDB90, 2, "`public: void __cdecl CDlgHomeWorkShopLevelUp::OnCommandBtnLevelUp(char const * __ptr64) __ptr64'::`7'::HomeWorkshopLevelupMessageBoxHandler");
	SetCnet(0x01410FDBA8, 2, "`public: void __cdecl CDlgHomeWorkShopLevelUp::ChooseTalent(int) __ptr64'::`2'::ChooseTalentMessageBoxHandler");
	SetCnet(0x01410FD4E0, 2, "`public: void __cdecl CDlgHomeWorkShop::OnCommandBtnBeginProduce(char const * __ptr64) __ptr64'::`17'::HomeWorkshopDelegateMessageBoxHandler");
	SetCnet(0x01410FBD28, 2, "`public: void __cdecl CDlgHomeResourceProduce::OnCommandBtnUpGrade(char const * __ptr64) __ptr64'::`8'::HomeResourceProduceLevelupMessageBoxHandler");
	SetCnet(0x01410FB830, 2, "`public: void __cdecl CDlgHomeProduceFood::OnCommandBtnCancelPlant(char const * __ptr64) __ptr64'::`2'::CancelPlantHandler");
	SetCnet(0x01410FA938, 2, "`public: void __cdecl CDlgHomeMapEditBase::OnCommandCancel(char const * __ptr64) __ptr64'::`2'::DelEnmeyHandler");
	SetCnet(0x01410F92D0, 2, "`public: void __cdecl CDlgHomeFoodRipe::OnCommandBtnGetFood(char const * __ptr64) __ptr64'::`5'::EnsureGetFood");
	SetCnet(0x01410F8AC0, 2, "`public: void __cdecl CDlgHomeFarm::OnCommandBtnUpGrade(char const * __ptr64) __ptr64'::`8'::FarmUpgradeMessageBoxHandler");
	SetCnet(0x01410F7A90, 2, "`public: void __cdecl CDlgHomeEditorItem::OnCommandResetAllItem(char const * __ptr64) __ptr64'::`2'::DelChooseHandler");
	SetCnet(0x01410F7A78, 2, "`public: void __cdecl CDlgHomeEditorItem::OnCommandDelChooseItem(char const * __ptr64) __ptr64'::`2'::DelChooseHandler");
	SetCnet(0x01410E97C8, 3, "`public: void __cdecl CDlgGuradianBeastHatch::HatchOver(void) __ptr64'::`4'::NextAction");
	SetCnet(0x01410E9780, 3, "`public: void __cdecl CDlgGuradianBeastHatch::HatchBegin(void) __ptr64'::`4'::NextAction");
	SetCnet(0x01410ED4C0, 2, "`public: void __cdecl CDlgGuildCreate::OnCommand_confirm(char const * __ptr64) __ptr64'::`2'::GuildCreateMoneyMessageBoxHandler");
	SetCnet(0x01410EC000, 2, "`public: void __cdecl CDlgGuildBattleDeclare::OnCommand_Declare(char const * __ptr64) __ptr64'::`28'::CECFactionHandler");
	SetCnet(0x01410EB440, 2, "`public: void __cdecl CDlgGuildBattleAcceptWord::OnCommandBtnAccept(char const * __ptr64) __ptr64'::`11'::CECFactionHandler");
	SetCnet(0x01410E8B80, 3, "`public: void __cdecl CDlgGuardianBeastFightInfo::UpdateBeastInfo(int) __ptr64'::`60'::FinalScore");
	SetCnet(0x01410E8B60, 3, "`public: void __cdecl CDlgGuardianBeastFightInfo::SetData(GNET::GHomeBatteleRecordData * __ptr64) __ptr64'::`5'::ShowFalse");
	SetCnet(0x01410E8BF0, 3, "`public: void __cdecl CDlgGuardianBeastFightInfo::DisplayFinalScore(void) __ptr64'::`2'::CloseDlg");
	SetCnet(0x01410E8A88, 3, "`public: void __cdecl CDlgGuardianBeastFight::DisplayResault(void) __ptr64'::`2'::ShowFalse");
	SetCnet(0x01410E1930, 2, "`public: void __cdecl CDlgGeneralCardProduce::OnCommand_Produce(char const * __ptr64) __ptr64'::`35'::SecondEnsureMsg");
	SetCnet(0x01410E0E50, 5, "`public: void __cdecl CDlgGeneralCardBuy::OnCommandBuy(char const * __ptr64) __ptr64'::`20'::CECPokerShopBuyCommand");
	SetCnet(0x01410E0408, 3, "`public: void __cdecl CDlgGeneralCard::PlayInjectDiHunEffect(int) __ptr64'::`7'::HideEffect");
	SetCnet(0x01410E1688, 2, "`public: void __cdecl CDlgGenCardExchange::OnCommandExchange(char const * __ptr64) __ptr64'::`10'::ExchangeCardHandler");
	SetCnet(0x01410E3680, 2, "`public: void __cdecl CDlgGMCreateWar::OnCommand_DeleteWar(char const * __ptr64) __ptr64'::`8'::CECDeleteWarMessageBoxHandler");
	SetCnet(0x01410E3620, 2, "`public: void __cdecl CDlgGMCreateWar::OnCommand_CreateWar(char const * __ptr64) __ptr64'::`16'::CECCreateWarMessageBoxHandler");
	SetCnet(0x01410DF060, 2, "`public: void __cdecl CDlgFriendOptionName::OnCommandInvite(char const * __ptr64) __ptr64'::`8'::CECSecondConfirm");
	SetCnet(0x01410DE340, 2, "`public: void __cdecl CDlgFriendEnemyList::OnCommandDeleteEnemy(char const * __ptr64) __ptr64'::`7'::DelEnmeyHandler");
	SetCnet(0x01410DCE98, 2, "`public: void __cdecl CDlgFortressMini::OnCommandBtnLeave(char const * __ptr64) __ptr64'::`2'::LeavelFortress");
	SetCnet(0x01410D9578, 2, "`public: void __cdecl CDlgFashionSplit::OnCommandConfirm(char const * __ptr64) __ptr64'::`10'::SplitFashionMessageBoxHandler");
	SetCnet(0x01410D7AB0, 2, "`public: void __cdecl CDlgFactionStorage::OnProtocol(GNET::Protocol * __ptr64) __ptr64'::`5'::AskOpenFactionStorage");
	SetCnet(0x01410D6A68, 2, "`public: void __cdecl CDlgFactionShareMaster::OnDivideInfoProtocol(GNET::Protocol * __ptr64) __ptr64'::`7'::AskCreatePageBox");
	SetCnet(0x01410D69B0, 2, "`public: void __cdecl CDlgFactionShareMaster::Command_ConfrimDivede(char const * __ptr64) __ptr64'::`2'::ConfirmDivideBox");
	SetCnet(0x01410D4FD8, 2, "`public: void __cdecl CDlgFactionPetMain::OnCommand_Walk(char const * __ptr64) __ptr64'::`4'::PetWalkConfirmBox");
	SetCnet(0x01410D5020, 2, "`public: void __cdecl CDlgFactionPetMain::OnCommand_Change(char const * __ptr64) __ptr64'::`4'::PetChangeConfirmBox");
	SetCnet(0x01410D5008, 2, "`public: void __cdecl CDlgFactionPetMain::OnCommand_Bless(char const * __ptr64) __ptr64'::`7'::PetBlessConfirmBox");
	SetCnet(0x01410D4988, 2, "`public: void __cdecl CDlgFactionPetFeed::OnCommand_Feed(char const * __ptr64) __ptr64'::`8'::PetFeedConfirmBox");
	SetCnet(0x01410D0FC0, 2, "`public: void __cdecl CDlgEquipUp::OnCommand_Confirm(char const * __ptr64) __ptr64'::`14'::TipsHandler");
	SetCnet(0x01410D0440, 2, "`public: void __cdecl CDlgEquipSoulTransfer::OnCommand_Transfer(char const * __ptr64) __ptr64'::`13'::TransferHandler");
	SetCnet(0x01410D0458, 2, "`public: void __cdecl CDlgEquipSoulTransfer::OnCommand_Lock(char const * __ptr64) __ptr64'::`2'::LockOrUnLockHandler");
	SetCnet(0x01410D0470, 2, "`public: void __cdecl CDlgEquipSoulTransfer::LockOrUnlockQiHun(bool,int) __ptr64'::`2'::EquipSoulTransferMoneyMessageBoxHandler");
	SetCnet(0x01410D00A0, 2, "`public: void __cdecl CDlgEquipSoulSwallow::OnCommand_SwallowAll(char const * __ptr64) __ptr64'::`5'::SwallowAllHandler");
	SetCnet(0x01410D00B8, 2, "`public: void __cdecl CDlgEquipSoulSwallow::OnCommand_LockItem(char const * __ptr64) __ptr64'::`2'::LockOrUnLockHandler");
	SetCnet(0x01410CF5F0, 2, "`public: void __cdecl CDlgEquipSoulRefresh::OnCommand_LockItem(char const * __ptr64) __ptr64'::`2'::LockOrUnLockHandler");
	SetCnet(0x01410CF608, 2, "`public: void __cdecl CDlgEquipSoulRefresh::LockOrUnlockQiHun(bool,int) __ptr64'::`2'::EquipSoulRefreshMoneyMessageBoxHandler");
	SetCnet(0x01410CF028, 2, "`public: void __cdecl CDlgEquipSoulDetect::OnCommandLock(char const * __ptr64) __ptr64'::`2'::LockOrUnLockHandler");
	SetCnet(0x01410CF010, 2, "`public: void __cdecl CDlgEquipSoulDetect::OnCommandDetect(char const * __ptr64) __ptr64'::`5'::EquipSoulDetectMessageBoxHandler");
	SetCnet(0x01410CF040, 2, "`public: void __cdecl CDlgEquipSoulDetect::LockOrUnlockQiHun(bool,int) __ptr64'::`2'::EquipSoulDetectMoneyMessageBoxHandler");
	SetCnet(0x01410CE338, 2, "`public: void __cdecl CDlgEquipRefine::OnCommandConfirm(char const * __ptr64) __ptr64'::`18'::RefineHandler");
	SetCnet(0x01410CC5A8, 2, "`public: void __cdecl CDlgEnemyOptionFunc::OnCommandDelEnemy(char const * __ptr64) __ptr64'::`7'::DelEnmeyHandler");
	SetCnet(0x01410C7858, 3, "`public: void __cdecl CDlgDivination::OnCommand_Divination(char const * __ptr64) __ptr64'::`5'::ShowDetail");
	SetCnet(0x01410C3270, 3, "`public: void __cdecl CDlgCreate2020::StartScreenEffect(int) __ptr64'::`2'::CECCreateSwitchSceneTimer");
	SetCnet(0x01410C3148, 3, "`public: void __cdecl CDlgCreate2020::OnCommand_SelectProfession(char const * __ptr64) __ptr64'::`28'::CECProfDisplayTimer");
	SetCnet(0x01410BA9F8, 2, "`public: void __cdecl CDlgChat::OnCommand_speak(char const * __ptr64) __ptr64'::`96'::SendNorthLandData");
	SetCnet(0x01410BAA10, 2, "`public: void __cdecl CDlgChat::OnCommand_speak(char const * __ptr64) __ptr64'::`151'::SendAllianceChatData");
	SetCnet(0x01410C9240, 3, "`public: void __cdecl CDlgCaptureProgress::OnEventKeyDowm(unsigned __int64,__int64,AUIObject * __ptr64) __ptr64'::`20'::DelayClose");
	SetCnet(0x01410C9210, 2, "`public: void __cdecl CDlgCaptureDriftBottle::OnCommand_Broadcast(char const * __ptr64) __ptr64'::`2'::BroadcastBottleInfo");
	SetCnet(0x01410B6AE8, 3, "`public: void __cdecl CDlgCampTokenTree::UpdateOpenNode(unsigned char,unsigned char) __ptr64'::`4'::CECUpdateProbTimer");
	SetCnet(0x01410B6B40, 3, "`public: void __cdecl CDlgCampTokenTree::OnCommandUpgrade(char const * __ptr64) __ptr64'::`5'::CECEnableBtnTimer");
	SetCnet(0x01410B6B28, 2, "`public: void __cdecl CDlgCampTokenTree::OnCommandActive(char const * __ptr64) __ptr64'::`2'::ActiveNewNodeMsgHandler");
	SetCnet(0x01410B1910, 2, "`public: void __cdecl CDlgBibleRefineTrans::OnCommandTrans(char const * __ptr64) __ptr64'::`13'::CECBibleBindMessageBoxHandler");
	SetCnet(0x01410B0BD0, 2, "`public: void __cdecl CDlgBibleRefine::OnCommandRefine(char const * __ptr64) __ptr64'::`10'::CECBibleBindMessageBoxHandler");
	SetCnet(0x01410AE9B8, 2, "`public: void __cdecl CDlgAward::OnCommand_confirm(char const * __ptr64) __ptr64'::`30'::ChooseAwardMessageBoxHandler");
	SetCnet(0x01410AE9A0, 2, "`public: void __cdecl CDlgAward::OnCommand_confirm(char const * __ptr64) __ptr64'::`23'::SpendContributionMessageBoxHandler");
	SetCnet(0x01410AE988, 2, "`public: void __cdecl CDlgAward::OnCommand_confirm(char const * __ptr64) __ptr64'::`14'::ChooseAwardNPCMessageBoxHandler");
	SetCnet(0x01410AB898, 2, "`public: void __cdecl CDlgAstrolabe::CheckMoneyLocked(bool) __ptr64'::`2'::AstrolabeLockedMoneyMessageBoxHandler");
	SetCnet(0x01410A8DC0, 2, "`public: void __cdecl CDlgArenaSelfTeamInfo::OnCommandBtnLeaveTeam(char const * __ptr64) __ptr64'::`4'::LeaveTeamHandler");
	SetCnet(0x01410A8DD8, 2, "`public: void __cdecl CDlgArenaSelfTeamInfo::OnCommandBtnKickOut(char const * __ptr64) __ptr64'::`2'::KickOutTeamHandler");
	SetCnet(0x01410A9030, 2, "`public: void __cdecl CDlgArenaLeave::OnCommandBtnLeave(char const * __ptr64) __ptr64'::`4'::ArenaLeaveHandler");
	SetCnet(0x01410A88B8, 2, "`public: void __cdecl CDlgArenaInputTeamName::OnCommandBtnCreateTeam(char const * __ptr64) __ptr64'::`2'::CreateTeamHandler");
	SetCnet(0x01410A85D0, 2, "`public: void __cdecl CDlgArenaEnterTag::OnCommandBtnCancel(char const * __ptr64) __ptr64'::`2'::EnterTagHandler");
	SetCnet(0x01410A80A8, 2, "`public: void __cdecl CDlgArenaChooseMatch::OnCommandBtnQueue(char const * __ptr64) __ptr64'::`8'::PersonMatchHandler");
	SetCnet(0x01410A61A8, 2, "`public: void __cdecl CDlgAcrossServerMatchRet::OnCommand_Quit(char const * __ptr64) __ptr64'::`2'::SecondEnsure");
	SetCnet(0x01410A5FF0, 2, "`public: void __cdecl CDlgAcrossServerMatch::OnCommand_Cancel(char const * __ptr64) __ptr64'::`2'::ExitMatch");
	SetCnet(0x01410EC018, 2, "`public: virtual void __cdecl `public: void __cdecl CDlgGuildBattleDeclare::OnCommand_Declare(char const * __ptr64) __ptr64'::`28'::CECFactionHandler::OnMessageBox(bool) __ptr64'::`5'::GuildBattle");
	SetCnet(0x014113BB60, 2, "`public: virtual void __cdecl CECSkillUpGradeSkillHandler::OnMessageBox(bool) __ptr64'::`5'::UpgradeSkillMessageBoxHandler");
	SetCnet(0x01411D7258, 3, "`public: virtual void __cdecl CECRedPacketMediator::ProcessMessage(enumMediatorMessageType,ECMSG const & __ptr64) __ptr64'::`13'::UpdataUI");
	SetCnet(0x01411A8200, 2, "`public: virtual void __cdecl CECHomeObjControllerStateObjSelected::OnDelObj(void) __ptr64'::`2'::DelHomeObjHandler");
	SetCnet(0x01411A8A20, 2, "`public: virtual void __cdecl CECHomeObjControllerStateMultiSelect::OnDelObj(void) __ptr64'::`2'::DelHomeObjHandler");
	SetCnet(0x01410DB520, 2, "`public: virtual void __cdecl CDlgForceNPC::OnMessageBox(AUIDialog * __ptr64,int) __ptr64'::`11'::ForceJoinMessageBoxHandler");
	SetCnet(0x01411AEF00, 3, "`public: virtual bool __cdecl CECHPWorkMelee::Tick(unsigned long) __ptr64'::`31'::CECHPWorkPostTickCommand1");
	SetCnet(0x0141179070, 2, "`public: virtual bool __cdecl CECGameUIMan::OnMessageBox(int,AUIDialog * __ptr64) __ptr64'::`932'::MNFactionApplyMessageBoxHandler");
	SetCnet(0x0141179058, 2, "`public: virtual bool __cdecl CECGameUIMan::OnMessageBox(int,AUIDialog * __ptr64) __ptr64'::`693'::GDiplomacyReplyAgreeMessageBoxHandler");
	SetCnet(0x0141179040, 2, "`public: virtual bool __cdecl CECGameUIMan::OnMessageBox(int,AUIDialog * __ptr64) __ptr64'::`681'::GDiplomacyReplyAgreeMessageBoxHandler");
	SetCnet(0x0141178FB0, 2, "`public: virtual bool __cdecl CECGameUIMan::OnMessageBox(int,AUIDialog * __ptr64) __ptr64'::`68'::TeachSkillMessageBoxHandler");
	SetCnet(0x0141179028, 2, "`public: virtual bool __cdecl CECGameUIMan::OnMessageBox(int,AUIDialog * __ptr64) __ptr64'::`669'::GDiplomacyRelationRemoveApplyMessageBoxHandler");
	SetCnet(0x0141179010, 2, "`public: virtual bool __cdecl CECGameUIMan::OnMessageBox(int,AUIDialog * __ptr64) __ptr64'::`657'::GDiplomacyHostilityApplyMessageBoxHandler");
	SetCnet(0x0141178FF8, 2, "`public: virtual bool __cdecl CECGameUIMan::OnMessageBox(int,AUIDialog * __ptr64) __ptr64'::`645'::GDiplomacyAllianceApplyMessageBoxHandler");
	SetCnet(0x0141178FE0, 2, "`public: virtual bool __cdecl CECGameUIMan::OnMessageBox(int,AUIDialog * __ptr64) __ptr64'::`164'::FactionRepairMessageBoxHandler");
	SetCnet(0x0141178FC8, 2, "`public: virtual bool __cdecl CECGameUIMan::OnMessageBox(int,AUIDialog * __ptr64) __ptr64'::`155'::RepairAllMessageBoxHandler");
	SetCnet(0x0141170718, 1, "`public: static bool __cdecl CECFaceHighPoly::UpdateCustomCharTexture(CECFaceBase::LOAD_PLAYERHEAD_PARAM const & __ptr64,bool,A3DSkinModel * __ptr64,CustomChar * __ptr64)'::`2'::GenNormSuccessFunc");
	SetCnet(0x0141170708, 1, "`public: static bool __cdecl CECFaceHighPoly::UpdateCustomCharTexture(CECFaceBase::LOAD_PLAYERHEAD_PARAM const & __ptr64,bool,A3DSkinModel * __ptr64,CustomChar * __ptr64)'::`2'::GenDiffSuccessFunc");
	SetCnet(0x014121E8A0, 3, "`public: bool __cdecl TaskInterface::HasTopTaskRelatingWedding(abase::vector<unsigned long,abase::default_alloc> * __ptr64) __ptr64'::`2'::TaskWeddingChecker");
	SetCnet(0x014121E8C0, 3, "`public: bool __cdecl TaskInterface::HasTopTaskRelatingSpouse(abase::vector<unsigned long,abase::default_alloc> * __ptr64) __ptr64'::`2'::TaskSpouseChecker");
	SetCnet(0x014121E880, 3, "`public: bool __cdecl TaskInterface::HasTopTaskRelatingMarriage(abase::vector<unsigned long,abase::default_alloc> * __ptr64) __ptr64'::`2'::TaskMarriageChecker");
	SetCnet(0x014121E8E0, 3, "`public: bool __cdecl TaskInterface::HasTopTaskRelatingGender(abase::vector<unsigned long,abase::default_alloc> * __ptr64) __ptr64'::`2'::TaskGenderChecker");
	SetCnet(0x01411AD930, 3, "`public: bool __cdecl CECHostPlayer::Init(S2C::cmd_self_info_1 const & __ptr64) __ptr64'::`192'::CECCoupleDataTimer");
	SetCnet(0x014116DF68, 2, "`public: bool __cdecl CECEPWorkMan::FinishIdleWork(int) __ptr64'::`2'::CECEPIdleWorkMatcher");
	SetCnet(0x014116DF80, 2, "`public: bool __cdecl CECEPWorkMan::FinishCongregateWork(int) __ptr64'::`2'::CECEPCongregateWorkMatcher");
	SetCnet(0x0141168070, 2, "`public: bool __cdecl CECControlLoopAnimation::Tick(void) __ptr64'::`13'::FinishedCmd");
	SetCnet(0x0141168058, 2, "`public: bool __cdecl CECControlLoopAnimation::Tick(void) __ptr64'::`11'::OneRoundCmd");
	SetCnet(0x0141119E38, 2, "`public: bool __cdecl CDlgNPC::PopupCorrespondingServiceDialog(int,int,void * __ptr64) __ptr64'[::N]::NPCComplteTaskMessageBoxHandler");
	SetCnet(0x0141119E20, 2, "`public: bool __cdecl CDlgNPC::PopupCorrespondingServiceDialog(int,int,void * __ptr64) __ptr64'::`112'::NPCGiveTaskMessageBoxHandler");
	SetCnet(0x01411DB6F0, 2, "`public: CECSceneNPCID __cdecl CECSceneServiceNPC::FindWithSceneID(int)const __ptr64'::`2'::SceneServiceNPCFinder");
	SetCnet(0x0141165648, 2, "`public: CECSceneNPCID __cdecl CECCollectionMediator::FindIllustrationSevNPCID(void)const __ptr64'::`2'::SceneServiceNPCFinder");
	SetCnet(0x0141124BA8, 2, "`public: CECSceneNPCID __cdecl CDlgQShop::FindSelectSShopNPC(void)const __ptr64'::`2'::SceneServiceNPCFinder");
	SetCnet(0x01411AC150, 2, "`protected: void __cdecl CECHostPlayer::OnMsgHstSkillData(ECMSG const & __ptr64) __ptr64'::`7'::CECHPTraceSpellMatcher");
	SetCnet(0x01411ABFF8, 3, "`protected: void __cdecl CECHostPlayer::OnMsgHstPickupItem(ECMSG const & __ptr64) __ptr64'::`43'::CECDelayMoveItem");
	SetCnet(0x014114AF38, 2, "`protected: void __cdecl CDlgTurnOverCards::CheckFinish(void) __ptr64'::`13'::TunOverCardsMsgHandler");
	SetCnet(0x014113CD18, 3, "`protected: void __cdecl CDlgSlotMachine::ShowGameResult(void) __ptr64'::`2'::CECSlotMachineTimer");
	SetCnet(0x014111A068, 2, "`protected: void __cdecl CDlgNPC::SelectListItem(int) __ptr64'::`467'::ClearChangeCampCDMsgHandler");
	SetCnet(0x01410F81F8, 2, "`protected: void __cdecl CDlgHomeEditTerrianSub::OnCommandBtnDelTer(char const * __ptr64) __ptr64'::`2'::DelChooseHandler");
	SetCnet(0x01410F7FD8, 2, "`protected: void __cdecl CDlgHomeEditSurfaceSub::OnCommandBtnClearSurface(char const * __ptr64) __ptr64'::`2'::DelChooseHandler");
	SetCnet(0x01410F76E0, 2, "`protected: void __cdecl CDlgHomeEditGrassSub::OnCommandBtnClearSurface(char const * __ptr64) __ptr64'::`2'::DelChooseHandler");
	SetCnet(0x01410BAC30, 2, "`protected: void __cdecl CDlgChat::DoSendCountryMessageInMsgBox(int,int,bool,wchar_t const * __ptr64,bool) __ptr64'::`2'::DoSendCountryMsgMessageBoxHandler");
	SetCnet(0x01410E9760, 3, "`protected: virtual void __cdecl CDlgGuradianBeastHatch::OnTick(void) __ptr64'::`5'::NextAction");
	SetCnet(0x01411C8910, 2, "`protected: bool __cdecl CECNPCTalkMediator::PopupCorrespondingServiceDialog(int,int,void * __ptr64) __ptr64'::`32'::NPCTalkComplteTaskMessageBoxHandler");
	SetCnet(0x01411C88F8, 2, "`protected: bool __cdecl CECNPCTalkMediator::PopupCorrespondingServiceDialog(int,int,void * __ptr64) __ptr64'::`10'::NPCTalkGiveTaskMessageBoxHandler");
	SetCnet(0x0141122ED0, 2, "`private: void __cdecl CDlgProduce::BulkProduce(unsigned int,unsigned int,int) __ptr64'::`7'::ReProduceBoxHander");
	SetCnet(0x0141122EB8, 2, "`private: void __cdecl CDlgProduce::BulkProduce(unsigned int,unsigned int,int) __ptr64'::`5'::BatchProduce_BoxHander");
	SetCnet(0x0141122F00, 2, "`private: void __cdecl CDlgProduce::BulkCompose(unsigned int,unsigned int,int * __ptr64,int * __ptr64,int) __ptr64'::`7'::ReProduceBoxHander");
	SetCnet(0x0141122EE8, 2, "`private: void __cdecl CDlgProduce::BulkCompose(unsigned int,unsigned int,int * __ptr64,int * __ptr64,int) __ptr64'::`5'::BatchProduce_BoxHander");
	SetCnet(0x01410D6A50, 2, "`private: void __cdecl CDlgFactionShareMaster::ChangePage(int) __ptr64'::`7'::AskChangePageBox");
	SetCnet(0x0141162260, 2, "`private: int __cdecl CECBossRushMediator::FindBossrushAwardNPCID(void) __ptr64'::`2'::SceneServiceNPCFinder");
	SetCnet(0x01411E2648, 2, "`private: CECSceneNPCID __cdecl CECSoloTowerChallengeSelectLayerMediator::FindSelectLayerNPC(void)const __ptr64'::`2'::SceneServiceNPCFinder");
	SetCnet(0x01411E7640, 3, "`CECTimer * __ptr64 __cdecl CECUIHelper::DelayShowDialog(AUIDialog * __ptr64,bool,int)'::`2'::ShowDlgTimer");
	SetCnet(0x014124B298, 4, "_SGC::GFX_CUSTOM_PARAMBOLIC_MOVE_PARAM");
	SetCnet(0x014124B248, 4, "_SGC::GFX_CUSTOM_MOVE_PARAM");
	SetCnet(0x014124B2C0, 4, "_SGC::GFX_CUSTOM_MISSILE_MOVE_PARAM");
	SetCnet(0x014124B2E8, 4, "_SGC::GFX_CUSTOM_METEORIC_MOVE_PARAM");
	SetCnet(0x014124B270, 4, "_SGC::GFX_CUSTOM_LINK_MOVE_PARAM");
	SetCnet(0x014124B5D0, 7, "_SGC::CGfxRandMove");
	SetCnet(0x014124B390, 7, "_SGC::CGfxParabolicMove");
	SetCnet(0x014124B510, 7, "_SGC::CGfxOnTargetMove");
	SetCnet(0x014124B550, 7, "_SGC::CGfxOnTargetFixMove");
	SetCnet(0x014124B310, 7, "_SGC::CGfxMoveBase");
	SetCnet(0x014124B3D0, 7, "_SGC::CGfxMissileMove");
	SetCnet(0x014124B410, 7, "_SGC::CGfxMeteoricMove");
	SetCnet(0x014124B590, 7, "_SGC::CGfxLinkMove");
	SetCnet(0x014124B350, 7, "_SGC::CGfxLinearMove");
	SetCnet(0x014124B450, 7, "_SGC::CGfxHelixMove");
	SetCnet(0x014124B610, 7, "_SGC::CGfxCustomParabolicMove");
	SetCnet(0x014124B650, 7, "_SGC::CGfxCustomMissileMove");
	SetCnet(0x014124B690, 7, "_SGC::CGfxCustomMeteoricMove");
	SetCnet(0x014124B490, 7, "_SGC::CGfxCurvedMove");
	SetCnet(0x014124B4D0, 7, "_SGC::CGfxAccMove");
	SetCnet(0x01411C33F8, 9, "_SGC::CECAttSkillGfxMan");
	SetCnet(0x014115F978, 9, "_SGC::CECAttSkillGfxEvent");
	SetCnet(0x01411C3378, 9, "_SGC::A3DSkillGfxMan");
	SetCnet(0x014124B6D0, 9, "_SGC::A3DSkillGfxEvent");
	SetCnet(0x014109C668, 7, "WorldPosEditBoxItem");
	SetCnet(0x0141223590, 3, "WikiTaskDataProvider::Entity");
	SetCnet(0x01412235B0, 4, "WikiTaskDataProvider");
	SetCnet(0x0141223158, 3, "WikiSkillDataProvider::Entity");
	SetCnet(0x0141223178, 4, "WikiSkillDataProvider");
	SetCnet(0x0141222FD8, 3, "WikiSerialDataProvider::Entity");
	SetCnet(0x0141222FF8, 4, "WikiSerialDataProvider");
	SetCnet(0x014111B808, 3, "WikiSearcher::SearchCommand");
	SetCnet(0x014111B828, 4, "WikiSearcher::ContentProvider");
	SetCnet(0x0141223368, 6, "WikiSearcher");
	SetCnet(0x0141223678, 3, "WikiSearchTaskForGuide");
	SetCnet(0x0141223618, 3, "WikiSearchTaskBySpecificID");
	SetCnet(0x0141153898, 4, "WikiSearchTaskByName");
	SetCnet(0x01412235D8, 3, "WikiSearchTaskByMonster");
	SetCnet(0x0141223638, 3, "WikiSearchTaskByLevel");
	SetCnet(0x01412235F8, 3, "WikiSearchTaskByItemID");
	SetCnet(0x0141223658, 3, "WikiSearchTaskByClassLimit");
	SetCnet(0x0141222F90, 3, "WikiSearchSuite");
	SetCnet(0x01412231C0, 3, "WikiSearchSkillBySpecificID");
	SetCnet(0x0141153300, 4, "WikiSearchSkillByName");
	SetCnet(0x01412231A0, 3, "WikiSearchSkillByLevelRequire");
	SetCnet(0x01412231E0, 3, "WikiSearchSkillByClassLimit");
	SetCnet(0x01412230C8, 3, "WikiSearchRecipeByProductID");
	SetCnet(0x01412230E8, 3, "WikiSearchRecipeByMaterialID");
	SetCnet(0x0141223020, 3, "WikiSearchRandPropOnEquipment");
	SetCnet(0x01411533F8, 4, "WikiSearchNPCByService<WikiSearchNPCByServiceSkillChecker>");
	SetCnet(0x0141152818, 4, "WikiSearchNPCByService<WikiSearchNPCByServiceMakeChecker>");
	SetCnet(0x01412230A8, 3, "WikiSearchMonsterDropByItemID");
	SetCnet(0x0141150F48, 4, "WikiSearchMonsterByName");
	SetCnet(0x0141223130, 4, "WikiSearchItemByName");
	SetCnet(0x014114FCE0, 4, "WikiSearchFeatureByName");
	SetCnet(0x0141223200, 3, "WikiSearchFeatureByLevel");
	SetCnet(0x0141223220, 3, "WikiSearchEquipmentGuide");
	SetCnet(0x014114F698, 4, "WikiSearchEquipmentByName");
	SetCnet(0x0141223040, 3, "WikiSearchDropItemOnMonster");
	SetCnet(0x0141223088, 3, "WikiSearchBySpecificID");
	SetCnet(0x0141223108, 4, "WikiSearchByName");
	SetCnet(0x0141223240, 3, "WikiSearchAreaByLevel");
	SetCnet(0x0141150010, 3, "WikiSearchAll");
	SetCnet(0x01411526C8, 5, "WikiRecipeItemProvider");
	SetCnet(0x0141152690, 6, "WikiRecipeItemCache");
	SetCnet(0x01411532B0, 3, "WikiNPCSkillServiceProvider::Entity");
	SetCnet(0x01411532D0, 5, "WikiNPCSkillServiceProvider");
	SetCnet(0x0141153278, 6, "WikiNPCSkillCache");
	SetCnet(0x0141152608, 6, "WikiNPCMakingCache");
	SetCnet(0x0141152640, 3, "WikiNPCMakeServiceProvider::Entity");
	SetCnet(0x0141152660, 5, "WikiNPCMakeServiceProvider");
	SetCnet(0x0141150720, 5, "WikiItemProvider");
	SetCnet(0x0141222900, 7, "WikiItemProp");
	SetCnet(0x0141222178, 8, "WikiFileInterfaceImpl<AWScriptFile>");
	SetCnet(0x0141222130, 8, "WikiFileInterfaceImpl<AScriptFile>");
	SetCnet(0x01412220E8, 8, "WikiFileInterface");
	SetCnet(0x01412222B0, 18, "WikiEquipmentProp");
	SetCnet(0x0141222FB0, 4, "WikiEntityPtrProvider");
	SetCnet(0x01412232A0, 1, "WikiEntity::UserDataHolder<WikiItemProp>");
	SetCnet(0x0141223290, 1, "WikiEntity::UserDataHolder<WikiEquipmentProp>");
	SetCnet(0x01412232B0, 1, "WikiEntity::UserDataHolder<CECSkill>");
	SetCnet(0x01412232C0, 1, "WikiEntity::UserDataConstHolder<WikiGuideFeature>");
	SetCnet(0x01412232D0, 1, "WikiEntity::UserDataConstHolder<WikiGuideEqu>");
	SetCnet(0x01412232E0, 1, "WikiEntity::UserDataConstHolder<WikiGuideArea>");
	SetCnet(0x0141223280, 1, "WikiEntity::UserDataConstHolder<RECIPE_ESSENCE>");
	SetCnet(0x01412233C8, 1, "WikiEntity::UserDataConstHolder<NPC_ESSENCE>");
	SetCnet(0x0141223270, 1, "WikiEntity::UserDataConstHolder<MONSTER_ESSENCE>");
	SetCnet(0x0141222F70, 1, "WikiEntity::UserData");
	SetCnet(0x014111B7E8, 3, "WikiEntity");
	SetCnet(0x0141150030, 3, "WikiElementDataProvider::Entity");
	SetCnet(0x0141223060, 4, "WikiElementDataProvider");
	SetCnet(0x01412220D8, 1, "WikiDataReader");
	SetCnet(0x0141269378, 1, "WNDLIST");
	SetCnet(0x01411D2288, 5, "UseItemAction");
	SetCnet(0x01412596C0, 6, "UnActivedState");
	SetCnet(0x014126F518, 5, "UIRenderTarget");
	SetCnet(0x0141146ED8, 5, "TraceLinkCommand");
	SetCnet(0x0141149660, 9, "TokenShopItemByTask");
	SetCnet(0x0141149610, 9, "TokenShopItemBase");
	SetCnet(0x01411549F8, 2, "TipsHandle");
	SetCnet(0x01411FC578, 2, "Thread::Runnable");
	SetCnet(0x01411DB4F0, 3, "TerrLoaderModule");
	SetCnet(0x0141146E98, 5, "TaskNameHoverCommand");
	SetCnet(0x01411461D8, 2, "TaskListConfirmMessageBoxHandler");
	SetCnet(0x014121D500, 173, "TaskInterface");
	SetCnet(0x0141253760, 2, "TGraphTask<GfxTickAnimationTask>");
	SetCnet(0x0141253778, 2, "TGraphTask<GfxComputeVTXTask>");
	SetCnet(0x01412971B8, 2, "TGraphTask<FTriggerEventGraphTask>");
	SetCnet(0x01412971A0, 2, "TGraphTask<FReturnGraphTask>");
	SetCnet(0x01412971D0, 2, "TGraphTask<FNullGraphTask>");
	SetCnet(0x0141142C38, 5, "SysModClickShortcut");
	SetCnet(0x01410A5370, 1, "StackInfoCollection::CallerStackInfo");
	SetCnet(0x01410A5390, 4, "StackInfoCollection");
	SetCnet(0x01411E3218, 2, "SpringFesTaskTrigger");
	SetCnet(0x014125B898, 12, "SplineTrailList");
	SetCnet(0x0141250310, 2, "SoftKeyFrameDescNotify");
	SetCnet(0x014129A278, 11, "SmartCamera");
	SetCnet(0x01411C34B0, 5, "SkillGfxMan");
	SetCnet(0x014109C768, 7, "SimulatorEditBoxItem");
	SetCnet(0x014111B850, 3, "ShopDataProvider::Entity");
	SetCnet(0x014111B870, 4, "ShopDataProvider");
	SetCnet(0x014124D130, 4, "ShakeCamera2");
	SetCnet(0x014124D108, 4, "ShakeCamera");
	SetCnet(0x0141148308, 1, "ScopedDialogSpriteModify");
	SetCnet(0x0141148318, 1, "ScopedAUIControlSpriteModify");
	SetCnet(0x014124C020, 7, "SGCAttackPointMark");
	SetCnet(0x014124BEB8, 7, "SFX_INFO");
	SetCnet(0x014124BEF8, 5, "SFX_BINDING");
	SetCnet(0x01411E0C38, 9, "SCStateWaitingFeedback");
	SetCnet(0x01411E0BD0, 9, "SCStateToSendBuyCommand");
	SetCnet(0x01411E0B08, 9, "SCStateNoShoppingCart");
	SetCnet(0x01411E0B70, 9, "SCStateIdle");
	SetCnet(0x014128AD80, 2, "SCStandNotBind");
	SetCnet(0x014128AD98, 2, "SCStandAndBind");
	SetCnet(0x014128ADE0, 2, "SCSlideFree");
	SetCnet(0x014128ADF8, 2, "SCSlideCtrl");
	SetCnet(0x014128AE10, 2, "SCJumpStart");
	SetCnet(0x014128AE28, 2, "SCJumpOrInair");
	SetCnet(0x014128AE58, 2, "SCHanging");
	SetCnet(0x014128AE40, 2, "SCHangStart");
	SetCnet(0x014128AEA0, 2, "SCHangPost");
	SetCnet(0x014128AE88, 2, "SCHangEndJumping");
	SetCnet(0x014128AE70, 2, "SCHangEnd");
	SetCnet(0x014128ADB0, 2, "SCCtrlMoveNotBind");
	SetCnet(0x014128ADC8, 2, "SCCtrlMoveAndBind");
	SetCnet(0x014124D158, 1, "SANone");
	SetCnet(0x014124D178, 1, "SADampingQuadratic");
	SetCnet(0x014124D168, 1, "SADampingLinear");
	SetCnet(0x01410B6B60, 2, "RollbackTreeMsgHandler");
	SetCnet(0x0141120788, 2, "RestorePetMoneyMessageBoxHandler");
	SetCnet(0x01410AB378, 1, "ReportItemsFilter");
	SetCnet(0x0141253A50, 6, "RenderActionBase");
	SetCnet(0x0141253FC0, 1, "RandStringContainer");
	SetCnet(0x0141127AF8, 2, "RandPropMoneyMessageBoxHandler");
	SetCnet(0x01411D5348, 14, "RandMallShoppingState");
	SetCnet(0x01410E0888, 2, "RandMallShoppingObserver");
	SetCnet(0x01411D5570, 14, "RMSStateToRoll");
	SetCnet(0x01411D5460, 14, "RMSStateToQuery");
	SetCnet(0x01411D5680, 14, "RMSStateToPay");
	SetCnet(0x01411D5790, 14, "RMSStatePayed");
	SetCnet(0x01411D53D0, 14, "RMSStateNoConfig");
	SetCnet(0x01411D55F8, 14, "RMSStateInRoll");
	SetCnet(0x01411D54E8, 14, "RMSStateInQuery");
	SetCnet(0x01411D5708, 14, "RMSStateInPay");
	SetCnet(0x0141253AC0, 6, "RATriangleStrip");
	SetCnet(0x0141253A88, 6, "RATriangleList");
	SetCnet(0x0141253B30, 6, "RAPointList");
	SetCnet(0x0141253AF8, 6, "RAModelPrimitive");
	SetCnet(0x014115EF90, 3, "ProgressImageInitCallback");
	SetCnet(0x01410A5110, 4, "Process");
	SetCnet(0x01411556B0, 2, "PosConvertorWorld");
	SetCnet(0x01411272A0, 2, "PosConvertorRandomWar");
	SetCnet(0x01411556C8, 2, "PosConvertorDetail");
	SetCnet(0x01410C1ED8, 2, "PosConvertorCountryWar");
	SetCnet(0x014109C628, 7, "PlayerscoreEditBoxItem");
	SetCnet(0x014109C6A8, 7, "PlayerPosEditBoxItem");
	SetCnet(0x01411DB570, 3, "PlayerLoaderModule");
	SetCnet(0x01411D22B8, 5, "PickupAction");
	SetCnet(0x0141250328, 2, "PhysD6JointDriveInfo");
	SetCnet(0x01411CAD78, 45, "PGPInterface");
	SetCnet(0x0141249A90, 2, "OptStop");
	SetCnet(0x0141249A60, 2, "OptStart");
	SetCnet(0x0141249AA8, 2, "OptResume");
	SetCnet(0x0141249A78, 2, "OptPause");
	SetCnet(0x0141146F08, 5, "OpenHomeLinkCommand");
	SetCnet(0x014109C828, 7, "OpenDialogEditBoxItem");
	SetCnet(0x014111BC98, 8, "OfflineShopClickShortcut");
	SetCnet(0x01412870E8, 2, "NxUserTriggerReport");
	SetCnet(0x0141283A68, 4, "NxUserOutputStream");
	SetCnet(0x0141250268, 2, "NxUserContactReport");
	SetCnet(0x0141283A90, 8, "NxUserAllocator");
	SetCnet(0x0141286A50, 13, "NxStream");
	SetCnet(0x014128AB30, 3, "NxSphericalJointDesc");
	SetCnet(0x014124FA90, 3, "NxSphereShapeDesc");
	SetCnet(0x014124FA70, 3, "NxSphereForceFieldShapeDesc");
	SetCnet(0x014124FA30, 3, "NxShapeDesc");
	SetCnet(0x014128AAD0, 3, "NxRevoluteJointDesc");
	SetCnet(0x014128AAF0, 3, "NxPrismaticJointDesc");
	SetCnet(0x014128AAB0, 3, "NxPointInPlaneJointDesc");
	SetCnet(0x01412842A8, 3, "NxPlaneShapeDesc");
	SetCnet(0x0141250280, 3, "NxJointDesc");
	SetCnet(0x0141289288, 4, "NxHeightFieldShapeDesc");
	SetCnet(0x014124FA50, 3, "NxForceFieldShapeDesc");
	SetCnet(0x0141288E50, 7, "NxForceFieldKernelWind");
	SetCnet(0x0141288EF8, 7, "NxForceFieldKernelBossAura");
	SetCnet(0x0141288D68, 7, "NxForceFieldKernel");
	SetCnet(0x014128AB50, 3, "NxFixedJointDesc");
	SetCnet(0x014128A248, 3, "NxDistanceJointDesc");
	SetCnet(0x01412502A0, 3, "NxD6JointDesc");
	SetCnet(0x014128AB10, 3, "NxCylindricalJointDesc");
	SetCnet(0x0141286CA0, 3, "NxConvexShapeDesc");
	SetCnet(0x0141287670, 3, "NxConvexForceFieldShapeDesc");
	SetCnet(0x0141286C80, 3, "NxCapsuleShapeDesc");
	SetCnet(0x0141286C60, 3, "NxCapsuleForceFieldShapeDesc");
	SetCnet(0x0141259F48, 3, "NxBoxShapeDesc");
	SetCnet(0x0141259F28, 3, "NxBoxForceFieldShapeDesc");
	SetCnet(0x014125AB68, 6, "NormalLoader");
	SetCnet(0x01410AF970, 6, "NormalBarrageItem");
	SetCnet(0x01411DB550, 3, "NPCLoaderModule");
	SetCnet(0x01411E7398, 2, "MsgDataBase");
	SetCnet(0x01411E73B0, 2, "MsgDataAutoMove");
	SetCnet(0x01411D2228, 5, "MoveAction");
	SetCnet(0x01410A4A60, 4, "Mouse");
	SetCnet(0x0141259688, 6, "ModelState");
	SetCnet(0x01411D22E8, 5, "MeleeAction");
	SetCnet(0x014124C130, 7, "MaterialScaleTrans");
	SetCnet(0x014124BFB0, 7, "MaterialScaleChange");
	SetCnet(0x01411C4B58, 3, "MSRecruitQueryTimer");
	SetCnet(0x0141299988, 1, "MSObject::Transform::_TransformBase");
	SetCnet(0x0141299948, 1, "MSObject::Transform::Scale");
	SetCnet(0x0141299968, 1, "MSObject::Transform::Rotation");
	SetCnet(0x0141299998, 1, "MSObject::Transform::Position");
	SetCnet(0x0141299958, 1, "MSObject::Transform");
	SetCnet(0x01411C4B78, 3, "MSNameQueryTimer");
	SetCnet(0x01411C4BD0, 4, "MSListItemCmper::MENTOR_MORALITY_RANK_CMPER");
	SetCnet(0x01411C4B98, 2, "MSListItemCmper::MENTORING_REQUEST_CMPER");
	SetCnet(0x01411C4BF8, 2, "MSListItemCmper::GRADUATE_DATA_CMPER");
	SetCnet(0x01411C4BB0, 3, "MSListItemCmper::APPRENTICING_REQUEST_CMPER");
	SetCnet(0x0141253EE8, 5, "MODEL_SCALE_BINDING");
	SetCnet(0x0141253F18, 5, "MATTRANS_BINDING");
	SetCnet(0x014124BFF0, 5, "MATCHG_BINDING");
	SetCnet(0x01411DB4B0, 3, "LoaderThreadModul");
	SetCnet(0x0141103D70, 1, "ListboxItemsFilter");
	SetCnet(0x014125B900, 11, "LineTrailList");
	SetCnet(0x014125B960, 12, "LineTrailGravityList");
	SetCnet(0x0141279928, 3, "LDM_StackChange");
	SetCnet(0x0141279EF0, 3, "LDM_ShowBufferLine");
	SetCnet(0x01412798E8, 3, "LDM_SendWatchVar");
	SetCnet(0x0141279CE8, 3, "LDM_SendBuffer");
	SetCnet(0x01412798C8, 3, "LDM_SendAllLocalVar");
	SetCnet(0x0141279908, 3, "LDM_RunToCursor");
	SetCnet(0x0141279D28, 3, "LDM_RequestWatchVar");
	SetCnet(0x01412798A8, 3, "LDM_ReportError");
	SetCnet(0x0141279888, 3, "LDM_Interface");
	SetCnet(0x0141279948, 3, "LDM_BreakPoint");
	SetCnet(0x0141279D08, 3, "LDM_Break");
	SetCnet(0x01410E4380, 2, "LDBattle::CECRemovePrepareRoomMessageBoxHandler");
	SetCnet(0x01410E4368, 2, "LDBattle::CECCreateOffWarMessageBoxHandler");
	SetCnet(0x01411F0D88, 5, "Json::ValueAllocator");
	SetCnet(0x01411F0DB8, 5, "Json::DefaultValueAllocator");
	SetCnet(0x0141222940, 7, "ItemExtractor");
	SetCnet(0x0141126488, 1, "ItemDataExtractorQuickbar");
	SetCnet(0x0141179998, 1, "ItemDataExtractorDefault");
	SetCnet(0x0141106E40, 5, "InventoryClickShortcut");
	SetCnet(0x0141179988, 1, "InvalidItemsFilter");
	SetCnet(0x0141140038, 8, "InstallClickShortcut");
	SetCnet(0x01411D21F8, 5, "IdleAction");
	SetCnet(0x01410FF7B0, 2, "IconStateEvent_464");
	SetCnet(0x01410FF798, 2, "IconStateEventBase");
	SetCnet(0x01410FFBA0, 3, "IconStateDefault_New");
	SetCnet(0x01410FFB68, 3, "IconStateDefault");
	SetCnet(0x01410FFBE0, 3, "IconStateBigIcon2IntegersRange_New");
	SetCnet(0x01410FFBC0, 3, "IconStateBigIcon2IntegersRange");
	SetCnet(0x01410FFC20, 3, "IconStateBigIcon1Integer_New");
	SetCnet(0x01410FFC00, 3, "IconStateBigIcon1Integer");
	SetCnet(0x01410A7928, 2, "IconLayoutVerticalRightToLeft");
	SetCnet(0x01410A9558, 2, "IconLayoutVertical");
	SetCnet(0x01410A9570, 2, "IconLayoutBig");
	SetCnet(0x014125B838, 11, "ITrailList");
	SetCnet(0x014124D0E0, 4, "IShakeCamera");
	SetCnet(0x014124E968, 2, "IRenderEvent");
	SetCnet(0x014125A140, 9, "IPhysXFluidObjectDescCreator");
	SetCnet(0x014129A8B0, 3, "IPbData");
	SetCnet(0x0141249A48, 2, "IOperation");
	SetCnet(0x014110E820, 7, "IOnlineReminder");
	SetCnet(0x0141253088, 5, "IGFXPhysSyncData");
	SetCnet(0x0141249A30, 2, "IExitAction");
	SetCnet(0x01411CC3B8, 2, "IECTrigger");
	SetCnet(0x014109D120, 2, "IECTaskTrigger");
	SetCnet(0x014115A890, 11, "IECScriptUI");
	SetCnet(0x014115A3D0, 6, "IECScriptGlobalResource");
	SetCnet(0x0141164B10, 20, "IECBrowser");
	SetCnet(0x0141174E78, 27, "IAnmInstance");
	SetCnet(0x01410FD4C8, 2, "HomeWorkshopMessageBoxHandler");
	SetCnet(0x014109C6E8, 7, "HomeItemEditBoxItem");
	SetCnet(0x014112D4C0, 3, "HintDlgUsbKey");
	SetCnet(0x014112D4F0, 3, "HintDlgTooMoreCharacter");
	SetCnet(0x01411FCBC8, 1, "HIDUSBKEY::CUsbHidKeyFinder");
	SetCnet(0x01411FCBF8, 1, "HIDUSBKEY::CUsbHidKey");
	SetCnet(0x014109C7E8, 7, "GuildBattleHistoryEditBoxItem");
	SetCnet(0x014110A458, 2, "GiveUpTipsHandler");
	SetCnet(0x0141249E28, 2, "GfxWaitingAction");
	SetCnet(0x014124BDB8, 1, "GfxSoundParamInfo");
	SetCnet(0x014124C060, 7, "GfxScriptEvent");
	SetCnet(0x014124E990, 2, "GfxRenderEvent");
	SetCnet(0x0141249D88, 2, "GfxIdleAction");
	SetCnet(0x01410E01E8, 5, "GeneralCardStorageClickShortcut");
	SetCnet(0x0141140DA8, 5, "GeneralCardClickShortcut");
	SetCnet(0x014113B958, 8, "GNET::element_skill_array<std::pair<unsigned int,int> >");
	SetCnet(0x014120BF00, 10, "GNET::WorldChat");
	SetCnet(0x014120E5B8, 10, "GNET::WebTradeUpdate_Re");
	SetCnet(0x01411F9830, 10, "GNET::WebTradeUpdate");
	SetCnet(0x01411F9728, 10, "GNET::WebTradeRolePrePost");
	SetCnet(0x01411F97D8, 10, "GNET::WebTradeRolePreCancelPost");
	SetCnet(0x01411F9888, 10, "GNET::WebTradeRoleGetDetail");
	SetCnet(0x014120E370, 10, "GNET::WebTradePrePost_Re");
	SetCnet(0x01411F96D0, 10, "GNET::WebTradePrePost");
	SetCnet(0x014120E3C8, 10, "GNET::WebTradePreCancelPost_Re");
	SetCnet(0x01411F9780, 10, "GNET::WebTradePreCancelPost");
	SetCnet(0x014120E420, 10, "GNET::WebTradeList_Re");
	SetCnet(0x01411F9570, 10, "GNET::WebTradeList");
	SetCnet(0x014120E478, 10, "GNET::WebTradeGetItem_Re");
	SetCnet(0x01411F9620, 10, "GNET::WebTradeGetItem");
	SetCnet(0x014120E560, 10, "GNET::WebTradeGetDetail_Re");
	SetCnet(0x01411F9678, 10, "GNET::WebTradeGetDetail");
	SetCnet(0x014120E4D0, 10, "GNET::WebTradeAttendList_Re");
	SetCnet(0x01411F95C8, 10, "GNET::WebTradeAttendList");
	SetCnet(0x014120B3A0, 10, "GNET::WaitQueueStateNotify");
	SetCnet(0x014120EF08, 10, "GNET::UserCoupon_Re");
	SetCnet(0x014120EF60, 10, "GNET::UserCouponExchange_Re");
	SetCnet(0x01411F9518, 10, "GNET::UserCouponExchange");
	SetCnet(0x01411F94C0, 10, "GNET::UserCoupon");
	SetCnet(0x014120F010, 10, "GNET::UserAddCash_Re");
	SetCnet(0x01411F9D00, 10, "GNET::UserAddCash");
	SetCnet(0x014120D6F0, 10, "GNET::UpdateRemainTime");
	SetCnet(0x0141211018, 10, "GNET::UpdateEnemyList_Re");
	SetCnet(0x01412106D0, 10, "GNET::UniqueDataModifyBroadcast");
	SetCnet(0x014120B8F8, 10, "GNET::UndoDeleteRole_Re");
	SetCnet(0x01411F3158, 10, "GNET::UndoDeleteRole");
	SetCnet(0x014120CBA0, 10, "GNET::TradeSubmit_Re");
	SetCnet(0x01411F7B38, 10, "GNET::TradeSubmit");
	SetCnet(0x014120CA98, 10, "GNET::TradeStart_Re");
	SetCnet(0x014120B298, 6, "GNET::TradeStartRqstRes");
	SetCnet(0x014120B260, 6, "GNET::TradeStartRqstArg");
	SetCnet(0x014120B2D0, 14, "GNET::TradeStartRqst");
	SetCnet(0x01411F7A30, 10, "GNET::TradeStart");
	SetCnet(0x014120CB48, 10, "GNET::TradeRemoveGoods_Re");
	SetCnet(0x01411F7AE0, 10, "GNET::TradeRemoveGoods");
	SetCnet(0x014120CBF8, 10, "GNET::TradeMoveObj_Re");
	SetCnet(0x01411F7B90, 10, "GNET::TradeMoveObj");
	SetCnet(0x014120CD00, 10, "GNET::TradeEnd");
	SetCnet(0x014120CCA8, 10, "GNET::TradeDiscard_Re");
	SetCnet(0x01411F7C40, 10, "GNET::TradeDiscard");
	SetCnet(0x014120CC50, 10, "GNET::TradeConfirm_Re");
	SetCnet(0x01411F7BE8, 10, "GNET::TradeConfirm");
	SetCnet(0x014120CAF0, 10, "GNET::TradeAddGoods_Re");
	SetCnet(0x01411F7A88, 10, "GNET::TradeAddGoods");
	SetCnet(0x01411FC590, 2, "GNET::Timer::Observer");
	SetCnet(0x01410B9A30, 6, "GNET::TankBattlePlayerScoreInfo");
	SetCnet(0x0141210780, 10, "GNET::TankBattlePlayerGetRank_Re");
	SetCnet(0x01411FAA08, 10, "GNET::TankBattlePlayerGetRank");
	SetCnet(0x0141210728, 10, "GNET::TankBattlePlayerApply_Re");
	SetCnet(0x01411F3E68, 10, "GNET::SystemMonitorLog");
	SetCnet(0x014120E648, 10, "GNET::SysAuctionList_Re");
	SetCnet(0x01411F9A40, 10, "GNET::SysAuctionList");
	SetCnet(0x014120E6A0, 10, "GNET::SysAuctionGetItem_Re");
	SetCnet(0x01411F99E8, 10, "GNET::SysAuctionGetItem");
	SetCnet(0x014120E7A8, 10, "GNET::SysAuctionCashTransfer_Re");
	SetCnet(0x01411F9990, 10, "GNET::SysAuctionCashTransfer");
	SetCnet(0x014120E750, 10, "GNET::SysAuctionBid_Re");
	SetCnet(0x01411F9938, 10, "GNET::SysAuctionBid");
	SetCnet(0x014120E6F8, 10, "GNET::SysAuctionAccount_Re");
	SetCnet(0x01411F98E0, 10, "GNET::SysAuctionAccount");
	SetCnet(0x01411FC6F0, 5, "GNET::StreamIO");
	SetCnet(0x014120DCF8, 10, "GNET::StockTransaction_Re");
	SetCnet(0x014120DC10, 1, "GNET::StockPrice");
	SetCnet(0x014120DD50, 6, "GNET::StockOrder");
	SetCnet(0x014120DD88, 1, "GNET::StockLog");
	SetCnet(0x014120DC48, 10, "GNET::StockCommission_Re");
	SetCnet(0x01411F8DE0, 10, "GNET::StockCommission");
	SetCnet(0x014120DE18, 10, "GNET::StockCancel_Re");
	SetCnet(0x01411F8E38, 10, "GNET::StockCancel");
	SetCnet(0x014120DDC0, 10, "GNET::StockBill_Re");
	SetCnet(0x01411F8D88, 10, "GNET::StockBill");
	SetCnet(0x014120DCA0, 10, "GNET::StockAccount_Re");
	SetCnet(0x01411F8D30, 10, "GNET::StockAccount");
	SetCnet(0x014120BDF8, 10, "GNET::StatusAnnounce");
	SetCnet(0x01412167D8, 10, "GNET::SpouseSync");
	SetCnet(0x01411F44B0, 10, "GNET::SpouseSignIn");
	SetCnet(0x01411F4560, 10, "GNET::SpouseQuery");
	SetCnet(0x0141216888, 10, "GNET::SpouseMessage");
	SetCnet(0x0141216830, 10, "GNET::SpouseLastLoginQuery_Re");
	SetCnet(0x01411F4508, 10, "GNET::SpouseLastLoginQuery");
	SetCnet(0x0141216768, 6, "GNET::SpouseDivorceData");
	SetCnet(0x01411F4400, 10, "GNET::SpouseDivorceConfirm");
	SetCnet(0x01411F4458, 10, "GNET::SpouseDivorceCancel");
	SetCnet(0x01412167A0, 6, "GNET::SpouseData");
	SetCnet(0x0141210B60, 6, "GNET::SoloChallengeRankData");
	SetCnet(0x014120BC08, 10, "GNET::SetUIConfig_Re");
	SetCnet(0x01411F3498, 10, "GNET::SetUIConfig");
	SetCnet(0x014120BCB8, 10, "GNET::SetHelpStates_Re");
	SetCnet(0x01411F38E8, 10, "GNET::SetHelpStates");
	SetCnet(0x014120C730, 10, "GNET::SetGroupName_Re");
	SetCnet(0x01411F7D48, 10, "GNET::SetGroupName");
	SetCnet(0x014120C788, 10, "GNET::SetFriendGroup_Re");
	SetCnet(0x01411F7DA0, 10, "GNET::SetFriendGroup");
	SetCnet(0x014120B9E0, 10, "GNET::SetCustomData_Re");
	SetCnet(0x01411F3440, 10, "GNET::SetCustomData");
	SetCnet(0x014120F1A0, 10, "GNET::SendAUMail_Re");
	SetCnet(0x01411F7EA8, 10, "GNET::SendAUMail");
	SetCnet(0x014120DA00, 10, "GNET::SellPoint_Re");
	SetCnet(0x014120D9C8, 1, "GNET::SellPointInfo");
	SetCnet(0x01411F90F8, 10, "GNET::SellPoint");
	SetCnet(0x014120DB60, 10, "GNET::SellCancel_Re");
	SetCnet(0x01411F9150, 10, "GNET::SellCancel");
	SetCnet(0x014120B988, 10, "GNET::SelectRole_Re");
	SetCnet(0x01411F30A8, 10, "GNET::SelectRole");
	SetCnet(0x0141160718, 7, "GNET::Security");
	SetCnet(0x01411FB0C8, 3, "GNET::STLContainer<std::vector<unsigned int,std::allocator<unsigned int> > >");
	SetCnet(0x0141212938, 3, "GNET::STLContainer<std::vector<unsigned char,std::allocator<unsigned char> > >");
	SetCnet(0x01411629B8, 3, "GNET::STLContainer<std::vector<int,std::allocator<int> > >");
	SetCnet(0x014116DB58, 3, "GNET::STLContainer<std::vector<char,std::allocator<char> > >");
	SetCnet(0x014115C898, 3, "GNET::STLContainer<std::vector<__int64,std::allocator<__int64> > >");
	SetCnet(0x014119EE78, 3, "GNET::STLContainer<std::vector<GNET::TankBattlePlayerScoreInfo,std::allocator<GNET::TankBattlePlayerScoreInfo> > >");
	SetCnet(0x01412129F8, 3, "GNET::STLContainer<std::vector<GNET::StockPrice,std::allocator<GNET::StockPrice> > >");
	SetCnet(0x0141212A18, 3, "GNET::STLContainer<std::vector<GNET::StockOrder,std::allocator<GNET::StockOrder> > >");
	SetCnet(0x0141212A38, 3, "GNET::STLContainer<std::vector<GNET::StockLog,std::allocator<GNET::StockLog> > >");
	SetCnet(0x0141212B58, 3, "GNET::STLContainer<std::vector<GNET::SoloChallengeRankData,std::allocator<GNET::SoloChallengeRankData> > >");
	SetCnet(0x01412129D8, 3, "GNET::STLContainer<std::vector<GNET::SellPointInfo,std::allocator<GNET::SellPointInfo> > >");
	SetCnet(0x01412128F8, 3, "GNET::STLContainer<std::vector<GNET::RoleInfo,std::allocator<GNET::RoleInfo> > >");
	SetCnet(0x01412127D8, 3, "GNET::STLContainer<std::vector<GNET::RewardItem,std::allocator<GNET::RewardItem> > >");
	SetCnet(0x0141212A58, 3, "GNET::STLContainer<std::vector<GNET::ReferralBrief,std::allocator<GNET::ReferralBrief> > >");
	SetCnet(0x01411D7050, 3, "GNET::STLContainer<std::vector<GNET::RedEnvelopeGrabInfo,std::allocator<GNET::RedEnvelopeGrabInfo> > >");
	SetCnet(0x0141216EE0, 3, "GNET::STLContainer<std::vector<GNET::RedBookRankClientData,std::allocator<GNET::RedBookRankClientData> > >");
	SetCnet(0x01412126F8, 3, "GNET::STLContainer<std::vector<GNET::QPDiscountLevel,std::allocator<GNET::QPDiscountLevel> > >");
	SetCnet(0x01412126D8, 3, "GNET::STLContainer<std::vector<GNET::QPDiscountInfo,std::allocator<GNET::QPDiscountInfo> > >");
	SetCnet(0x0141212B18, 3, "GNET::STLContainer<std::vector<GNET::ProfileMatchResult,std::allocator<GNET::ProfileMatchResult> > >");
	SetCnet(0x0141212718, 3, "GNET::STLContainer<std::vector<GNET::PlayerConsumeInfo,std::allocator<GNET::PlayerConsumeInfo> > >");
	SetCnet(0x01412128B8, 3, "GNET::STLContainer<std::vector<GNET::PlayerBriefInfo,std::allocator<GNET::PlayerBriefInfo> > >");
	SetCnet(0x0141212658, 3, "GNET::STLContainer<std::vector<GNET::PShopItemEntry,std::allocator<GNET::PShopItemEntry> > >");
	SetCnet(0x0141212698, 3, "GNET::STLContainer<std::vector<GNET::PShopItem,std::allocator<GNET::PShopItem> > >");
	SetCnet(0x0141212678, 3, "GNET::STLContainer<std::vector<GNET::PShopEntry,std::allocator<GNET::PShopEntry> > >");
	SetCnet(0x01411F5490, 3, "GNET::STLContainer<std::vector<GNET::Octets,std::allocator<GNET::Octets> > >");
	SetCnet(0x0141212838, 3, "GNET::STLContainer<std::vector<GNET::Message,std::allocator<GNET::Message> > >");
	SetCnet(0x0141216F00, 3, "GNET::STLContainer<std::vector<GNET::MasterApprenticeTopListData,std::allocator<GNET::MasterApprenticeTopListData> > >");
	SetCnet(0x0141216F40, 3, "GNET::STLContainer<std::vector<GNET::MasterApprenticeRecruitBriefData,std::allocator<GNET::MasterApprenticeRecruitBriefData> > >");
	SetCnet(0x0141216F20, 3, "GNET::STLContainer<std::vector<GNET::MasterApprenticeRecruitApplyData,std::allocator<GNET::MasterApprenticeRecruitApplyData> > >");
	SetCnet(0x01412125D8, 3, "GNET::STLContainer<std::vector<GNET::MNFactionBriefInfo,std::allocator<GNET::MNFactionBriefInfo> > >");
	SetCnet(0x01412125F8, 3, "GNET::STLContainer<std::vector<GNET::MNFactionApplyData,std::allocator<GNET::MNFactionApplyData> > >");
	SetCnet(0x0141212618, 3, "GNET::STLContainer<std::vector<GNET::MNDomainData,std::allocator<GNET::MNDomainData> > >");
	SetCnet(0x0141212498, 3, "GNET::STLContainer<std::vector<GNET::MNBattleInfo,std::allocator<GNET::MNBattleInfo> > >");
	SetCnet(0x01412124D8, 3, "GNET::STLContainer<std::vector<GNET::LDTeamInfo,std::allocator<GNET::LDTeamInfo> > >");
	SetCnet(0x01412124B8, 3, "GNET::STLContainer<std::vector<GNET::LDDomainInfo,std::allocator<GNET::LDDomainInfo> > >");
	SetCnet(0x01412126B8, 3, "GNET::STLContainer<std::vector<GNET::KECandidate,std::allocator<GNET::KECandidate> > >");
	SetCnet(0x0141212918, 3, "GNET::STLContainer<std::vector<GNET::IntOctets,std::allocator<GNET::IntOctets> > >");
	SetCnet(0x0141212598, 3, "GNET::STLContainer<std::vector<GNET::HomeVisitorInfoData,std::allocator<GNET::HomeVisitorInfoData> > >");
	SetCnet(0x01411A5200, 3, "GNET::STLContainer<std::vector<GNET::HomeModule,std::allocator<GNET::HomeModule> > >");
	SetCnet(0x01411A6F98, 3, "GNET::STLContainer<std::vector<GNET::HomeMirrorRankingInfo,std::allocator<GNET::HomeMirrorRankingInfo> > >");
	SetCnet(0x01411A5220, 3, "GNET::STLContainer<std::vector<GNET::HomeItem,std::allocator<GNET::HomeItem> > >");
	SetCnet(0x01411AB210, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterShowPoint,std::allocator<GNET::HomeGuardMonsterShowPoint> > >");
	SetCnet(0x01410E8C30, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterMagicAttributeData,std::allocator<GNET::HomeGuardMonsterMagicAttributeData> > >");
	SetCnet(0x01411AB230, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterData,std::allocator<GNET::HomeGuardMonsterData> > >");
	SetCnet(0x01411A0FA0, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterBriefData,std::allocator<GNET::HomeGuardMonsterBriefData> > >");
	SetCnet(0x01410E8C10, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterBattleData,std::allocator<GNET::HomeGuardMonsterBattleData> > >");
	SetCnet(0x01411A6848, 3, "GNET::STLContainer<std::vector<GNET::HomeEquipment,std::allocator<GNET::HomeEquipment> > >");
	SetCnet(0x01411A5240, 3, "GNET::STLContainer<std::vector<GNET::HomeCropper,std::allocator<GNET::HomeCropper> > >");
	SetCnet(0x0141212A78, 3, "GNET::STLContainer<std::vector<GNET::GWebTradeItem,std::allocator<GNET::GWebTradeItem> > >");
	SetCnet(0x0141212638, 3, "GNET::STLContainer<std::vector<GNET::GUniqueDataElemNode,std::allocator<GNET::GUniqueDataElemNode> > >");
	SetCnet(0x0141212978, 3, "GNET::STLContainer<std::vector<GNET::GTerritory,std::allocator<GNET::GTerritory> > >");
	SetCnet(0x0141212A98, 3, "GNET::STLContainer<std::vector<GNET::GSysAuctionItem,std::allocator<GNET::GSysAuctionItem> > >");
	SetCnet(0x0141212738, 3, "GNET::STLContainer<std::vector<GNET::GSendAUMailRecord,std::allocator<GNET::GSendAUMailRecord> > >");
	SetCnet(0x01410A40B8, 3, "GNET::STLContainer<std::vector<GNET::GRoleInventory,std::allocator<GNET::GRoleInventory> > >");
	SetCnet(0x01412128D8, 3, "GNET::STLContainer<std::vector<GNET::GRoleForbid,std::allocator<GNET::GRoleForbid> > >");
	SetCnet(0x014110DDE8, 3, "GNET::STLContainer<std::vector<GNET::GMailHeader,std::allocator<GNET::GMailHeader> > >");
	SetCnet(0x01412127F8, 3, "GNET::STLContainer<std::vector<GNET::GMPlayerInfo,std::allocator<GNET::GMPlayerInfo> > >");
	SetCnet(0x01411A0FC0, 3, "GNET::STLContainer<std::vector<GNET::GHomeBatteleRecordData,std::allocator<GNET::GHomeBatteleRecordData> > >");
	SetCnet(0x0141212858, 3, "GNET::STLContainer<std::vector<GNET::GGroupInfo,std::allocator<GNET::GGroupInfo> > >");
	SetCnet(0x0141212878, 3, "GNET::STLContainer<std::vector<GNET::GFriendInfo,std::allocator<GNET::GFriendInfo> > >");
	SetCnet(0x0141212758, 3, "GNET::STLContainer<std::vector<GNET::GFriendExtInfo,std::allocator<GNET::GFriendExtInfo> > >");
	SetCnet(0x01411AA380, 3, "GNET::STLContainer<std::vector<GNET::GFoundryFormulasData,std::allocator<GNET::GFoundryFormulasData> > >");
	SetCnet(0x01411AA360, 3, "GNET::STLContainer<std::vector<GNET::GFoundryFormulas,std::allocator<GNET::GFoundryFormulas> > >");
	SetCnet(0x0141212B38, 3, "GNET::STLContainer<std::vector<GNET::GFactionResourceBattleRecord,std::allocator<GNET::GFactionResourceBattleRecord> > >");
	SetCnet(0x0141212778, 3, "GNET::STLContainer<std::vector<GNET::GFactionRelationApply,std::allocator<GNET::GFactionRelationApply> > >");
	SetCnet(0x0141212798, 3, "GNET::STLContainer<std::vector<GNET::GFactionHostile,std::allocator<GNET::GFactionHostile> > >");
	SetCnet(0x0141212AB8, 3, "GNET::STLContainer<std::vector<GNET::GFactionFortressBriefInfo,std::allocator<GNET::GFactionFortressBriefInfo> > >");
	SetCnet(0x0141212AD8, 3, "GNET::STLContainer<std::vector<GNET::GFactionFortressBattleInfo,std::allocator<GNET::GFactionFortressBattleInfo> > >");
	SetCnet(0x01412127B8, 3, "GNET::STLContainer<std::vector<GNET::GFactionAlliance,std::allocator<GNET::GFactionAlliance> > >");
	SetCnet(0x01412125B8, 3, "GNET::STLContainer<std::vector<GNET::GEnemyList,std::allocator<GNET::GEnemyList> > >");
	SetCnet(0x01411FB0E8, 3, "GNET::STLContainer<std::vector<GNET::GCountryBattleLimit,std::allocator<GNET::GCountryBattleLimit> > >");
	SetCnet(0x0141212AF8, 3, "GNET::STLContainer<std::vector<GNET::GCountryBattleDomain,std::allocator<GNET::GCountryBattleDomain> > >");
	SetCnet(0x0141212818, 3, "GNET::STLContainer<std::vector<GNET::GChatRoom,std::allocator<GNET::GChatRoom> > >");
	SetCnet(0x01410B8358, 3, "GNET::STLContainer<std::vector<GNET::GChatMember,std::allocator<GNET::GChatMember> > >");
	SetCnet(0x0141212998, 3, "GNET::STLContainer<std::vector<GNET::GBattleChallenge,std::allocator<GNET::GBattleChallenge> > >");
	SetCnet(0x0141212958, 3, "GNET::STLContainer<std::vector<GNET::GAuctionItem,std::allocator<GNET::GAuctionItem> > >");
	SetCnet(0x01411A6868, 3, "GNET::STLContainer<std::vector<GNET::Formulas,std::allocator<GNET::Formulas> > >");
	SetCnet(0x01411725C0, 3, "GNET::STLContainer<std::vector<GNET::FactionTarget,std::allocator<GNET::FactionTarget> > >");
	SetCnet(0x0141172540, 3, "GNET::STLContainer<std::vector<GNET::FactionTalentTreeActiveData,std::allocator<GNET::FactionTalentTreeActiveData> > >");
	SetCnet(0x01411FB0A8, 3, "GNET::STLContainer<std::vector<GNET::FactionStoreHouseExchangeItemData,std::allocator<GNET::FactionStoreHouseExchangeItemData> > >");
	SetCnet(0x01411725A0, 3, "GNET::STLContainer<std::vector<GNET::FactionRewardMaterialData,std::allocator<GNET::FactionRewardMaterialData> > >");
	SetCnet(0x0141212558, 3, "GNET::STLContainer<std::vector<GNET::FactionRecruitClientData,std::allocator<GNET::FactionRecruitClientData> > >");
	SetCnet(0x0141212578, 3, "GNET::STLContainer<std::vector<GNET::FactionRecruitApply,std::allocator<GNET::FactionRecruitApply> > >");
	SetCnet(0x0141172560, 3, "GNET::STLContainer<std::vector<GNET::FactionPrivilegeDelegate,std::allocator<GNET::FactionPrivilegeDelegate> > >");
	SetCnet(0x01411DEA48, 3, "GNET::STLContainer<std::vector<GNET::FactionOpDivideNewPageData,std::allocator<GNET::FactionOpDivideNewPageData> > >");
	SetCnet(0x0141172580, 3, "GNET::STLContainer<std::vector<GNET::FactionMemberAward,std::allocator<GNET::FactionMemberAward> > >");
	SetCnet(0x01411A3198, 3, "GNET::STLContainer<std::vector<GNET::FactionFieldBattleHistoryData,std::allocator<GNET::FactionFieldBattleHistoryData> > >");
	SetCnet(0x01411A31B8, 3, "GNET::STLContainer<std::vector<GNET::FactionFieldBattleAllianceRequestData,std::allocator<GNET::FactionFieldBattleAllianceRequestData> > >");
	SetCnet(0x01411A3178, 3, "GNET::STLContainer<std::vector<GNET::FactionFieldBattleAllianceData,std::allocator<GNET::FactionFieldBattleAllianceData> > >");
	SetCnet(0x0141212538, 3, "GNET::STLContainer<std::vector<GNET::FactionDivideMaterialData,std::allocator<GNET::FactionDivideMaterialData> > >");
	SetCnet(0x0141212518, 3, "GNET::STLContainer<std::vector<GNET::FactionDivideMaterialClientData,std::allocator<GNET::FactionDivideMaterialClientData> > >");
	SetCnet(0x01411DEA28, 3, "GNET::STLContainer<std::vector<GNET::FactionDivideHouseLeftItemGetData,std::allocator<GNET::FactionDivideHouseLeftItemGetData> > >");
	SetCnet(0x01411DEA08, 3, "GNET::STLContainer<std::vector<GNET::FactionDivideHouseItemGetData,std::allocator<GNET::FactionDivideHouseItemGetData> > >");
	SetCnet(0x01411A3158, 3, "GNET::STLContainer<std::vector<GNET::FactionCrossBriefInfo,std::allocator<GNET::FactionCrossBriefInfo> > >");
	SetCnet(0x01411A31D8, 3, "GNET::STLContainer<std::vector<GNET::FactionCrossBattleHistoryData,std::allocator<GNET::FactionCrossBattleHistoryData> > >");
	SetCnet(0x0141212898, 3, "GNET::STLContainer<std::vector<GNET::FMemberInfo,std::allocator<GNET::FMemberInfo> > >");
	SetCnet(0x01412124F8, 3, "GNET::STLContainer<std::vector<GNET::CustomizedLogData,std::allocator<GNET::CustomizedLogData> > >");
	SetCnet(0x0141216E80, 3, "GNET::STLContainer<std::vector<GNET::CrossMatchTeamChip,std::allocator<GNET::CrossMatchTeamChip> > >");
	SetCnet(0x0141216EA0, 3, "GNET::STLContainer<std::vector<GNET::CrossMatchPlayer,std::allocator<GNET::CrossMatchPlayer> > >");
	SetCnet(0x01412129B8, 3, "GNET::STLContainer<std::vector<GNET::ChallengeWish,std::allocator<GNET::ChallengeWish> > >");
	SetCnet(0x01410B58D8, 3, "GNET::STLContainer<std::vector<GNET::CampRankData,std::allocator<GNET::CampRankData> > >");
	SetCnet(0x0141216EC0, 3, "GNET::STLContainer<std::vector<GNET::CampKillRankData,std::allocator<GNET::CampKillRankData> > >");
	SetCnet(0x01411063F8, 3, "GNET::STLContainer<std::vector<GNET::BottleReply,std::allocator<GNET::BottleReply> > >");
	SetCnet(0x01411063D8, 3, "GNET::STLContainer<std::vector<GNET::BookBottleReply,std::allocator<GNET::BookBottleReply> > >");
	SetCnet(0x014115EB18, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeamTopList,std::allocator<GNET::ArenaTeamTopList> > >");
	SetCnet(0x014115D160, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeamSync,std::allocator<GNET::ArenaTeamSync> > >");
	SetCnet(0x0141216FE0, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeamMemberOnlineInfo,std::allocator<GNET::ArenaTeamMemberOnlineInfo> > >");
	SetCnet(0x014115C878, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeamMember,std::allocator<GNET::ArenaTeamMember> > >");
	SetCnet(0x014115DC40, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeam,std::allocator<GNET::ArenaTeam> > >");
	SetCnet(0x014115EB38, 3, "GNET::STLContainer<std::vector<GNET::ArenaPlayerTopList,std::allocator<GNET::ArenaPlayerTopList> > >");
	SetCnet(0x014115D180, 3, "GNET::STLContainer<std::vector<GNET::ArenaPlayerSync,std::allocator<GNET::ArenaPlayerSync> > >");
	SetCnet(0x014115DC20, 3, "GNET::STLContainer<std::vector<GNET::ArenaPlayer,std::allocator<GNET::ArenaPlayer> > >");
	SetCnet(0x0141216F80, 3, "GNET::STLContainer<std::vector<GNET::ApprenticeLeaveData,std::allocator<GNET::ApprenticeLeaveData> > >");
	SetCnet(0x0141216FA0, 3, "GNET::STLContainer<std::vector<GNET::ApprenticeHistoryData,std::allocator<GNET::ApprenticeHistoryData> > >");
	SetCnet(0x0141216FC0, 3, "GNET::STLContainer<std::vector<GNET::ApprenticeData,std::allocator<GNET::ApprenticeData> > >");
	SetCnet(0x0141216F60, 3, "GNET::STLContainer<std::vector<GNET::ApprenticeBriefData,std::allocator<GNET::ApprenticeBriefData> > >");
	SetCnet(0x01411A3218, 3, "GNET::STLContainer<std::map<unsigned int,GNET::FactionFieldBattleDetailData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,GNET::FactionFieldBattleDetailData> > > >");
	SetCnet(0x01411A5280, 3, "GNET::STLContainer<std::map<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > > >");
	SetCnet(0x01411A5260, 3, "GNET::STLContainer<std::map<int,GNET::Octets,std::less<int>,std::allocator<std::pair<int const ,GNET::Octets> > > >");
	SetCnet(0x0141212B78, 3, "GNET::STLContainer<std::map<int,GNET::GDriftBottle,std::less<int>,std::allocator<std::pair<int const ,GNET::GDriftBottle> > > >");
	SetCnet(0x0141217000, 3, "GNET::STLContainer<std::map<int,GNET::FactionFieldBattlePlayerInfo,std::less<int>,std::allocator<std::pair<int const ,GNET::FactionFieldBattlePlayerInfo> > > >");
	SetCnet(0x01411A31F8, 3, "GNET::STLContainer<std::map<int,GNET::FactionCrossBattleDetailData,std::less<int>,std::allocator<std::pair<int const ,GNET::FactionCrossBattleDetailData> > > >");
	SetCnet(0x0141212B98, 3, "GNET::STLContainer<std::map<__int64,GNET::Octets,std::less<__int64>,std::allocator<std::pair<__int64 const ,GNET::Octets> > > >");
	SetCnet(0x01411F9D58, 6, "GNET::SSOUser");
	SetCnet(0x014120F2C0, 10, "GNET::SSOGetTicket_Re");
	SetCnet(0x01411F9D90, 10, "GNET::SSOGetTicket");
	SetCnet(0x01411FC5D8, 7, "GNET::SHA256Hash");
	SetCnet(0x0141211E98, 6, "GNET::RpcDataVector<unsigned int>");
	SetCnet(0x014120B950, 6, "GNET::RpcDataVector<unsigned char>");
	SetCnet(0x01411628E8, 6, "GNET::RpcDataVector<int>");
	SetCnet(0x014116DB08, 6, "GNET::RpcDataVector<char>");
	SetCnet(0x0141185688, 6, "GNET::RpcDataVector<GNET::TankBattlePlayerScoreInfo>");
	SetCnet(0x014120B7B8, 6, "GNET::RpcDataVector<GNET::RoleInfo>");
	SetCnet(0x014120E1F8, 6, "GNET::RpcDataVector<GNET::RewardItem>");
	SetCnet(0x01411D6FD0, 6, "GNET::RpcDataVector<GNET::RedEnvelopeGrabInfo>");
	SetCnet(0x0141216918, 6, "GNET::RpcDataVector<GNET::RedBookRankClientData>");
	SetCnet(0x014120F750, 6, "GNET::RpcDataVector<GNET::QPDiscountLevel>");
	SetCnet(0x014120F7C0, 6, "GNET::RpcDataVector<GNET::QPDiscountInfo>");
	SetCnet(0x014120F230, 6, "GNET::RpcDataVector<GNET::PlayerConsumeInfo>");
	SetCnet(0x014120BD68, 6, "GNET::RpcDataVector<GNET::PlayerBriefInfo>");
	SetCnet(0x01412104B0, 6, "GNET::RpcDataVector<GNET::PShopItemEntry>");
	SetCnet(0x0141210200, 6, "GNET::RpcDataVector<GNET::PShopItem>");
	SetCnet(0x01412103E8, 6, "GNET::RpcDataVector<GNET::PShopEntry>");
	SetCnet(0x014120D1E8, 6, "GNET::RpcDataVector<GNET::Octets>");
	SetCnet(0x014120C8C8, 6, "GNET::RpcDataVector<GNET::Message>");
	SetCnet(0x0141216628, 6, "GNET::RpcDataVector<GNET::MasterApprenticeTopListData>");
	SetCnet(0x0141216498, 6, "GNET::RpcDataVector<GNET::MasterApprenticeRecruitBriefData>");
	SetCnet(0x0141216560, 6, "GNET::RpcDataVector<GNET::MasterApprenticeRecruitApplyData>");
	SetCnet(0x0141210E68, 6, "GNET::RpcDataVector<GNET::MNFactionBriefInfo>");
	SetCnet(0x0141210C98, 6, "GNET::RpcDataVector<GNET::MNFactionApplyData>");
	SetCnet(0x0141210C60, 6, "GNET::RpcDataVector<GNET::MNDomainData>");
	SetCnet(0x01412122A8, 6, "GNET::RpcDataVector<GNET::MNBattleInfo>");
	SetCnet(0x01412121E0, 6, "GNET::RpcDataVector<GNET::LDTeamInfo>");
	SetCnet(0x01412120F8, 6, "GNET::RpcDataVector<GNET::LDDomainInfo>");
	SetCnet(0x014120FC10, 6, "GNET::RpcDataVector<GNET::KECandidate>");
	SetCnet(0x0141210888, 6, "GNET::RpcDataVector<GNET::IntOctets>");
	SetCnet(0x01412112D0, 6, "GNET::RpcDataVector<GNET::HomeVisitorInfoData>");
	SetCnet(0x01411A5190, 1, "GNET::RpcDataVector<GNET::HomeModule>");
	SetCnet(0x01411A6F60, 6, "GNET::RpcDataVector<GNET::HomeMirrorRankingInfo>");
	SetCnet(0x01411A5120, 6, "GNET::RpcDataVector<GNET::HomeItem>");
	SetCnet(0x01411AB0C8, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterShowPoint>");
	SetCnet(0x01410E86A8, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterMagicAttributeData>");
	SetCnet(0x01411AB090, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterData>");
	SetCnet(0x01411A0E30, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterBriefData>");
	SetCnet(0x01410E8718, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterBattleData>");
	SetCnet(0x01411A6748, 6, "GNET::RpcDataVector<GNET::HomeEquipment>");
	SetCnet(0x01411A50E8, 6, "GNET::RpcDataVector<GNET::HomeCropper>");
	SetCnet(0x0141210698, 6, "GNET::RpcDataVector<GNET::GUniqueDataElemNode>");
	SetCnet(0x014120F110, 6, "GNET::RpcDataVector<GNET::GSendAUMailRecord>");
	SetCnet(0x01410A3AA0, 6, "GNET::RpcDataVector<GNET::GRoleInventory>");
	SetCnet(0x014120BA90, 6, "GNET::RpcDataVector<GNET::GRoleForbid>");
	SetCnet(0x014110DC98, 6, "GNET::RpcDataVector<GNET::GMailHeader>");
	SetCnet(0x014120CDE8, 6, "GNET::RpcDataVector<GNET::GMPlayerInfo>");
	SetCnet(0x01411A0D88, 6, "GNET::RpcDataVector<GNET::GHomeBatteleRecordData>");
	SetCnet(0x014120C668, 6, "GNET::RpcDataVector<GNET::GGroupInfo>");
	SetCnet(0x014120C6A0, 6, "GNET::RpcDataVector<GNET::GFriendInfo>");
	SetCnet(0x014120F0D8, 6, "GNET::RpcDataVector<GNET::GFriendExtInfo>");
	SetCnet(0x01411AA260, 6, "GNET::RpcDataVector<GNET::GFoundryFormulasData>");
	SetCnet(0x01411AA2D0, 6, "GNET::RpcDataVector<GNET::GFoundryFormulas>");
	SetCnet(0x014120ED18, 6, "GNET::RpcDataVector<GNET::GFactionRelationApply>");
	SetCnet(0x014120ECE0, 6, "GNET::RpcDataVector<GNET::GFactionHostile>");
	SetCnet(0x014120ECA8, 6, "GNET::RpcDataVector<GNET::GFactionAlliance>");
	SetCnet(0x0141211070, 6, "GNET::RpcDataVector<GNET::GEnemyList>");
	SetCnet(0x014120CA08, 6, "GNET::RpcDataVector<GNET::GChatRoom>");
	SetCnet(0x01410B81C0, 6, "GNET::RpcDataVector<GNET::GChatMember>");
	SetCnet(0x01411A6780, 6, "GNET::RpcDataVector<GNET::Formulas>");
	SetCnet(0x0141172338, 6, "GNET::RpcDataVector<GNET::FactionTarget>");
	SetCnet(0x0141172488, 6, "GNET::RpcDataVector<GNET::FactionTalentTreeActiveData>");
	SetCnet(0x01411F8408, 6, "GNET::RpcDataVector<GNET::FactionStoreHouseExchangeItemData>");
	SetCnet(0x01411723A8, 6, "GNET::RpcDataVector<GNET::FactionRewardMaterialData>");
	SetCnet(0x0141211AC8, 6, "GNET::RpcDataVector<GNET::FactionRecruitClientData>");
	SetCnet(0x0141211A00, 6, "GNET::RpcDataVector<GNET::FactionRecruitApply>");
	SetCnet(0x0141172370, 6, "GNET::RpcDataVector<GNET::FactionPrivilegeDelegate>");
	SetCnet(0x01411DE6A0, 6, "GNET::RpcDataVector<GNET::FactionOpDivideNewPageData>");
	SetCnet(0x0141172300, 6, "GNET::RpcDataVector<GNET::FactionMemberAward>");
	SetCnet(0x01411A2F20, 6, "GNET::RpcDataVector<GNET::FactionFieldBattleHistoryData>");
	SetCnet(0x01411A2FC8, 6, "GNET::RpcDataVector<GNET::FactionFieldBattleAllianceRequestData>");
	SetCnet(0x01411A2EB0, 6, "GNET::RpcDataVector<GNET::FactionFieldBattleAllianceData>");
	SetCnet(0x0141211DD0, 6, "GNET::RpcDataVector<GNET::FactionDivideMaterialData>");
	SetCnet(0x0141211D40, 6, "GNET::RpcDataVector<GNET::FactionDivideMaterialClientData>");
	SetCnet(0x01411DE7B8, 6, "GNET::RpcDataVector<GNET::FactionDivideHouseLeftItemGetData>");
	SetCnet(0x01411DE780, 6, "GNET::RpcDataVector<GNET::FactionDivideHouseItemGetData>");
	SetCnet(0x01411A3070, 6, "GNET::RpcDataVector<GNET::FactionCrossBriefInfo>");
	SetCnet(0x01411A2DD0, 6, "GNET::RpcDataVector<GNET::FactionCrossBattleHistoryData>");
	SetCnet(0x014120C0F0, 6, "GNET::RpcDataVector<GNET::FMemberInfo>");
	SetCnet(0x0141211F08, 6, "GNET::RpcDataVector<GNET::CustomizedLogData>");
	SetCnet(0x0141216D60, 6, "GNET::RpcDataVector<GNET::CrossMatchTeamChip>");
	SetCnet(0x0141216CF0, 6, "GNET::RpcDataVector<GNET::CrossMatchPlayer>");
	SetCnet(0x01410B56A8, 6, "GNET::RpcDataVector<GNET::CampRankData>");
	SetCnet(0x0141216A38, 6, "GNET::RpcDataVector<GNET::CampKillRankData>");
	SetCnet(0x0141105F58, 6, "GNET::RpcDataVector<GNET::BottleReply>");
	SetCnet(0x0141106330, 6, "GNET::RpcDataVector<GNET::BookBottleReply>");
	SetCnet(0x014115EAE0, 6, "GNET::RpcDataVector<GNET::ArenaTeamTopList>");
	SetCnet(0x014115D080, 6, "GNET::RpcDataVector<GNET::ArenaTeamSync>");
	SetCnet(0x0141215D80, 6, "GNET::RpcDataVector<GNET::ArenaTeamMemberOnlineInfo>");
	SetCnet(0x014115C648, 6, "GNET::RpcDataVector<GNET::ArenaTeamMember>");
	SetCnet(0x014115DBB0, 6, "GNET::RpcDataVector<GNET::ArenaTeam>");
	SetCnet(0x014115EA70, 6, "GNET::RpcDataVector<GNET::ArenaPlayerTopList>");
	SetCnet(0x014115D048, 6, "GNET::RpcDataVector<GNET::ArenaPlayerSync>");
	SetCnet(0x014115DBE8, 6, "GNET::RpcDataVector<GNET::ArenaPlayer>");
	SetCnet(0x01412161E8, 6, "GNET::RpcDataVector<GNET::ApprenticeLeaveData>");
	SetCnet(0x01412161B0, 6, "GNET::RpcDataVector<GNET::ApprenticeHistoryData>");
	SetCnet(0x0141216178, 6, "GNET::RpcDataVector<GNET::ApprenticeData>");
	SetCnet(0x01412162E8, 6, "GNET::RpcDataVector<GNET::ApprenticeBriefData>");
	SetCnet(0x014120AFC0, 3, "GNET::Rpc::XID");
	SetCnet(0x01411FD450, 2, "GNET::Rpc::HouseKeeper");
	SetCnet(0x014120AFE0, 14, "GNET::Rpc");
	SetCnet(0x014120BF58, 10, "GNET::RoleStatusAnnounce");
	SetCnet(0x014120B7F0, 10, "GNET::RoleList_Re");
	SetCnet(0x01411F3260, 10, "GNET::RoleList");
	SetCnet(0x01410A3AD8, 6, "GNET::RoleInfo");
	SetCnet(0x014120E2E0, 10, "GNET::RewardMatureNotice");
	SetCnet(0x014120E1C0, 1, "GNET::RewardItem");
	SetCnet(0x01411F3050, 10, "GNET::Response");
	SetCnet(0x0141216950, 10, "GNET::ReqRedBookRank_Re");
	SetCnet(0x01411F39F0, 10, "GNET::ReportChat");
	SetCnet(0x014120D0E0, 10, "GNET::Report2GM_Re");
	SetCnet(0x01411F35F8, 10, "GNET::Report2GM");
	SetCnet(0x014120E0D8, 6, "GNET::ReferralBrief");
	SetCnet(0x014120E080, 10, "GNET::RefWithdrawBonus_Re");
	SetCnet(0x01411F93B8, 10, "GNET::RefWithdrawBonus");
	SetCnet(0x014120E110, 10, "GNET::RefListReferrals_Re");
	SetCnet(0x01411F9360, 10, "GNET::RefListReferrals");
	SetCnet(0x014120E168, 10, "GNET::RefGetReferenceCode_Re");
	SetCnet(0x01411F9308, 10, "GNET::RefGetReferenceCode");
	SetCnet(0x0141211518, 10, "GNET::RedEnvelopeTakeLeft_Re");
	SetCnet(0x01411DDAB8, 10, "GNET::RedEnvelopeTakeLeft");
	SetCnet(0x01412114C0, 10, "GNET::RedEnvelopeLatestGet_Re");
	SetCnet(0x01411DDA60, 10, "GNET::RedEnvelopeLatestGet");
	SetCnet(0x0141211410, 10, "GNET::RedEnvelopeGrab_Re");
	SetCnet(0x01411D6F98, 6, "GNET::RedEnvelopeGrabInfo");
	SetCnet(0x01411DDA08, 10, "GNET::RedEnvelopeGrab");
	SetCnet(0x0141211468, 10, "GNET::RedEnvelopeErrNotice");
	SetCnet(0x01412113B8, 10, "GNET::RedEnvelopeDeliver_Re");
	SetCnet(0x01411DD9B0, 10, "GNET::RedEnvelopeDeliver");
	SetCnet(0x01412115C8, 10, "GNET::RedEnvelopeDataUpdate");
	SetCnet(0x0141211570, 10, "GNET::RedEnvelopeCancel_Re");
	SetCnet(0x01411DDB10, 10, "GNET::RedEnvelopeCancel");
	SetCnet(0x01411D7008, 6, "GNET::RedEnvelope");
	SetCnet(0x01412168E0, 6, "GNET::RedBookRankClientData");
	SetCnet(0x01411F2FD0, 7, "GNET::Random");
	SetCnet(0x0141216E28, 10, "GNET::QueryWardrobeInfo");
	SetCnet(0x014120D190, 10, "GNET::QueryUserPrivilege_Re");
	SetCnet(0x01411FD690, 11, "GNET::QQClient");
	SetCnet(0x014120F850, 10, "GNET::QPGetActivatedServices_Re");
	SetCnet(0x01411FA348, 10, "GNET::QPGetActivatedServices");
	SetCnet(0x014120F718, 1, "GNET::QPDiscountLevel");
	SetCnet(0x014120F788, 6, "GNET::QPDiscountInfo");
	SetCnet(0x014120F7F8, 10, "GNET::QPAnnounceDiscount");
	SetCnet(0x014120F8A8, 10, "GNET::QPAddCash_Re");
	SetCnet(0x01411FA2F0, 10, "GNET::QPAddCash");
	SetCnet(0x01411F3310, 10, "GNET::PublicChat");
	SetCnet(0x01411FD3F8, 10, "GNET::ProtocolBinder");
	SetCnet(0x01411FC8E0, 2, "GNET::Protocol::Task");
	SetCnet(0x01411FC808, 1, "GNET::Protocol::Manager::Session::Stream");
	SetCnet(0x01411FC818, 12, "GNET::Protocol::Manager::Session");
	SetCnet(0x01411FC880, 11, "GNET::Protocol::Manager");
	SetCnet(0x01410A3A10, 10, "GNET::Protocol");
	SetCnet(0x0141210598, 1, "GNET::ProfileMatchResult");
	SetCnet(0x01411F33C0, 10, "GNET::PrivateChat");
	SetCnet(0x014120D3D8, 10, "GNET::PreserveMail_Re");
	SetCnet(0x01411F8968, 10, "GNET::PreserveMail");
	SetCnet(0x01411FD2A0, 2, "GNET::PollIO::Task");
	SetCnet(0x01411FD2B8, 5, "GNET::PollControl");
	SetCnet(0x01411F3AA0, 10, "GNET::PlayerSendMassMail");
	SetCnet(0x014120D430, 10, "GNET::PlayerSendMail_Re");
	SetCnet(0x01411F88B8, 10, "GNET::PlayerSendMail");
	SetCnet(0x01411FAB10, 10, "GNET::PlayerRequiteFriend");
	SetCnet(0x014120FAF0, 10, "GNET::PlayerRename_Re");
	SetCnet(0x01411FA9B0, 10, "GNET::PlayerProfileSetProfileData");
	SetCnet(0x0141210540, 10, "GNET::PlayerProfileGetProfileData_Re");
	SetCnet(0x01411FA8C8, 10, "GNET::PlayerProfileGetProfileData");
	SetCnet(0x01412105D0, 10, "GNET::PlayerProfileGetMatchResult_Re");
	SetCnet(0x01411FA920, 10, "GNET::PlayerProfileGetMatchResult");
	SetCnet(0x01411FA978, 6, "GNET::PlayerProfileData");
	SetCnet(0x014120F938, 6, "GNET::PlayerPositionResetRqstRes");
	SetCnet(0x014120F900, 6, "GNET::PlayerPositionResetRqstArg");
	SetCnet(0x014120F970, 14, "GNET::PlayerPositionResetRqst");
	SetCnet(0x014120FB48, 10, "GNET::PlayerNameUpdate");
	SetCnet(0x014120BE50, 10, "GNET::PlayerLogout");
	SetCnet(0x014120FD50, 10, "GNET::PlayerGivePresent_Re");
	SetCnet(0x014120F1F8, 1, "GNET::PlayerConsumeInfo");
	SetCnet(0x014120FA40, 10, "GNET::PlayerChangeDS_Re");
	SetCnet(0x01411D6308, 6, "GNET::PlayerBriefInfo");
	SetCnet(0x014120BB00, 10, "GNET::PlayerBaseInfo_Re");
	SetCnet(0x014120BB58, 10, "GNET::PlayerBaseInfoCRC_Re");
	SetCnet(0x014120B348, 10, "GNET::PlayerBaseInfoCRC");
	SetCnet(0x01411F3368, 10, "GNET::PlayerBaseInfo");
	SetCnet(0x014120FDA8, 10, "GNET::PlayerAskForPresent_Re");
	SetCnet(0x0141210918, 10, "GNET::PlayerAccuse_Re");
	SetCnet(0x01411F3A48, 10, "GNET::PlayerAccuse");
	SetCnet(0x01412100A0, 10, "GNET::PShopSetType_Re");
	SetCnet(0x01411FA870, 10, "GNET::PShopSetType");
	SetCnet(0x014120FF40, 10, "GNET::PShopSell_Re");
	SetCnet(0x01411FA818, 10, "GNET::PShopSell");
	SetCnet(0x01412102C8, 10, "GNET::PShopSelfGet_Re");
	SetCnet(0x01411FA7C0, 10, "GNET::PShopSelfGet");
	SetCnet(0x0141210048, 10, "GNET::PShopPlayerSell_Re");
	SetCnet(0x01411FA768, 10, "GNET::PShopPlayerSell");
	SetCnet(0x0141210358, 10, "GNET::PShopPlayerGet_Re");
	SetCnet(0x01411FA710, 10, "GNET::PShopPlayerGet");
	SetCnet(0x014120FFF0, 10, "GNET::PShopPlayerBuy_Re");
	SetCnet(0x01411FA6B8, 10, "GNET::PShopPlayerBuy");
	SetCnet(0x0141210150, 10, "GNET::PShopManageFund_Re");
	SetCnet(0x01411FA660, 10, "GNET::PShopManageFund");
	SetCnet(0x0141210420, 10, "GNET::PShopList_Re");
	SetCnet(0x01412104E8, 10, "GNET::PShopListItem_Re");
	SetCnet(0x01411FA608, 10, "GNET::PShopListItem");
	SetCnet(0x01411FA5B0, 10, "GNET::PShopList");
	SetCnet(0x0141210478, 6, "GNET::PShopItemEntry");
	SetCnet(0x014120FEB0, 6, "GNET::PShopItem");
	SetCnet(0x01412103B0, 6, "GNET::PShopEntry");
	SetCnet(0x01412101A8, 10, "GNET::PShopDrawItem_Re");
	SetCnet(0x01411FA558, 10, "GNET::PShopDrawItem");
	SetCnet(0x0141210290, 6, "GNET::PShopDetail");
	SetCnet(0x014120FE58, 10, "GNET::PShopCreate_Re");
	SetCnet(0x01411FA500, 10, "GNET::PShopCreate");
	SetCnet(0x0141210238, 10, "GNET::PShopClearGoods_Re");
	SetCnet(0x01411FA4A8, 10, "GNET::PShopClearGoods");
	SetCnet(0x014120FF98, 10, "GNET::PShopCancelGoods_Re");
	SetCnet(0x01411FA450, 10, "GNET::PShopCancelGoods");
	SetCnet(0x014120FEE8, 10, "GNET::PShopBuy_Re");
	SetCnet(0x01411FA3F8, 10, "GNET::PShopBuy");
	SetCnet(0x0141210320, 6, "GNET::PShopBase");
	SetCnet(0x01412100F8, 10, "GNET::PShopActive_Re");
	SetCnet(0x01411FA3A0, 10, "GNET::PShopActive");
	SetCnet(0x014120B760, 10, "GNET::OnlineAnnounce");
	SetCnet(0x01411FD2F8, 7, "GNET::NullSecurity");
	SetCnet(0x01411FC618, 12, "GNET::NetSession");
	SetCnet(0x01411FC6C0, 5, "GNET::NetIO");
	SetCnet(0x01411FC958, 11, "GNET::NetClient");
	SetCnet(0x014120C890, 1, "GNET::Message");
	SetCnet(0x01411F9200, 10, "GNET::MatrixResponse");
	SetCnet(0x014120DF20, 10, "GNET::MatrixChallenge");
	SetCnet(0x0141216258, 10, "GNET::MasterQuery_Re");
	SetCnet(0x0141216220, 6, "GNET::MasterQueryData");
	SetCnet(0x01411F4140, 10, "GNET::MasterKickoutApprentice");
	SetCnet(0x01411C4C10, 6, "GNET::MasterHistoryData");
	SetCnet(0x01411F42A0, 10, "GNET::MasterCancelKickoutApprentice");
	SetCnet(0x0141216660, 10, "GNET::MasterApprenticeTopListQuery_Re");
	SetCnet(0x01411F42F8, 10, "GNET::MasterApprenticeTopListQuery");
	SetCnet(0x01412165F0, 6, "GNET::MasterApprenticeTopListData");
	SetCnet(0x0141216598, 10, "GNET::MasterApprenticeSelfRecruitApplyQuery_Re");
	SetCnet(0x01411F41F0, 10, "GNET::MasterApprenticeSelfRecruitApplyQuery");
	SetCnet(0x0141216710, 10, "GNET::MasterApprenticeSelfRecruitApplyBriefQuery_Re");
	SetCnet(0x01411F43A8, 10, "GNET::MasterApprenticeSelfRecruitApplyBriefQuery");
	SetCnet(0x01412164D0, 10, "GNET::MasterApprenticeRecruitQuery_Re");
	SetCnet(0x01411F4198, 10, "GNET::MasterApprenticeRecruitQuery");
	SetCnet(0x0141216460, 6, "GNET::MasterApprenticeRecruitBriefData");
	SetCnet(0x0141216528, 1, "GNET::MasterApprenticeRecruitApplyData");
	SetCnet(0x01411F4090, 10, "GNET::MasterApprenticeQuery");
	SetCnet(0x0141216408, 10, "GNET::MasterApprenticeOnlineQuery_Re");
	SetCnet(0x01411F40E8, 10, "GNET::MasterApprenticeOnlineQuery");
	SetCnet(0x01412163B0, 10, "GNET::MasterApprenticeErrorMessage");
	SetCnet(0x014109C028, 1, "GNET::Marshal::OctetsStream");
	SetCnet(0x0141210EA0, 10, "GNET::MNGetTopList_Re");
	SetCnet(0x0141210E10, 10, "GNET::MNGetTopList");
	SetCnet(0x0141210D28, 10, "GNET::MNGetPlayerLastEnterInfo_Re");
	SetCnet(0x01411FABC0, 10, "GNET::MNGetPlayerLastEnterInfo");
	SetCnet(0x0141210F88, 10, "GNET::MNGetFactionInfo_Re");
	SetCnet(0x01411FAC18, 10, "GNET::MNGetFactionInfo");
	SetCnet(0x0141210DB8, 10, "GNET::MNGetFactionBriefInfo_Re");
	SetCnet(0x01411FAC70, 10, "GNET::MNGetFactionBriefInfo");
	SetCnet(0x0141210CD0, 10, "GNET::MNGetDomainData_Re");
	SetCnet(0x01411FAB68, 10, "GNET::MNGetDomainData");
	SetCnet(0x0141210F50, 6, "GNET::MNFactionInfo");
	SetCnet(0x0141210D80, 6, "GNET::MNFactionBriefInfo");
	SetCnet(0x0141210EF8, 10, "GNET::MNFactionBattleApply_Re");
	SetCnet(0x0141210C28, 1, "GNET::MNFactionApplyData");
	SetCnet(0x0141210BF0, 6, "GNET::MNDomainData");
	SetCnet(0x01411F3FE0, 10, "GNET::MNBattleListRequest");
	SetCnet(0x01412122E0, 10, "GNET::MNBattleListNotice");
	SetCnet(0x0141212270, 1, "GNET::MNBattleInfo");
	SetCnet(0x0141160758, 7, "GNET::MD5Hash");
	SetCnet(0x0141211678, 10, "GNET::LotteryTicketLuckyAwardBroadCast");
	SetCnet(0x0141211620, 10, "GNET::LotteryTicketFloorInfoGet_Re");
	SetCnet(0x01411FAED8, 10, "GNET::LotteryTicketFloorInfoGet");
	SetCnet(0x01411F3EC0, 6, "GNET::LDTeamInfo");
	SetCnet(0x0141216BD0, 6, "GNET::LDRoomInfo");
	SetCnet(0x01411F3EF8, 6, "GNET::LDDomainInfo");
	SetCnet(0x0141216C60, 10, "GNET::LDBattleUpdateRoomList");
	SetCnet(0x0141212218, 10, "GNET::LDBattleTeamClientNotice");
	SetCnet(0x0141216C08, 10, "GNET::LDBattleRoomState");
	SetCnet(0x01411F4610, 10, "GNET::LDBattleRoomPrepare");
	SetCnet(0x0141212440, 10, "GNET::LDBattlePersonList");
	SetCnet(0x01411F3F30, 10, "GNET::LDBattleListOperate");
	SetCnet(0x0141212130, 10, "GNET::LDBattleListClientNotice");
	SetCnet(0x0141212188, 10, "GNET::LDBattleEnterNotice");
	SetCnet(0x0141216B78, 10, "GNET::LDBattleClientState");
	SetCnet(0x0141216B20, 10, "GNET::LDBattleClientOperateNotice");
	SetCnet(0x01411F4668, 10, "GNET::LDBattleClientOperate");
	SetCnet(0x01410A3B10, 10, "GNET::KeyReestablish");
	SetCnet(0x014120B678, 10, "GNET::KeyExchange");
	SetCnet(0x01411FC9B8, 10, "GNET::KeepAlive");
	SetCnet(0x014120FCF8, 10, "GNET::KEVoting_Re");
	SetCnet(0x01411FA240, 10, "GNET::KEVoting");
	SetCnet(0x014120FBA0, 6, "GNET::KEKing");
	SetCnet(0x014120FC48, 10, "GNET::KEGetStatus_Re");
	SetCnet(0x01411FA298, 10, "GNET::KEGetStatus");
	SetCnet(0x014120FCA0, 10, "GNET::KECandidateApply_Re");
	SetCnet(0x01411FA1E8, 10, "GNET::KECandidateApply");
	SetCnet(0x014120FBD8, 1, "GNET::KECandidate");
	SetCnet(0x014120B058, 6, "GNET::IntOctets");
	SetCnet(0x01411FAE28, 10, "GNET::HomeVisitorQuery");
	SetCnet(0x0141211298, 6, "GNET::HomeVisitorInfoData");
	SetCnet(0x0141211308, 10, "GNET::HomeVisitorInfo");
	SetCnet(0x01411DD430, 10, "GNET::HomeUpgrade");
	SetCnet(0x01411DD850, 10, "GNET::HomeUnEquipItem");
	SetCnet(0x01411AB138, 6, "GNET::HomeSyncNoticeClientData");
	SetCnet(0x0141211190, 10, "GNET::HomeSyncNoticeClient");
	SetCnet(0x01411DDBC0, 10, "GNET::HomeStorehouseTakeOut");
	SetCnet(0x01411DD958, 10, "GNET::HomeSkinUpdate");
	SetCnet(0x01411DD4E0, 10, "GNET::HomeSetPrivilege");
	SetCnet(0x01412111E8, 10, "GNET::HomeSceneElements");
	SetCnet(0x01411DDB68, 10, "GNET::HomeResourceTransform");
	SetCnet(0x01411DD7A0, 10, "GNET::HomeResourceProduceCancel");
	SetCnet(0x01411DD748, 10, "GNET::HomeResourceProduce");
	SetCnet(0x01411DD6F0, 10, "GNET::HomeResourceHarvest");
	SetCnet(0x01411DD5E8, 10, "GNET::HomeResourceGetInfo");
	SetCnet(0x01411DD640, 10, "GNET::HomeResourceFactoryUpgrade");
	SetCnet(0x01411DD698, 10, "GNET::HomeResourceFactoryStorage");
	SetCnet(0x01411DD2D0, 10, "GNET::HomeRemoveFoundryFormulas");
	SetCnet(0x01411DD488, 10, "GNET::HomeReceiveFoundryMoney");
	SetCnet(0x01411DD900, 10, "GNET::HomeReSelectFactoryType");
	SetCnet(0x01411DD590, 10, "GNET::HomeReName");
	SetCnet(0x01411FAD20, 10, "GNET::HomeQuery");
	SetCnet(0x01411DD3D8, 10, "GNET::HomePurchaseUpgrade");
	SetCnet(0x01411DD380, 10, "GNET::HomePurchaseProduce");
	SetCnet(0x01411DD278, 10, "GNET::HomePublishFoundryFormulas");
	SetCnet(0x01411A67B8, 6, "GNET::HomeProperty");
	SetCnet(0x01411DD8A8, 10, "GNET::HomePraise");
	SetCnet(0x01411A5158, 1, "GNET::HomeModule");
	SetCnet(0x01412117D8, 10, "GNET::HomeMirrorSyncToClient");
	SetCnet(0x01411A6F28, 6, "GNET::HomeMirrorRankingInfo");
	SetCnet(0x01411DE140, 10, "GNET::HomeMirrorOperate");
	SetCnet(0x01411DD7F8, 10, "GNET::HomeMapUnlock");
	SetCnet(0x01411DDED8, 10, "GNET::HomeLadderQuery");
	SetCnet(0x01412116D0, 10, "GNET::HomeLadderClientNotify");
	SetCnet(0x01411A5078, 1, "GNET::HomeItem");
	SetCnet(0x01411DE090, 10, "GNET::HomeGuardMonsterWinRewardGet");
	SetCnet(0x01411DDD20, 10, "GNET::HomeGuardMonsterUpgrade");
	SetCnet(0x01411DDC70, 10, "GNET::HomeGuardMonsterShuffleAttribute");
	SetCnet(0x01411DDDD0, 10, "GNET::HomeGuardMonsterShowPointTakeDown");
	SetCnet(0x01411DDD78, 10, "GNET::HomeGuardMonsterShowPointHang");
	SetCnet(0x01411AB058, 1, "GNET::HomeGuardMonsterShowPoint");
	SetCnet(0x01411DE038, 10, "GNET::HomeGuardMonsterScoreRewardGet");
	SetCnet(0x01410E8670, 1, "GNET::HomeGuardMonsterMagicAttributeData");
	SetCnet(0x01411DDC18, 10, "GNET::HomeGuardMonsterHatch");
	SetCnet(0x01411AB020, 1, "GNET::HomeGuardMonsterData");
	SetCnet(0x01411A0DF8, 1, "GNET::HomeGuardMonsterBriefData");
	SetCnet(0x01411DDE28, 10, "GNET::HomeGuardMonsterBattleMatchTimesAdd");
	SetCnet(0x01410E86E0, 6, "GNET::HomeGuardMonsterBattleData");
	SetCnet(0x01411DDE80, 10, "GNET::HomeGuardMonsterAppoint");
	SetCnet(0x01411DDCC8, 10, "GNET::HomeGuardMonsterAddEnergy");
	SetCnet(0x01411AB100, 6, "GNET::HomeGuardMonster");
	SetCnet(0x01411FAD78, 10, "GNET::HomeFoundryQuery");
	SetCnet(0x01411AA308, 10, "GNET::HomeFoundryFormulasSync");
	SetCnet(0x01411FADD0, 10, "GNET::HomeFoundryFactoryProduceRequest");
	SetCnet(0x01411DD220, 10, "GNET::HomeFactoryUpgrade");
	SetCnet(0x01411DD328, 10, "GNET::HomeFactoryProduce");
	SetCnet(0x01411A66D8, 1, "GNET::HomeEquipment");
	SetCnet(0x01411DD1C8, 10, "GNET::HomeEquipItem");
	SetCnet(0x0141211240, 10, "GNET::HomeEditRes");
	SetCnet(0x01411A90F8, 10, "GNET::HomeEditEnd");
	SetCnet(0x01411A67F0, 10, "GNET::HomeDetail");
	SetCnet(0x01411A6EB8, 6, "GNET::HomeDataMirror");
	SetCnet(0x01411A5040, 1, "GNET::HomeCropper");
	SetCnet(0x0141211360, 10, "GNET::HomeBrowseInfoQuery_Re");
	SetCnet(0x01411FAE80, 10, "GNET::HomeBrowseInfoQuery");
	SetCnet(0x0141211100, 10, "GNET::HomeBrief");
	SetCnet(0x01411A0ED8, 6, "GNET::HomeBattleStartRe");
	SetCnet(0x01411DDF88, 10, "GNET::HomeBattleStart");
	SetCnet(0x0141211830, 10, "GNET::HomeBattleScoreTopListQuery_Re");
	SetCnet(0x01411F3BA8, 10, "GNET::HomeBattleScoreTopListQuery");
	SetCnet(0x0141211728, 10, "GNET::HomeBattleRecordSync");
	SetCnet(0x01411A0EA0, 6, "GNET::HomeBattleMatchStartRe");
	SetCnet(0x01411DDF30, 10, "GNET::HomeBattleMatchStart");
	SetCnet(0x01411A0F48, 6, "GNET::HomeBattleMatchCropperSelectRe");
	SetCnet(0x01411DE0E8, 10, "GNET::HomeBattleMatchCropperSelect");
	SetCnet(0x0141211780, 10, "GNET::HomeBattleInfoSync");
	SetCnet(0x01411A0F10, 6, "GNET::HomeBattleEndRe");
	SetCnet(0x01411DDFE0, 10, "GNET::HomeBattleEnd");
	SetCnet(0x01411A5008, 6, "GNET::HomeBaseExtraProp");
	SetCnet(0x01411A50B0, 6, "GNET::HomeBase");
	SetCnet(0x01411DD538, 10, "GNET::HomeAddClean");
	SetCnet(0x01411F3010, 7, "GNET::HMAC_MD5Hash");
	SetCnet(0x014120BC60, 10, "GNET::GetUIConfig_Re");
	SetCnet(0x01411F34F0, 10, "GNET::GetUIConfig");
	SetCnet(0x0141210B98, 10, "GNET::GetSoloChallengeRank_Re");
	SetCnet(0x014120DA58, 10, "GNET::GetSellList_Re");
	SetCnet(0x01411F9048, 10, "GNET::GetSellList");
	SetCnet(0x014120C900, 10, "GNET::GetSavedMsg_Re");
	SetCnet(0x0141212338, 10, "GNET::GetSavedMsg2_Re");
	SetCnet(0x01411F45B8, 10, "GNET::GetSavedMsg2");
	SetCnet(0x01411F7E50, 10, "GNET::GetSavedMsg");
	SetCnet(0x014120E230, 10, "GNET::GetRewardList_Re");
	SetCnet(0x01411F9410, 10, "GNET::GetRewardList");
	SetCnet(0x014120BBB0, 10, "GNET::GetPlayerIDByName_Re");
	SetCnet(0x01411F35A0, 10, "GNET::GetPlayerIDByName");
	SetCnet(0x014120B518, 10, "GNET::GetPlayerFactionInfo_Re");
	SetCnet(0x01411F8378, 10, "GNET::GetPlayerFactionInfo");
	SetCnet(0x014120BDA0, 10, "GNET::GetPlayerBriefInfo_Re");
	SetCnet(0x0141162920, 10, "GNET::GetPlayerBriefInfo");
	SetCnet(0x014120D2D0, 10, "GNET::GetMail_Re");
	SetCnet(0x014120D278, 10, "GNET::GetMailList_Re");
	SetCnet(0x01411F8860, 10, "GNET::GetMailList");
	SetCnet(0x014120D328, 10, "GNET::GetMailAttachObj_Re");
	SetCnet(0x01411F8910, 10, "GNET::GetMailAttachObj");
	SetCnet(0x01411F8808, 10, "GNET::GetMail");
	SetCnet(0x014120BD10, 10, "GNET::GetHelpStates_Re");
	SetCnet(0x01411F3890, 10, "GNET::GetHelpStates");
	SetCnet(0x014120C6D8, 10, "GNET::GetFriends_Re");
	SetCnet(0x01411F7CF0, 10, "GNET::GetFriends");
	SetCnet(0x0141212048, 10, "GNET::GetFactionCrossInfo_Re");
	SetCnet(0x01411DE7F0, 10, "GNET::GetFactionCrossInfo");
	SetCnet(0x0141211FF0, 10, "GNET::GetFactionCrossBriefInfo_Re");
	SetCnet(0x01411DE848, 10, "GNET::GetFactionCrossBriefInfo");
	SetCnet(0x014120B488, 10, "GNET::GetFactionBaseInfo_Re");
	SetCnet(0x01411F3838, 10, "GNET::GetFactionBaseInfo");
	SetCnet(0x01412110A8, 10, "GNET::GetEnemyList_Re");
	SetCnet(0x01411FACC8, 10, "GNET::GetEnemyList");
	SetCnet(0x014120BA38, 10, "GNET::GetCustomData_Re");
	SetCnet(0x01411F3548, 10, "GNET::GetCustomData");
	SetCnet(0x01412169A8, 10, "GNET::GetCampRank_Re");
	SetCnet(0x0141216A70, 10, "GNET::GetCampKillRank_Re");
	SetCnet(0x01412108C0, 10, "GNET::GetCNetServerConfig_Re");
	SetCnet(0x01411FAA60, 10, "GNET::GetCNetServerConfig");
	SetCnet(0x01411F3208, 10, "GNET::GamedataSend");
	SetCnet(0x01411FCA10, 11, "GNET::GameClient");
	SetCnet(0x01411FCA70, 2, "GNET::GameClient");
	SetCnet(0x0141215F18, 10, "GNET::GameChannelOperation");
	SetCnet(0x014114D4C0, 6, "GNET::GWebTradeRoleBrief");
	SetCnet(0x014120E338, 6, "GNET::GWebTradeItem");
	SetCnet(0x014120E528, 6, "GNET::GWebTradeDetail");
	SetCnet(0x014120B4E0, 6, "GNET::GUserFaction");
	SetCnet(0x0141210660, 6, "GNET::GUniqueDataElemNode");
	SetCnet(0x0141210628, 6, "GNET::GUniqueDataElem");
	SetCnet(0x014120D7A0, 1, "GNET::GTerritory");
	SetCnet(0x014120E610, 6, "GNET::GSysAuctionItem");
	SetCnet(0x014120F0A0, 1, "GNET::GSendAUMailRecord");
	SetCnet(0x01410B81F8, 6, "GNET::GRoomDetail");
	SetCnet(0x014114D488, 6, "GNET::GRoleStorehouse");
	SetCnet(0x014114D418, 6, "GNET::GRolePocket");
	SetCnet(0x01410A3A68, 6, "GNET::GRoleInventory");
	SetCnet(0x014120B6D0, 6, "GNET::GRoleForbid");
	SetCnet(0x014114D450, 6, "GNET::GRoleEquipment");
	SetCnet(0x014120BAC8, 6, "GNET::GRoleBase");
	SetCnet(0x014110DC60, 6, "GNET::GMailHeader");
	SetCnet(0x014110E270, 6, "GNET::GMail");
	SetCnet(0x014120CFD8, 10, "GNET::GMToggleChat_Re");
	SetCnet(0x01411F8218, 10, "GNET::GMToggleChat");
	SetCnet(0x014120CF28, 10, "GNET::GMShutup_Re");
	SetCnet(0x014120CF80, 10, "GNET::GMShutupRole_Re");
	SetCnet(0x01411F8168, 10, "GNET::GMShutupRole");
	SetCnet(0x01411F8110, 10, "GNET::GMShutup");
	SetCnet(0x014120F9E8, 10, "GNET::GMSetTimelessAutoLock_Re");
	SetCnet(0x01411F8498, 10, "GNET::GMSetTimelessAutoLock");
	SetCnet(0x014120D030, 10, "GNET::GMRestartServer_Re");
	SetCnet(0x01411F80B8, 10, "GNET::GMRestartServer");
	SetCnet(0x014120CDB0, 6, "GNET::GMPlayerInfo");
	SetCnet(0x014120CD58, 10, "GNET::GMOnlineNum_Re");
	SetCnet(0x01411F8060, 10, "GNET::GMOnlineNum");
	SetCnet(0x014120CE20, 10, "GNET::GMListOnlineUser_Re");
	SetCnet(0x01411F8008, 10, "GNET::GMListOnlineUser");
	SetCnet(0x014120CE78, 10, "GNET::GMKickoutUser_Re");
	SetCnet(0x01411F7FB0, 10, "GNET::GMKickoutUser");
	SetCnet(0x014120CED0, 10, "GNET::GMKickoutRole_Re");
	SetCnet(0x01411F7F58, 10, "GNET::GMKickoutRole");
	SetCnet(0x014120F268, 10, "GNET::GMGetPlayerConsumeInfo_Re");
	SetCnet(0x01411F3940, 10, "GNET::GMGetPlayerConsumeInfo");
	SetCnet(0x014120D088, 10, "GNET::GMForbidRole_Re");
	SetCnet(0x01411F81C0, 10, "GNET::GMForbidRole");
	SetCnet(0x01411A51C8, 6, "GNET::GHomeSyncData");
	SetCnet(0x0141211158, 6, "GNET::GHomeSync");
	SetCnet(0x01411A0E68, 6, "GNET::GHomeLadder");
	SetCnet(0x01410E8750, 6, "GNET::GHomeBatteleRecordData");
	SetCnet(0x01411A0DC0, 6, "GNET::GHomeBatteleRecord");
	SetCnet(0x014120C630, 6, "GNET::GGroupInfo");
	SetCnet(0x014120C5A0, 6, "GNET::GFriendInfo");
	SetCnet(0x014120F068, 1, "GNET::GFriendExtInfo");
	SetCnet(0x01411AA228, 1, "GNET::GFoundryFormulasData");
	SetCnet(0x01411AA298, 6, "GNET::GFoundryFormulas");
	SetCnet(0x0141210A20, 1, "GNET::GFactionResourceBattleRecord");
	SetCnet(0x01411A3290, 1, "GNET::GFactionRelationApply");
	SetCnet(0x0141211C40, 6, "GNET::GFactionRecruit");
	SetCnet(0x014120EC70, 1, "GNET::GFactionHostile");
	SetCnet(0x014120E800, 6, "GNET::GFactionFortressBriefInfo");
	SetCnet(0x014120E940, 1, "GNET::GFactionFortressBattleInfo");
	SetCnet(0x014120B450, 6, "GNET::GFactionBaseInfo");
	SetCnet(0x014120EC38, 1, "GNET::GFactionAlliance");
	SetCnet(0x0141210FE0, 6, "GNET::GEnemyList");
	SetCnet(0x0141211888, 6, "GNET::GEffigy");
	SetCnet(0x0141105F90, 6, "GNET::GDriftBottle");
	SetCnet(0x01411FA050, 1, "GNET::GCountryBattleLimit");
	SetCnet(0x014120F3C8, 6, "GNET::GCountryBattleDomain");
	SetCnet(0x01410B8820, 6, "GNET::GChatRoom");
	SetCnet(0x01410B8188, 6, "GNET::GChatMember");
	SetCnet(0x014120D888, 1, "GNET::GBattleChallenge");
	SetCnet(0x01410AC348, 1, "GNET::GAuctionItem");
	SetCnet(0x01410AC880, 6, "GNET::GAuctionDetail");
	SetCnet(0x014120C838, 10, "GNET::FriendStatus");
	SetCnet(0x014120F148, 10, "GNET::FriendExtList");
	SetCnet(0x01411A6710, 1, "GNET::Formulas");
	SetCnet(0x014120DAB0, 10, "GNET::FindSellPointInfo_Re");
	SetCnet(0x01411F90A0, 10, "GNET::FindSellPointInfo");
	SetCnet(0x014120C4F0, 10, "GNET::FactionUpgrade_Re");
	SetCnet(0x0141215FC8, 10, "GNET::FactionTargetFinishNotify");
	SetCnet(0x0141172290, 1, "GNET::FactionTarget");
	SetCnet(0x0141172418, 1, "GNET::FactionTalentTreeActiveData");
	SetCnet(0x0141211BE8, 10, "GNET::FactionStoreHouseList_Re");
	SetCnet(0x01411F83D0, 1, "GNET::FactionStoreHouseExchangeItemData");
	SetCnet(0x0141211BB0, 6, "GNET::FactionStoreHouse");
	SetCnet(0x01411FAFE0, 10, "GNET::FactionSignalRequest");
	SetCnet(0x0141211F98, 10, "GNET::FactionSignalNotify");
	SetCnet(0x01411722C8, 6, "GNET::FactionRewardMaterialData");
	SetCnet(0x0141210970, 10, "GNET::FactionResourceBattlePlayerQueryResult");
	SetCnet(0x0141210AB0, 10, "GNET::FactionResourceBattleNotifyPlayerEvent");
	SetCnet(0x0141210A58, 10, "GNET::FactionResourceBattleGetRecord_Re");
	SetCnet(0x0141162A70, 10, "GNET::FactionResourceBattleGetRecord");
	SetCnet(0x01412109C8, 10, "GNET::FactionResourceBattleGetMap_Re");
	SetCnet(0x0141162A18, 10, "GNET::FactionResourceBattleGetMap");
	SetCnet(0x014120C338, 10, "GNET::FactionResign_Re");
	SetCnet(0x014120C498, 10, "GNET::FactionRename_Re");
	SetCnet(0x014120EEB0, 10, "GNET::FactionRenameAnnounce");
	SetCnet(0x014120EBE0, 10, "GNET::FactionRemoveRelationReply_Re");
	SetCnet(0x014120EB88, 10, "GNET::FactionRemoveRelationApply_Re");
	SetCnet(0x014120EE00, 10, "GNET::FactionRelationRecvReply");
	SetCnet(0x014120EDA8, 10, "GNET::FactionRelationRecvApply");
	SetCnet(0x0141211C78, 10, "GNET::FactionRecruitSelf_Re");
	SetCnet(0x0141211B58, 10, "GNET::FactionRecruitOpResult");
	SetCnet(0x0141211B00, 10, "GNET::FactionRecruitList_Re");
	SetCnet(0x0141211A90, 6, "GNET::FactionRecruitClientData");
	SetCnet(0x0141211A38, 10, "GNET::FactionRecruitApplyList_Re");
	SetCnet(0x01412119C8, 6, "GNET::FactionRecruitApply");
	SetCnet(0x0141172220, 1, "GNET::FactionPrivilegeDelegate");
	SetCnet(0x01411DE668, 1, "GNET::FactionOpDivideNewPageData");
	SetCnet(0x01411DE6D8, 6, "GNET::FactionOpDivideNewPage");
	SetCnet(0x014120BFB0, 10, "GNET::FactionOPRequest_Re");
	SetCnet(0x01411F8320, 10, "GNET::FactionOPRequest");
	SetCnet(0x0141172258, 1, "GNET::FactionMemberAward");
	SetCnet(0x014120C288, 10, "GNET::FactionMasterResign_Re");
	SetCnet(0x0141211F40, 10, "GNET::FactionLogRequest_Re");
	SetCnet(0x01411FAF88, 10, "GNET::FactionLogRequest");
	SetCnet(0x014120ED50, 10, "GNET::FactionListRelation_Re");
	SetCnet(0x014120EE58, 10, "GNET::FactionListOnline_Re");
	SetCnet(0x01411F9CA8, 10, "GNET::FactionListOnline");
	SetCnet(0x014120C128, 10, "GNET::FactionListMember_Re");
	SetCnet(0x014120C3E8, 10, "GNET::FactionLeave_Re");
	SetCnet(0x014120B0C8, 6, "GNET::FactionInviteRes");
	SetCnet(0x014120B100, 14, "GNET::FactionInviteJoin");
	SetCnet(0x014120B090, 6, "GNET::FactionInviteArg");
	SetCnet(0x014120EB30, 10, "GNET::FactionHostileReply_Re");
	SetCnet(0x014120EAD8, 10, "GNET::FactionHostileApply_Re");
	SetCnet(0x014120E890, 10, "GNET::FactionFortressList_Re");
	SetCnet(0x01411F9BF8, 10, "GNET::FactionFortressList");
	SetCnet(0x014120E9D0, 10, "GNET::FactionFortressGet_Re");
	SetCnet(0x01411F9C50, 10, "GNET::FactionFortressGet");
	SetCnet(0x01411F9BA0, 10, "GNET::FactionFortressEnter");
	SetCnet(0x014120E8E8, 10, "GNET::FactionFortressChallenge_Re");
	SetCnet(0x01411F9B48, 10, "GNET::FactionFortressChallenge");
	SetCnet(0x014120E978, 10, "GNET::FactionFortressBattleList_Re");
	SetCnet(0x01411F9AF0, 10, "GNET::FactionFortressBattleList");
	SetCnet(0x01411A3000, 1, "GNET::FactionFieldBattlePlayerInfo");
	SetCnet(0x0141215EC0, 10, "GNET::FactionFieldBattleNotify");
	SetCnet(0x0141216078, 10, "GNET::FactionFieldBattleIDQuery_Re");
	SetCnet(0x01411F3DB8, 10, "GNET::FactionFieldBattleIDQuery");
	SetCnet(0x01411A2E40, 6, "GNET::FactionFieldBattleHistoryData");
	SetCnet(0x01411A2EE8, 6, "GNET::FactionFieldBattleDetailData");
	SetCnet(0x01411DE610, 10, "GNET::FactionFieldBattleDeclare");
	SetCnet(0x0141215E10, 10, "GNET::FactionFieldBattleDataQuery_Re");
	SetCnet(0x01411DE5B8, 10, "GNET::FactionFieldBattleDataQuery");
	SetCnet(0x01411A2F58, 6, "GNET::FactionFieldBattleData");
	SetCnet(0x0141216020, 10, "GNET::FactionFieldBattleCombatInfoQuery_Re2");
	SetCnet(0x0141215E68, 10, "GNET::FactionFieldBattleCombatInfoQuery_Re");
	SetCnet(0x01411F3D60, 10, "GNET::FactionFieldBattleCombatInfoQuery2");
	SetCnet(0x01411F3D08, 10, "GNET::FactionFieldBattleCombatInfoQuery");
	SetCnet(0x01411A2F90, 1, "GNET::FactionFieldBattleAllianceRequestData");
	SetCnet(0x01411DE560, 10, "GNET::FactionFieldBattleAllianceInviteReply");
	SetCnet(0x01411DE508, 10, "GNET::FactionFieldBattleAllianceInviteApply");
	SetCnet(0x01411A2E78, 1, "GNET::FactionFieldBattleAllianceData");
	SetCnet(0x01411DE4B0, 10, "GNET::FactionFieldBattleAgainst");
	SetCnet(0x0141215F70, 10, "GNET::FactionExtraClientNotify");
	SetCnet(0x01411723E0, 6, "GNET::FactionExtraClientData");
	SetCnet(0x0141172450, 6, "GNET::FactionExtraBase");
	SetCnet(0x014120C1D8, 10, "GNET::FactionExpel_Re");
	SetCnet(0x0141211E08, 6, "GNET::FactionDivideMaterialHouse");
	SetCnet(0x0141211CD0, 1, "GNET::FactionDivideMaterialData");
	SetCnet(0x0141211D08, 1, "GNET::FactionDivideMaterialClientData");
	SetCnet(0x0141211D78, 10, "GNET::FactionDivideHouseListMember_Re");
	SetCnet(0x0141211E40, 10, "GNET::FactionDivideHouseListMaster_Re");
	SetCnet(0x01411DE710, 1, "GNET::FactionDivideHouseLeftItemGetData");
	SetCnet(0x01411DE748, 1, "GNET::FactionDivideHouseItemGetData");
	SetCnet(0x014120C440, 10, "GNET::FactionDismiss_Re");
	SetCnet(0x014120FE00, 10, "GNET::FactionDelayExpelAnnounce");
	SetCnet(0x014120C548, 10, "GNET::FactionDegrade_Re");
	SetCnet(0x01411A3038, 6, "GNET::FactionCrossBriefInfo");
	SetCnet(0x01411DE950, 10, "GNET::FactionCrossBattleRegister");
	SetCnet(0x01412120A0, 10, "GNET::FactionCrossBattleNotify");
	SetCnet(0x01411A2D98, 1, "GNET::FactionCrossBattleHistoryData");
	SetCnet(0x01411A2D60, 6, "GNET::FactionCrossBattleDetailData");
	SetCnet(0x01411DE8F8, 10, "GNET::FactionCrossBattleDeclare");
	SetCnet(0x01411A2E08, 6, "GNET::FactionCrossBattleData");
	SetCnet(0x01411DE8A0, 10, "GNET::FactionCrossBattleAgainst");
	SetCnet(0x014120C008, 10, "GNET::FactionCreate_Re");
	SetCnet(0x01411F8270, 10, "GNET::FactionChat");
	SetCnet(0x0141216AC8, 10, "GNET::FactionChangeCampNotice");
	SetCnet(0x014120C390, 10, "GNET::FactionChangProclaim_Re");
	SetCnet(0x014120C230, 10, "GNET::FactionBroadcastNotice_Re");
	SetCnet(0x014120C2E0, 10, "GNET::FactionAppoint_Re");
	SetCnet(0x014120C060, 10, "GNET::FactionApplyJoin_Re");
	SetCnet(0x014120EA80, 10, "GNET::FactionAllianceReply_Re");
	SetCnet(0x01411F3C00, 10, "GNET::FactionAllianceChat");
	SetCnet(0x014120EA28, 10, "GNET::FactionAllianceApply_Re");
	SetCnet(0x014120C180, 10, "GNET::FactionAcceptJoin_Re");
	SetCnet(0x01411F82C8, 10, "GNET::FactionAcceptJoin");
	SetCnet(0x014120C0B8, 6, "GNET::FMemberInfo");
	SetCnet(0x014120E288, 10, "GNET::ExchangeConsumePoints_Re");
	SetCnet(0x01411F9468, 10, "GNET::ExchangeConsumePoints");
	SetCnet(0x014120B5C8, 10, "GNET::ErrorInfo");
	SetCnet(0x01411F31B0, 10, "GNET::EnterWorld");
	SetCnet(0x01412118C0, 10, "GNET::EffigyQuery_Re");
	SetCnet(0x01411F3C58, 10, "GNET::EffigyQuery");
	SetCnet(0x0141211970, 10, "GNET::DriftBottleGet_Re");
	SetCnet(0x0141211918, 10, "GNET::DriftBottleBroadcast_Re");
	SetCnet(0x01411FC750, 5, "GNET::DgramClientIO");
	SetCnet(0x014120B8A0, 10, "GNET::DeleteRole_Re");
	SetCnet(0x01411F3100, 10, "GNET::DeleteRole");
	SetCnet(0x014120D380, 10, "GNET::DeleteMail_Re");
	SetCnet(0x01411F89C0, 10, "GNET::DeleteMail");
	SetCnet(0x014120C7E0, 10, "GNET::DelFriend_Re");
	SetCnet(0x01411F7DF8, 10, "GNET::DelFriend");
	SetCnet(0x01411FD3B8, 7, "GNET::DecompressARCFourSecurity");
	SetCnet(0x01411A6EF0, 6, "GNET::DataForHomeBaseExtraProp");
	SetCnet(0x01411F3E10, 10, "GNET::DShow_SendGift_Notify");
	SetCnet(0x0141211ED0, 6, "GNET::CustomizedLogData");
	SetCnet(0x0141216DD0, 10, "GNET::CrossMatchTeamInfo");
	SetCnet(0x0141216D28, 6, "GNET::CrossMatchTeamChip");
	SetCnet(0x0141216D98, 6, "GNET::CrossMatchTeam");
	SetCnet(0x0141216CB8, 1, "GNET::CrossMatchPlayer");
	SetCnet(0x01412123E8, 10, "GNET::CrossMatchActTime_Re");
	SetCnet(0x01410A5F78, 10, "GNET::CrossMatchActTime");
	SetCnet(0x0141212390, 10, "GNET::CrossMatchActCount_Re");
	SetCnet(0x01411F46C0, 10, "GNET::CrossMatchActCount");
	SetCnet(0x014120B848, 10, "GNET::CreateRole_Re");
	SetCnet(0x01411F32B8, 10, "GNET::CreateRole");
	SetCnet(0x014120E838, 10, "GNET::CreateFactionFortress_Re");
	SetCnet(0x01411F9A98, 10, "GNET::CreateFactionFortress");
	SetCnet(0x014120F370, 10, "GNET::CountryBattleSyncPlayerLocation");
	SetCnet(0x014120F5B8, 10, "GNET::CountryBattleSingleBattleResult");
	SetCnet(0x01411F9FF8, 10, "GNET::CountryBattleReturnCapital");
	SetCnet(0x014120F560, 10, "GNET::CountryBattleResult");
	SetCnet(0x014120F508, 10, "GNET::CountryBattlePreEnterNotify");
	SetCnet(0x01411F9FA0, 10, "GNET::CountryBattlePreEnter");
	SetCnet(0x014120F318, 10, "GNET::CountryBattleMove_Re");
	SetCnet(0x01411F9DE8, 10, "GNET::CountryBattleMove");
	SetCnet(0x01411FA190, 10, "GNET::CountryBattleKingResetBattleLimit");
	SetCnet(0x014120F610, 10, "GNET::CountryBattleKingAssignAssault_Re");
	SetCnet(0x01411FA138, 10, "GNET::CountryBattleKingAssignAssault");
	SetCnet(0x014120F458, 10, "GNET::CountryBattleGetScore_Re");
	SetCnet(0x01411F9EF0, 10, "GNET::CountryBattleGetScore");
	SetCnet(0x01411F9E98, 10, "GNET::CountryBattleGetPlayerLocation");
	SetCnet(0x014120F400, 10, "GNET::CountryBattleGetMap_Re");
	SetCnet(0x01411F9E40, 10, "GNET::CountryBattleGetMap");
	SetCnet(0x014120F6C0, 10, "GNET::CountryBattleGetKingCommandPoint_Re");
	SetCnet(0x01411FA0E0, 10, "GNET::CountryBattleGetKingCommandPoint");
	SetCnet(0x014120F4B0, 10, "GNET::CountryBattleGetConfig_Re");
	SetCnet(0x01411F9F48, 10, "GNET::CountryBattleGetConfig");
	SetCnet(0x014120F668, 10, "GNET::CountryBattleGetBattleLimit_Re");
	SetCnet(0x01411FA088, 10, "GNET::CountryBattleGetBattleLimit");
	SetCnet(0x01411FD468, 10, "GNET::CompressBinder");
	SetCnet(0x01411FD378, 7, "GNET::CompressARCFourSecurity");
	SetCnet(0x014120D138, 10, "GNET::Complain2GM_Re");
	SetCnet(0x01411F3650, 10, "GNET::Complain2GM");
	SetCnet(0x01410A39F0, 1, "GNET::CompactUINT");
	SetCnet(0x01411FAAB8, 10, "GNET::CollectClientMachineInfo");
	SetCnet(0x01411F3F88, 10, "GNET::ClientGetBattleInfo");
	SetCnet(0x01411F87B0, 10, "GNET::CheckNewMail");
	SetCnet(0x01411F8758, 10, "GNET::ChatRoomSpeak");
	SetCnet(0x014120CA40, 10, "GNET::ChatRoomList_Re");
	SetCnet(0x01411F8700, 10, "GNET::ChatRoomList");
	SetCnet(0x01411F86A8, 10, "GNET::ChatRoomLeave");
	SetCnet(0x014120C9B0, 10, "GNET::ChatRoomJoin_Re");
	SetCnet(0x01411F8650, 10, "GNET::ChatRoomJoin");
	SetCnet(0x01411F85F8, 10, "GNET::ChatRoomInvite_Re");
	SetCnet(0x01411F85A0, 10, "GNET::ChatRoomInvite");
	SetCnet(0x01411F8548, 10, "GNET::ChatRoomExpel");
	SetCnet(0x014120C958, 10, "GNET::ChatRoomCreate_Re");
	SetCnet(0x01411F84F0, 10, "GNET::ChatRoomCreate");
	SetCnet(0x014120BEA8, 10, "GNET::ChatMessage");
	SetCnet(0x014120FA98, 10, "GNET::ChangeDS_Re");
	SetCnet(0x01411A36A8, 1, "GNET::ChallengeWish");
	SetCnet(0x014120B620, 10, "GNET::Challenge");
	SetCnet(0x014120DEC8, 10, "GNET::CashPasswordSet_Re");
	SetCnet(0x01411F92B0, 10, "GNET::CashPasswordSet");
	SetCnet(0x014120DE70, 10, "GNET::CashLock_Re");
	SetCnet(0x01411F9258, 10, "GNET::CashLock");
	SetCnet(0x014120B3F8, 10, "GNET::CancelWaitQueue_Re");
	SetCnet(0x01411F3AF8, 10, "GNET::CancelWaitQueue");
	SetCnet(0x01410B5670, 1, "GNET::CampRankData");
	SetCnet(0x0141216A00, 1, "GNET::CampKillRankData");
	SetCnet(0x014120DBB8, 10, "GNET::BuyPoint_Re");
	SetCnet(0x01411F91A8, 10, "GNET::BuyPoint");
	SetCnet(0x01411F3B50, 10, "GNET::BroadCastPrivateChat");
	SetCnet(0x0141105F20, 1, "GNET::BottleReply");
	SetCnet(0x0141106280, 1, "GNET::BookBottleReply");
	SetCnet(0x014120D970, 10, "GNET::BattleStatus_Re");
	SetCnet(0x01411F8FF0, 10, "GNET::BattleStatus");
	SetCnet(0x014120D7D8, 10, "GNET::BattleGetMap_Re");
	SetCnet(0x01411F8F40, 10, "GNET::BattleGetMap");
	SetCnet(0x014120D918, 10, "GNET::BattleEnter_Re");
	SetCnet(0x01411F8F98, 10, "GNET::BattleEnter");
	SetCnet(0x014120D830, 10, "GNET::BattleChallenge_Re");
	SetCnet(0x014120D8C0, 10, "GNET::BattleChallengeMap_Re");
	SetCnet(0x01411F8EE8, 10, "GNET::BattleChallengeMap");
	SetCnet(0x01411F8E90, 10, "GNET::BattleChallenge");
	SetCnet(0x014120DFD0, 10, "GNET::AutolockSet_Re");
	SetCnet(0x01411F8440, 10, "GNET::AutolockSet");
	SetCnet(0x01412107D8, 10, "GNET::AutoTeamSetGoal_Re");
	SetCnet(0x0141210830, 10, "GNET::AutoTeamPlayerLeave");
	SetCnet(0x014120D488, 10, "GNET::AuctionOpen_Re");
	SetCnet(0x01411F8BD0, 10, "GNET::AuctionOpen");
	SetCnet(0x014120D590, 10, "GNET::AuctionList_Re");
	SetCnet(0x014120E028, 10, "GNET::AuctionListUpdate_Re");
	SetCnet(0x01411F8CD8, 10, "GNET::AuctionListUpdate");
	SetCnet(0x01411F8B78, 10, "GNET::AuctionList");
	SetCnet(0x014120D5E8, 10, "GNET::AuctionGet_Re");
	SetCnet(0x014120D748, 10, "GNET::AuctionGetItem_Re");
	SetCnet(0x01411F8C80, 10, "GNET::AuctionGetItem");
	SetCnet(0x01411F8B20, 10, "GNET::AuctionGet");
	SetCnet(0x014120D698, 10, "GNET::AuctionExitBid_Re");
	SetCnet(0x01411F8C28, 10, "GNET::AuctionExitBid");
	SetCnet(0x014120D538, 10, "GNET::AuctionClose_Re");
	SetCnet(0x01411F8AC8, 10, "GNET::AuctionClose");
	SetCnet(0x014120D4E0, 10, "GNET::AuctionBid_Re");
	SetCnet(0x01411F8A70, 10, "GNET::AuctionBid");
	SetCnet(0x014120D640, 10, "GNET::AuctionAttendList_Re");
	SetCnet(0x01411F8A18, 10, "GNET::AuctionAttendList");
	SetCnet(0x0141215C78, 10, "GNET::ArenaTeamTopListQuery_Re");
	SetCnet(0x01411DE350, 10, "GNET::ArenaTeamTopListQuery");
	SetCnet(0x0141215CD0, 10, "GNET::ArenaTeamTopListDetailQuery_Re");
	SetCnet(0x01411DE3A8, 10, "GNET::ArenaTeamTopListDetailQuery");
	SetCnet(0x014115EAA8, 6, "GNET::ArenaTeamTopList");
	SetCnet(0x014115C6B8, 6, "GNET::ArenaTeamSync");
	SetCnet(0x014115C840, 1, "GNET::ArenaTeamMemberOnlineInfo");
	SetCnet(0x014115C610, 1, "GNET::ArenaTeamMember");
	SetCnet(0x014115D0B8, 6, "GNET::ArenaTeamMatchSuccessData");
	SetCnet(0x0141215AC0, 10, "GNET::ArenaTeamMatch");
	SetCnet(0x014115C7D0, 6, "GNET::ArenaTeamLeaveSuccessData");
	SetCnet(0x01411DE2A0, 10, "GNET::ArenaTeamLeave");
	SetCnet(0x014115C798, 6, "GNET::ArenaTeamKickoutSuccessData");
	SetCnet(0x01411DE2F8, 10, "GNET::ArenaTeamKickout");
	SetCnet(0x014115C760, 6, "GNET::ArenaTeamInviteSuccessData");
	SetCnet(0x01411DE198, 10, "GNET::ArenaTeamInviteRequest");
	SetCnet(0x01411DE1F0, 10, "GNET::ArenaTeamInvite");
	SetCnet(0x0141215A10, 10, "GNET::ArenaTeamDataNotify");
	SetCnet(0x0141215B18, 10, "GNET::ArenaTeamCreate");
	SetCnet(0x014115C808, 6, "GNET::ArenaTeamCaptainTransferSuccessData");
	SetCnet(0x01411DE248, 10, "GNET::ArenaTeamCaptainTransfer");
	SetCnet(0x0141215A68, 10, "GNET::ArenaTeamAndPlayerDataNotify");
	SetCnet(0x014115C680, 6, "GNET::ArenaTeam");
	SetCnet(0x01411DE458, 10, "GNET::ArenaRewardMoneyGet");
	SetCnet(0x0141215B70, 10, "GNET::ArenaQuery_Re");
	SetCnet(0x01411FAF30, 10, "GNET::ArenaQuery");
	SetCnet(0x0141215C20, 10, "GNET::ArenaPlayerTotalInfoQuery_Re");
	SetCnet(0x01411F3CB0, 10, "GNET::ArenaPlayerTotalInfoQuery");
	SetCnet(0x0141215D28, 10, "GNET::ArenaPlayerTopListQuery_Re");
	SetCnet(0x01411DE400, 10, "GNET::ArenaPlayerTopListQuery");
	SetCnet(0x014115EA38, 6, "GNET::ArenaPlayerTopList");
	SetCnet(0x014115C728, 1, "GNET::ArenaPlayerSync");
	SetCnet(0x01412159B8, 10, "GNET::ArenaPlayerDataNotify");
	SetCnet(0x014115C6F0, 1, "GNET::ArenaPlayer");
	SetCnet(0x0141215DB8, 10, "GNET::ArenaOnlineInfoNotify");
	SetCnet(0x01410A9270, 10, "GNET::ArenaMatchCancelNotify");
	SetCnet(0x0141215960, 10, "GNET::ArenaClientNotify");
	SetCnet(0x014115D0F0, 6, "GNET::ArenaBattleStartRe");
	SetCnet(0x014115D128, 6, "GNET::ArenaBattleMatchSuccessRe");
	SetCnet(0x0141215BC8, 10, "GNET::ArenaBattleInfoNotifyClient");
	SetCnet(0x0141216358, 10, "GNET::ApprenticeQuery_Re");
	SetCnet(0x0141216320, 6, "GNET::ApprenticeQueryData");
	SetCnet(0x0141216140, 1, "GNET::ApprenticeLeaveData");
	SetCnet(0x01411F4038, 10, "GNET::ApprenticeLeave");
	SetCnet(0x01412166B8, 10, "GNET::ApprenticeHistoryQuery_Re");
	SetCnet(0x01411F4350, 10, "GNET::ApprenticeHistoryQuery");
	SetCnet(0x0141216108, 6, "GNET::ApprenticeHistoryData");
	SetCnet(0x01412160D0, 6, "GNET::ApprenticeData");
	SetCnet(0x01411F4248, 10, "GNET::ApprenticeCancelLeave");
	SetCnet(0x01412162B0, 1, "GNET::ApprenticeBriefData");
	SetCnet(0x014120DB08, 10, "GNET::AnnounceSellResult");
	SetCnet(0x014120B570, 10, "GNET::AnnounceNewMail");
	SetCnet(0x014120B708, 10, "GNET::AnnounceForbidInfo");
	SetCnet(0x014120C5D8, 10, "GNET::AddFriend_Re");
	SetCnet(0x014120B1B0, 6, "GNET::AddFriendRqstRes");
	SetCnet(0x014120B178, 6, "GNET::AddFriendRqstArg");
	SetCnet(0x014120B1E8, 14, "GNET::AddFriendRqst");
	SetCnet(0x0141210B08, 10, "GNET::AddFriendRemarks_Re");
	SetCnet(0x01411F7F00, 10, "GNET::AddFriendRemarks");
	SetCnet(0x01411F7C98, 10, "GNET::AddFriend");
	SetCnet(0x01411FC7D8, 5, "GNET::ActiveIO");
	SetCnet(0x014120EFB8, 10, "GNET::AccountLoginRecord");
	SetCnet(0x01411FD338, 7, "GNET::ARCFourSecurity");
	SetCnet(0x0141174E20, 10, "GNET::ACReport");
	SetCnet(0x014120D220, 10, "GNET::ACRemoteCode");
	SetCnet(0x014120DF78, 10, "GNET::ACQuestion");
	SetCnet(0x01411F3998, 10, "GNET::ACAnswer");
	SetCnet(0x014124BE78, 7, "GFX_INFO");
	SetCnet(0x014124C788, 5, "GFX_BINDING");
	SetCnet(0x014125AF60, 15, "GFXSOUNDIMP22");
	SetCnet(0x014125AEE8, 14, "GFXSOUNDIMP");
	SetCnet(0x014124F370, 2, "GFXReplaceHLSL");
	SetCnet(0x01411DB5C0, 3, "FxLoaderModule");
	SetCnet(0x01410DA4D0, 5, "FittingRoomClickShortcut");
	SetCnet(0x0141259730, 6, "FinishedState");
	SetCnet(0x0141106E10, 2, "FastRepairMessageBoxHandler");
	SetCnet(0x0141140EE0, 3, "FashionWeaponTypeOrderComponent");
	SetCnet(0x0141140EA0, 3, "FashionWeaponOrderComponent");
	SetCnet(0x0141140F20, 3, "FashionSuiteOrderComponent");
	SetCnet(0x0141140E80, 3, "FashionProfessionOrderComponent");
	SetCnet(0x0141140EC0, 3, "FashionPartOrderComponent");
	SetCnet(0x0141140F70, 2, "FashionPackSorterPreferSuite");
	SetCnet(0x0141140F58, 2, "FashionPackSorterPreferFashionPart");
	SetCnet(0x0141140F40, 2, "FashionPackSorterFrameWork");
	SetCnet(0x0141140E40, 3, "FashionOrderComponent");
	SetCnet(0x0141140E60, 3, "FashionGenderOrderComponent");
	SetCnet(0x0141140F00, 3, "FashionEquipLocationOrderComponent");
	SetCnet(0x014124BE48, 5, "FX_BINDING_BASE");
	SetCnet(0x014124BE08, 7, "FX_BASE_INFO");
	SetCnet(0x0141270BF8, 3, "FWTemplate");
	SetCnet(0x01412730B8, 18, "FWStateSelect");
	SetCnet(0x0141278428, 22, "FWStateRotate");
	SetCnet(0x01412781C8, 21, "FWStateResize");
	SetCnet(0x0141274888, 18, "FWStateNetSelect");
	SetCnet(0x0141274C90, 19, "FWStateMoveWindow");
	SetCnet(0x01412749B0, 20, "FWStateMoveHandle");
	SetCnet(0x0141274B40, 20, "FWStateMove");
	SetCnet(0x0141276E30, 18, "FWStateCreateText");
	SetCnet(0x0141277320, 18, "FWStateCreateRect");
	SetCnet(0x0141277648, 18, "FWStateCreatePolygon");
	SetCnet(0x0141276D58, 18, "FWStateCreateFirework");
	SetCnet(0x0141277A48, 18, "FWStateCreateBezier");
	SetCnet(0x0141272FC0, 18, "FWState");
	SetCnet(0x0141276C18, 16, "FWSharedFile");
	SetCnet(0x0141274698, 1, "FWOutterPropertyList");
	SetCnet(0x0141274660, 2, "FWOutterProperty");
	SetCnet(0x01412766B0, 2, "FWOperator");
	SetCnet(0x0141276698, 2, "FWOperand");
	SetCnet(0x0141273D50, 3, "FWObject");
	SetCnet(0x0141271080, 3, "FWObPtrList<FWGlyph * __ptr64>");
	SetCnet(0x01412737A0, 13, "FWModifierRing");
	SetCnet(0x0141273688, 13, "FWModifierParabola");
	SetCnet(0x0141271DC0, 2, "FWModifierInfo");
	SetCnet(0x0141271DF8, 2, "FWModifierCreator");
	SetCnet(0x0141276840, 13, "FWModifier");
	SetCnet(0x01412717D8, 1, "FWLog");
	SetCnet(0x0141274688, 1, "FWInfoSet<FWOutterProperty>");
	SetCnet(0x0141271DE8, 1, "FWInfoSet<FWModifierInfo>");
	SetCnet(0x0141271AA8, 1, "FWInfoSet<FWAssemblyInfo>");
	SetCnet(0x0141271E80, 1, "FWInfoSet<FWArtInfo>");
	SetCnet(0x0141271A68, 2, "FWInfo");
	SetCnet(0x0141271310, 51, "FWGlyphText");
	SetCnet(0x0141277108, 53, "FWGlyphRectangle");
	SetCnet(0x0141278B68, 53, "FWGlyphRectBase");
	SetCnet(0x0141277758, 51, "FWGlyphPolygon");
	SetCnet(0x01412710B0, 8, "FWGlyphList");
	SetCnet(0x0141272220, 51, "FWGlyphGraphBase");
	SetCnet(0x0141271508, 51, "FWGlyphFirework");
	SetCnet(0x0141277418, 53, "FWGlyphEllipse");
	SetCnet(0x0141277F70, 51, "FWGlyphComposite");
	SetCnet(0x0141277B70, 51, "FWGlyphBezier");
	SetCnet(0x0141272068, 51, "FWGlyph");
	SetCnet(0x0141278DD0, 6, "FWGfxWithModifier");
	SetCnet(0x01412735D0, 1, "FWFormulaList");
	SetCnet(0x01412785C0, 2, "FWFormulaElement");
	SetCnet(0x0141276688, 1, "FWFormula");
	SetCnet(0x0141271980, 1, "FWFontEnum");
	SetCnet(0x0141270B28, 5, "FWFlatCollector");
	SetCnet(0x0141276F30, 13, "FWFireworkSimple");
	SetCnet(0x0141272D68, 13, "FWFireworkLeaf");
	SetCnet(0x0141271708, 13, "FWFireworkLanch");
	SetCnet(0x0141273EA0, 13, "FWFireworkGraph");
	SetCnet(0x0141278AE8, 13, "FWFireworkElement");
	SetCnet(0x0141277030, 13, "FWFireworkCustom");
	SetCnet(0x0141273D80, 13, "FWFirework");
	SetCnet(0x0141276260, 13, "FWDialogTool");
	SetCnet(0x0141272B80, 16, "FWDialogText");
	SetCnet(0x01412757A0, 16, "FWDialogSimple");
	SetCnet(0x01412756A0, 13, "FWDialogScale");
	SetCnet(0x0141274438, 16, "FWDialogPropBase");
	SetCnet(0x0141276428, 13, "FWDialogPolygonMenu");
	SetCnet(0x01412755A0, 13, "FWDialogPlay");
	SetCnet(0x0141275AA0, 13, "FWDialogParam");
	SetCnet(0x01412752D8, 13, "FWDialogMain");
	SetCnet(0x0141275C40, 16, "FWDialogLanch");
	SetCnet(0x01412754B8, 13, "FWDialogGraphMenu");
	SetCnet(0x0141274290, 16, "FWDialogGraph");
	SetCnet(0x0141274F58, 13, "FWDialogEdit");
	SetCnet(0x01412758C0, 16, "FWDialogCustom");
	SetCnet(0x0141273328, 13, "FWDialogBoard");
	SetCnet(0x0141275DB0, 13, "FWDialogBezierMenu");
	SetCnet(0x01412731D8, 13, "FWDialogBase");
	SetCnet(0x0141277EB0, 3, "FWCommandUnCombine");
	SetCnet(0x0141273508, 3, "FWCommandSetGlyphProp");
	SetCnet(0x0141277DE0, 3, "FWCommandSetBezierMode");
	SetCnet(0x0141278D60, 3, "FWCommandRotate");
	SetCnet(0x0141278D40, 3, "FWCommandResize");
	SetCnet(0x0141277E20, 3, "FWCommandRemoveHandle");
	SetCnet(0x0141276AB0, 3, "FWCommandMoveHandle");
	SetCnet(0x0141276AF8, 3, "FWCommandMove");
	SetCnet(0x0141277E00, 3, "FWCommandDuplicateHandle");
	SetCnet(0x0141276B40, 3, "FWCommandDelete");
	SetCnet(0x0141276BF8, 3, "FWCommandCreate");
	SetCnet(0x0141277E68, 3, "FWCommandCombine");
	SetCnet(0x01412765B8, 3, "FWCommand");
	SetCnet(0x0141270E10, 1, "FWAssemblySet");
	SetCnet(0x0141272EA0, 3, "FWAssemblyProfile");
	SetCnet(0x0141271A80, 2, "FWAssemblyInfo");
	SetCnet(0x0141271AB8, 2, "FWAssemblyCache");
	SetCnet(0x0141273B20, 7, "FWArtWave");
	SetCnet(0x0141273978, 7, "FWArtTilt");
	SetCnet(0x0141273CE0, 7, "FWArtStepScale");
	SetCnet(0x01412738B0, 7, "FWArtNoChange");
	SetCnet(0x0141271E58, 2, "FWArtInfo");
	SetCnet(0x0141273C08, 7, "FWArtDoubleArc");
	SetCnet(0x0141271E90, 2, "FWArtCreator");
	SetCnet(0x0141273A50, 7, "FWArtArc");
	SetCnet(0x0141273870, 7, "FWArt");
	SetCnet(0x0141277B58, 2, "FWArray<int,int & __ptr64>");
	SetCnet(0x0141277630, 2, "FWArray<APoint<int>,APoint<int> & __ptr64>");
	SetCnet(0x0141270E90, 1, "FWArchive");
	SetCnet(0x0141297360, 2, "FTaskThreadBase");
	SetCnet(0x0141297378, 13, "FTaskThreadBase");
	SetCnet(0x01412972D8, 13, "FTaskThreadAnyThread");
	SetCnet(0x0141297348, 2, "FTaskThreadAnyThread");
	SetCnet(0x0141297438, 12, "FTaskGraphInterface");
	SetCnet(0x0141297270, 12, "FTaskGraphImplementation");
	SetCnet(0x0141297420, 2, "FSingleThreadRunnable");
	SetCnet(0x0141297520, 6, "FSafeRecyclableEvent");
	SetCnet(0x01412974E0, 7, "FRunnableThreadWin");
	SetCnet(0x01412975E0, 7, "FRunnableThread");
	SetCnet(0x01412973E8, 6, "FRunnable");
	SetCnet(0x01412971E8, 2, "FNamedTaskThread");
	SetCnet(0x0141297200, 13, "FNamedTaskThread");
	SetCnet(0x0141297558, 6, "FEventWin");
	SetCnet(0x0141297590, 6, "FEvent");
	SetCnet(0x01412535F0, 2, "FBaseGraphTask");
	SetCnet(0x01412223E0, 18, "EssenceExtractor<WEAPON_ESSENCE,WEAPON_SUB_TYPE>");
	SetCnet(0x0141222348, 18, "EssenceExtractor<FASHION_ESSENCE,FASHION_SUB_TYPE>");
	SetCnet(0x0141222640, 18, "EssenceExtractor<DECORATION_ESSENCE,DECORATION_SUB_TYPE>");
	SetCnet(0x01412225A8, 18, "EssenceExtractor<ARMOR_ESSENCE,ARMOR_SUB_TYPE>");
	SetCnet(0x014116E0A8, 2, "EquipSlotNewConfirmMessageBoxHandler");
	SetCnet(0x014128AC50, 1, "EntityReportSweepForPushing");
	SetCnet(0x014128AC40, 1, "EntityReportSweepForDynCC");
	SetCnet(0x014128A350, 1, "EntityReportSweepForClosestNonDynamic");
	SetCnet(0x014128A088, 1, "EntityReportSweep");
	SetCnet(0x0141289BB8, 1, "EntityReport");
	SetCnet(0x0141292628, 5, "ElementRenderObject");
	SetCnet(0x01412925C8, 5, "ElementRender");
	SetCnet(0x014124A4F8, 9, "EditorGFXInterfaceDefImpl");
	SetCnet(0x014109C5E8, 7, "EditBoxItemBase");
	SetCnet(0x014124BDC8, 7, "EVENT_INFO");
	SetCnet(0x01410CACF0, 8, "ELFPropClickShortcut");
	SetCnet(0x0141174D90, 17, "EC_ManLoginUIMan");
	SetCnet(0x014128CD28, 1, "ECViewport");
	SetCnet(0x01411DB530, 3, "ECModelLoaderModule");
	SetCnet(0x0141174D00, 17, "ECManager");
	SetCnet(0x014125AB30, 6, "ECMLoader");
	SetCnet(0x014124F660, 3, "ECMActionBlurReplaceHLSL");
	SetCnet(0x014124F5D8, 1, "ECMActionBlurInfo");
	SetCnet(0x014109C7A8, 7, "DriftBottleEditBoxItem");
	SetCnet(0x01411AE068, 2, "DefaultPackSorter");
	SetCnet(0x01410A4288, 1, "DataPathMan");
	SetCnet(0x0141299710, 10, "CustomizeTexture");
	SetCnet(0x0141299768, 5, "CustomizeTexture");
	SetCnet(0x014125ABD8, 6, "CustomSkinLoader");
	SetCnet(0x014125ABA0, 6, "CustomECMLoader");
	SetCnet(0x0141299700, 1, "CustomCharFactory");
	SetCnet(0x01410BA9E0, 2, "CrossServerCryMessageBoxHandler");
	SetCnet(0x014115F918, 2, "ConfirmExperience");
	SetCnet(0x014109C728, 7, "CommonHomeItemEditBoxItem");
	SetCnet(0x01411D2318, 5, "ComboSkillAction");
	SetCnet(0x01411D7190, 3, "ClossRedPacketGfx");
	SetCnet(0x014124BF70, 7, "ChildActInfo");
	SetCnet(0x01411D2258, 5, "CastSkillAction");
	SetCnet(0x0141116E90, 3, "CardGfxAnimation");
	SetCnet(0x0141112440, 8, "CardEventSelect");
	SetCnet(0x01411123B0, 8, "CardEventIdle");
	SetCnet(0x0141112488, 8, "CardEventDisappear");
	SetCnet(0x01411123F8, 8, "CardEventChoosing");
	SetCnet(0x0141112368, 8, "CardEvent");
	SetCnet(0x0141116E50, 3, "CardAnimationBase");
	SetCnet(0x0141116E70, 3, "CardAnimation");
	SetCnet(0x014124C0A0, 7, "CameraControlEvent");
	SetCnet(0x014124A448, 1, "CachedItemMan<A3DTexture * __ptr64>");
	SetCnet(0x014124A268, 1, "CachedItemMan<A3DGFXEx * __ptr64>");
	SetCnet(0x0141253338, 1, "CachedItem<A3DTexture * __ptr64>");
	SetCnet(0x014124A650, 2, "CachedItem<A3DGFXEx * __ptr64>");
	SetCnet(0x0141269388, 1, "CWndThreadManager");
	SetCnet(0x0141269328, 1, "CWndManager");
	SetCnet(0x014111B300, 8, "CViewShopItem");
	SetCnet(0x014111B348, 8, "CViewQueryItem");
	SetCnet(0x014111B2B8, 8, "CUIActionDelegate");
	SetCnet(0x014111B120, 6, "CShopItemSearcher");
	SetCnet(0x01410C1D10, 1, "CSequenceImageAnimator");
	SetCnet(0x0141221A10, 1, "CSafeString");
	SetCnet(0x014127F360, 21, "CRendererPosPassThru");
	SetCnet(0x014127F410, 18, "CRendererPosPassThru");
	SetCnet(0x014127F4A8, 4, "CRendererPosPassThru");
	SetCnet(0x014127EAC0, 15, "CRendererInputPin");
	SetCnet(0x014127EB40, 18, "CRendererInputPin");
	SetCnet(0x014127EBD8, 5, "CRendererInputPin");
	SetCnet(0x014127EC08, 9, "CRendererInputPin");
	SetCnet(0x014127F1F0, 21, "CPosPassThru");
	SetCnet(0x014127F2A0, 18, "CPosPassThru");
	SetCnet(0x014127F338, 4, "CPosPassThru");
	SetCnet(0x01411EEB78, 7, "CParamImpBase<unsigned int>");
	SetCnet(0x01411EEBF8, 7, "CParamImpBase<short>");
	SetCnet(0x01411EEAF8, 7, "CParamImpBase<int>");
	SetCnet(0x01411EEA78, 7, "CParamImpBase<bool>");
	SetCnet(0x01411EEC78, 7, "CParamImpBase<AWString>");
	SetCnet(0x01411EEBB8, 7, "CParamImp<unsigned int>");
	SetCnet(0x01411EEC38, 7, "CParamImp<short>");
	SetCnet(0x01411EEB38, 7, "CParamImp<int>");
	SetCnet(0x01411EEAB8, 7, "CParamImp<bool>");
	SetCnet(0x01411EECB8, 7, "CParamImp<AWString>");
	SetCnet(0x0141217048, 1, "CParamArray");
	SetCnet(0x0141217058, 7, "CParam");
	SetCnet(0x014121C188, 4, "CPWBrowser");
	SetCnet(0x014121C1B0, 20, "CPWBrowser");
	SetCnet(0x014111C478, 1, "COnlineAwardCtrl");
	SetCnet(0x01412729D0, 1, "CMesh");
	SetCnet(0x014127E4D8, 6, "CMemAllocator");
	SetCnet(0x014127E510, 11, "CMemAllocator");
	SetCnet(0x014127E420, 22, "CMediaSample");
	SetCnet(0x014110E860, 7, "CMailtoFriendReminder");
	SetCnet(0x0141279108, 1, "CLuaState");
	SetCnet(0x01412796D8, 3, "CLuaScript");
	SetCnet(0x0141279248, 1, "CLuaMemTbl");
	SetCnet(0x0141279AD8, 1, "CLuaDebugIPC");
	SetCnet(0x0141279FF8, 1, "CLuaDebugHelper");
	SetCnet(0x01412799E8, 1, "CLuaDebug");
	SetCnet(0x01410965B0, 1, "CHBasedCD::CHalfSpace");
	SetCnet(0x014125CA20, 2, "CHBasedCD::CFace");
	SetCnet(0x014125C838, 9, "CHBasedCD::CConvexHullData");
	SetCnet(0x01410E9EA8, 45, "CGuardianBeastItem");
	SetCnet(0x014109A850, 7, "CGfxRandMove");
	SetCnet(0x014109A650, 7, "CGfxParabolicMove");
	SetCnet(0x014109A7D0, 7, "CGfxOnTargetMove");
	SetCnet(0x014109A5D0, 7, "CGfxMoveBase");
	SetCnet(0x014109A690, 7, "CGfxMissileMove");
	SetCnet(0x014109A6D0, 7, "CGfxMeteoricMove");
	SetCnet(0x014109A810, 7, "CGfxLinkMove");
	SetCnet(0x014109A610, 7, "CGfxLinearMove");
	SetCnet(0x014109A710, 7, "CGfxHelixMove");
	SetCnet(0x014109A750, 7, "CGfxCurvedMove");
	SetCnet(0x014109A790, 7, "CGfxAccMove");
	SetCnet(0x01411EF368, 6, "CGMCommandViewWar");
	SetCnet(0x01411EF1E0, 6, "CGMCommandUnLock");
	SetCnet(0x01411EEF98, 6, "CGMCommandTriggerChat");
	SetCnet(0x01411EEF28, 6, "CGMCommandToggleID");
	SetCnet(0x01411EEE48, 6, "CGMCommandShutupUser");
	SetCnet(0x01411EEE10, 6, "CGMCommandShutupRole");
	SetCnet(0x01411EEDA0, 6, "CGMCommandShowOnlineNum");
	SetCnet(0x01411EEDD8, 6, "CGMCommandRestartServer");
	SetCnet(0x01411EF2F8, 6, "CGMCommandQueryUniqueData");
	SetCnet(0x01411EF170, 6, "CGMCommandQuerySpecItem");
	SetCnet(0x01411EF1A8, 6, "CGMCommandPermanentLock");
	SetCnet(0x01411EF330, 6, "CGMCommandOpenWar");
	SetCnet(0x01411EF218, 6, "CGMCommandOpenActivity");
	SetCnet(0x01411EEE80, 6, "CGMCommandMoveToPlayer");
	SetCnet(0x01411EED68, 6, "CGMCommandKickOutUser");
	SetCnet(0x01410E2C98, 2, "CGMCommandKickOutRole_Consume");
	SetCnet(0x01411EED30, 6, "CGMCommandKickOutRole");
	SetCnet(0x01411EF100, 6, "CGMCommandInvisible");
	SetCnet(0x01411EF138, 6, "CGMCommandInvincible");
	SetCnet(0x01411EF2C0, 6, "CGMCommandGetCommonValue");
	SetCnet(0x01411EF0C8, 6, "CGMCommandGenerateMob");
	SetCnet(0x01411EEFD0, 6, "CGMCommandGenerate");
	SetCnet(0x01411EEF60, 6, "CGMCommandForbidRole");
	SetCnet(0x01411EF088, 7, "CGMCommandDeactiveSpawner");
	SetCnet(0x01411EF008, 7, "CGMCommandControlSpawnerBase");
	SetCnet(0x01411EF250, 6, "CGMCommandCloseActivity");
	SetCnet(0x01411EF288, 6, "CGMCommandChangeDS");
	SetCnet(0x01411EEEB8, 6, "CGMCommandCallInPlayer");
	SetCnet(0x01411EEEF0, 6, "CGMCommandBroadcast");
	SetCnet(0x01411EF048, 7, "CGMCommandActiveSpawner");
	SetCnet(0x01411EECF8, 6, "CGMCommand");
	SetCnet(0x0141272660, 1, "CGLUTess");
	SetCnet(0x0141272730, 1, "CGLUPolygon");
	SetCnet(0x0141274188, 1, "CGLUContour");
	SetCnet(0x014109A268, 1, "CFaceBoneController");
	SetCnet(0x014109A168, 1, "CFaceBone");
	SetCnet(0x014109A0B8, 1, "CFaceAnimation");
	SetCnet(0x0141225D20, 1, "CFFT");
	SetCnet(0x014109A058, 1, "CExpression");
	SetCnet(0x01410D1A88, 2, "CExplorerMan");
	SetCnet(0x014127E390, 8, "CEnumPins");
	SetCnet(0x014127E3D8, 8, "CEnumMediaTypes");
	SetCnet(0x01412249C8, 7, "CEncryptedStream");
	SetCnet(0x01411C5640, 5, "CEMNFactionChooseBattleMediator");
	SetCnet(0x0141099938, 1, "CELTree");
	SetCnet(0x01410997C8, 1, "CELTransportBox");
	SetCnet(0x01410997D8, 1, "CELRegionSet");
	SetCnet(0x01410997B8, 1, "CELRegion");
	SetCnet(0x01410996C0, 1, "CELPrecinctSet");
	SetCnet(0x01410996B0, 1, "CELPrecinct");
	SetCnet(0x0141099458, 1, "CELCloudManager");
	SetCnet(0x0141099340, 3, "CELBrushBuilding");
	SetCnet(0x01411D7338, 5, "CEC_RedPacketResultMediator");
	SetCnet(0x01411CC708, 2, "CECYaoHouSkillStopTrigger");
	SetCnet(0x01411EB168, 20, "CECWorldRuleWildernessSurvival");
	SetCnet(0x01411EB0C0, 20, "CECWorldRuleBase");
	SetCnet(0x01411EB038, 5, "CECWorldMapMediator");
	SetCnet(0x01411EAF30, 2, "CECWorldMapEventMgr");
	SetCnet(0x01411E9C50, 1, "CECWorld");
	SetCnet(0x01411E9648, 5, "CECWildernessSurvivalMediator");
	SetCnet(0x014119F7E0, 4, "CECWaterArea");
	SetCnet(0x014116EBC8, 3, "CECWanmeiShader");
	SetCnet(0x014112EEF0, 3, "CECWakeUpTimer");
	SetCnet(0x01411E91F8, 5, "CECVoteMediator");
	SetCnet(0x01411E8FF8, 5, "CECVirtualStorageMediator");
	SetCnet(0x01411E04A0, 14, "CECVipScoreShop");
	SetCnet(0x01411E8E00, 5, "CECVipHelpMediator");
	SetCnet(0x01411E8828, 2, "CECUseUniversalTokenCommandManager");
	SetCnet(0x01411E8690, 3, "CECUseUniversalTokenCommand");
	SetCnet(0x014115B168, 9, "CECUseSkillItemActionFilter");
	SetCnet(0x0141172C78, 2, "CECUseFireworks2Handler");
	SetCnet(0x01411B5740, 24, "CECUnlockRuneSlotItem");
	SetCnet(0x01411E86B0, 3, "CECUniversalTokenVisitHTTPCommand");
	SetCnet(0x01411E86D0, 2, "CECUniversalTokenHTTPOSNavigatorTicketHandler");
	SetCnet(0x01411E8708, 5, "CECUniversalTokenHTTPOSNavigator");
	SetCnet(0x014114C088, 4, "CECURLOSNavigator");
	SetCnet(0x01411E7FE0, 2, "CECUIManager");
	SetCnet(0x01410ABDE0, 3, "CECUIHelper::ObjectArrayInitCallback");
	SetCnet(0x014113DC58, 3, "CECUIHelper::DefaultObjectArrayInitCallback<AUIStillImageButton>");
	SetCnet(0x01410ABF78, 3, "CECUIHelper::DefaultObjectArrayInitCallback<AUIObject>");
	SetCnet(0x0141113C68, 3, "CECUIHelper::DefaultObjectArrayInitCallback<AUIImagePicture>");
	SetCnet(0x01411E5230, 5, "CECTransmitMapsTool01Mediator");
	SetCnet(0x01411E51D8, 5, "CECTransmitMapsMediator");
	SetCnet(0x01411AF4D0, 9, "CECTracedTaskNPC");
	SetCnet(0x01411AF430, 9, "CECTracedPlayer");
	SetCnet(0x01411AF390, 9, "CECTracedObject");
	SetCnet(0x01411AF3E0, 9, "CECTracedNPC");
	SetCnet(0x01411AF480, 9, "CECTracedMatter");
	SetCnet(0x01411AF520, 9, "CECTracedHomeObj");
	SetCnet(0x01411D3F28, 8, "CECTitleSimulator");
	SetCnet(0x01411E51C8, 1, "CECTitleData");
	SetCnet(0x01411E4D40, 3, "CECTimer");
	SetCnet(0x01410E3500, 2, "CECTimePauseMessageBoxHandler");
	SetCnet(0x01411D5C18, 3, "CECTerrainPreprocessor");
	SetCnet(0x01411D5C38, 3, "CECTernBlockPreprocessor");
	SetCnet(0x01411E4B00, 1, "CECTeamMember");
	SetCnet(0x01411E4BD8, 1, "CECTeamMan");
	SetCnet(0x01411E4B20, 1, "CECTeam");
	SetCnet(0x01411E46B8, 5, "CECTaskMiniGameMediator");
	SetCnet(0x014121DA70, 175, "CECTaskInterface");
	SetCnet(0x0141142680, 2, "CECSummerActivityTaskTrigger");
	SetCnet(0x01411E4238, 5, "CECSummerActivityMediator2021");
	SetCnet(0x01411E4198, 4, "CECStubbornNetSender");
	SetCnet(0x01411E41C0, 4, "CECStubbornFactionInfoSender");
	SetCnet(0x01411E41E8, 4, "CECStubbornFactionInfoSender");
	SetCnet(0x01411E3F08, 1, "CECStringTab");
	SetCnet(0x01411E3D98, 5, "CECStoryBookMediator");
	SetCnet(0x01411E3AD0, 3, "CECStopNPCVoiceMediator::CECStopNPCVoiceBtnTimer");
	SetCnet(0x01411E3AF0, 5, "CECStopNPCVoiceMediator");
	SetCnet(0x01411E36F8, 5, "CECStatuePlayerPropertyMediator");
	SetCnet(0x01411D19B0, 83, "CECStatuePlayer");
	SetCnet(0x01411E3490, 5, "CECStatueActionSelectMediator");
	SetCnet(0x01411E25E0, 1, "CECStateComponent<CECSoloTowerChallengeSelectLayerMediator>");
	SetCnet(0x01411E20A8, 1, "CECStateComponent<CECSoloTowerChallengeAwardMediator>");
	SetCnet(0x01411E1E10, 1, "CECStateComponent<CECSoloTowerChallenge>");
	SetCnet(0x01411E23A8, 5, "CECState<CECSoloTowerChallengeSelectLayerMediator>");
	SetCnet(0x01411E1F38, 5, "CECState<CECSoloTowerChallengeAwardMediator>");
	SetCnet(0x01411E1D18, 5, "CECState<CECSoloTowerChallenge>");
	SetCnet(0x014116A650, 2, "CECSpriteDecal");
	SetCnet(0x01411E32D0, 1, "CECSprite");
	SetCnet(0x01411E3230, 5, "CECSpringFestival2021Mediator");
	SetCnet(0x01411E2BF8, 5, "CECSpouseParadeBookMediator");
	SetCnet(0x01411E2BC8, 5, "CECSpouseLoveTreeMediator");
	SetCnet(0x01411E2B48, 5, "CECSpouseLoveTreeChooseMediator");
	SetCnet(0x01411E2B18, 5, "CECSpouseEnterHomeMediator");
	SetCnet(0x014116EB80, 3, "CECSpecialShader");
	SetCnet(0x01411E2890, 5, "CECSoundCache");
	SetCnet(0x01411E1FB8, 9, "CECSoloTowerChallengeUIStateWait");
	SetCnet(0x01411E1F68, 9, "CECSoloTowerChallengeUIStateShowPoker");
	SetCnet(0x01411E2058, 9, "CECSoloTowerChallengeUIStateNotShow");
	SetCnet(0x01411E2008, 9, "CECSoloTowerChallengeUIStateAward");
	SetCnet(0x01411E26B0, 5, "CECSoloTowerChallengeStateMediator");
	SetCnet(0x01411E1D48, 7, "CECSoloTowerChallengeStateIdle");
	SetCnet(0x01411E1DA8, 7, "CECSoloTowerChallengeStateChallenging");
	SetCnet(0x01411E2530, 14, "CECSoloTowerChallengeSelectLayerStateSelectingLayer");
	SetCnet(0x01411E23D8, 14, "CECSoloTowerChallengeSelectLayerStateIdle");
	SetCnet(0x01411E2480, 14, "CECSoloTowerChallengeSelectLayerStateGreetingNPC");
	SetCnet(0x01411E25F0, 5, "CECSoloTowerChallengeSelectLayerMediator");
	SetCnet(0x01411E2620, 4, "CECSoloTowerChallengeSelectLayerMediator");
	SetCnet(0x01411E2260, 5, "CECSoloTowerChallengeScoreCostMediator");
	SetCnet(0x01411E2230, 5, "CECSoloTowerChallengeRankMediator");
	SetCnet(0x01411E20E8, 5, "CECSoloTowerChallengeConfirmMediator");
	SetCnet(0x01411E20B8, 5, "CECSoloTowerChallengeAwardMediator");
	SetCnet(0x01411E1B48, 5, "CECSlideSkillMediator");
	SetCnet(0x014116E848, 18, "CECSkinModelWrapper");
	SetCnet(0x014113BB48, 2, "CECSkillUpGradeSkillHandler");
	SetCnet(0x01411E1A90, 1, "CECSkillStr");
	SetCnet(0x01411D3DC0, 8, "CECSkillSimulator");
	SetCnet(0x01411AE848, 1, "CECSkillPanelChange");
	SetCnet(0x01411C34E0, 17, "CECSkillGfxMan");
	SetCnet(0x01411C3448, 10, "CECSkillGfxEvent");
	SetCnet(0x01411C3570, 1, "CECSkillExtraGfxMan");
	SetCnet(0x014115B118, 9, "CECSkillActionFilter");
	SetCnet(0x01411E1A80, 1, "CECSkill");
	SetCnet(0x01411E1910, 5, "CECSimulatorMediator");
	SetCnet(0x01411E1878, 5, "CECSimulatorHelpMediator");
	SetCnet(0x01411D3CE8, 8, "CECSimulatorBase");
	SetCnet(0x0141142FF0, 4, "CECShowNewSkillHelper");
	SetCnet(0x01411E1498, 1, "CECShortcutSet");
	SetCnet(0x014114E820, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgWeddingInvite>");
	SetCnet(0x014114E4C0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgWedding>");
	SetCnet(0x014114CAA8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgWebMyShop>");
	SetCnet(0x0141154990, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgWSPack>");
	SetCnet(0x0141149E38, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgTrade>");
	SetCnet(0x0141140DD8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgStorage>");
	SetCnet(0x0141140678, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgStoneTransfer>");
	SetCnet(0x0141140360, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgStoneReplace>");
	SetCnet(0x014113EBA0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgSpouseParadeBook>");
	SetCnet(0x014113E1A8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgSplit>");
	SetCnet(0x01411326B8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgShop>");
	SetCnet(0x0141130B20, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgServantSubBag>");
	SetCnet(0x014112C7B8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgRuneMain>");
	SetCnet(0x014112B900, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgResetProp>");
	SetCnet(0x014112AAF0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgRefineTrans>");
	SetCnet(0x0141129E78, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgRedPacketEdit>");
	SetCnet(0x0141127AB0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgRandProp>");
	SetCnet(0x0141123238, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgProduceLibrary>");
	SetCnet(0x0141122E20, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgProduce>");
	SetCnet(0x0141122808, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgPridictableEngrave>");
	SetCnet(0x014111FE68, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgPetHatch>");
	SetCnet(0x014111EE28, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgPetDye>");
	SetCnet(0x014111AFC8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgOfflineShopCreate>");
	SetCnet(0x014110FBA0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgMaterialRefine>");
	SetCnet(0x014110EDF8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgMailWrite>");
	SetCnet(0x014110A3A0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgLoanPayment>");
	SetCnet(0x0141104850, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgInstall>");
	SetCnet(0x0141103548, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgIdentify>");
	SetCnet(0x01410E96E0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgGuradianBeastHatch>");
	SetCnet(0x01410E9800, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgGuardianBeastRecharge>");
	SetCnet(0x01410E7E98, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgGuardianBeastBag>");
	SetCnet(0x01410E1B70, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgGenCardRespawn>");
	SetCnet(0x01410DCCA8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFortressMaterial>");
	SetCnet(0x01410DAA00, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFlySwordImprove>");
	SetCnet(0x01410D9E18, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFireworks2>");
	SetCnet(0x01410D9530, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFashionSplit>");
	SetCnet(0x01410D7A48, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFactionStorage>");
	SetCnet(0x01410D7530, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFactionShop>");
	SetCnet(0x01410D69F8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFactionShareMaster>");
	SetCnet(0x01410D49A0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFactionPetFeed>");
	SetCnet(0x01410D1F88, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFaceLift>");
	SetCnet(0x01410D06E0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipUndestroy>");
	SetCnet(0x01410CE910, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipSlotNew>");
	SetCnet(0x01410CE5F0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipSlot>");
	SetCnet(0x01410CE2D0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipRefine>");
	SetCnet(0x01410CDDA0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipMark>");
	SetCnet(0x01410CDA88, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipDye>");
	SetCnet(0x01410CD770, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipDestroy>");
	SetCnet(0x01410CD468, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipBind>");
	SetCnet(0x01410CCAC8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEngrave>");
	SetCnet(0x01410C9800, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEasyProduce>");
	SetCnet(0x01410CC220, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFXiDian>");
	SetCnet(0x01410CBCC0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFToPill>");
	SetCnet(0x01410CB7F8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFRetrain>");
	SetCnet(0x01410CB498, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFRefineTrans>");
	SetCnet(0x01410CB180, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFRefine>");
	SetCnet(0x01410CA8C0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFLearn>");
	SetCnet(0x01410CA470, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFInExp>");
	SetCnet(0x01410CA158, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFGeniusReset>");
	SetCnet(0x01410C9BA0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFEquipRemove>");
	SetCnet(0x01410C6ED8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgDamageRep>");
	SetCnet(0x01410B6B88, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgCampTokenTree>");
	SetCnet(0x01410B4C58, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgCampChange>");
	SetCnet(0x01410B24E8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgBooth>");
	SetCnet(0x01410B1888, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgBibleRefineTrans>");
	SetCnet(0x01410B0B18, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgBibleRefine>");
	SetCnet(0x01410AD690, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgAutoHPMP>");
	SetCnet(0x01410ACFC8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgAuctionSellList>");
	SetCnet(0x01410ACF80, 5, "CECShortcutMgr::ClickShortcut");
	SetCnet(0x01411E0FA0, 6, "CECShortcut");
	SetCnet(0x01411E0AB0, 9, "CECShoppingControllerState");
	SetCnet(0x01411E0AA0, 1, "CECShoppingControllerChange");
	SetCnet(0x01411E0CB0, 1, "CECShoppingController");
	SetCnet(0x01411E0CC0, 4, "CECShoppingController");
	SetCnet(0x01411E0870, 1, "CECShoppingCartChange");
	SetCnet(0x01411E0890, 1, "CECShoppingCart");
	SetCnet(0x01411E08A0, 4, "CECShoppingCart");
	SetCnet(0x01410CE240, 3, "CECShopSearchValidPolicy");
	SetCnet(0x01411E0DF0, 3, "CECShopSearchTaskPolicy");
	SetCnet(0x0141126A00, 3, "CECShopSearchPricePolicy");
	SetCnet(0x01410CE220, 3, "CECShopSearchPolicyBase");
	SetCnet(0x0141126A20, 3, "CECShopSearchPackSpacePolicy");
	SetCnet(0x01410CE280, 3, "CECShopSearchLevelPolicy");
	SetCnet(0x01410CE260, 3, "CECShopSearchIDPolicy");
	SetCnet(0x0141172BC8, 3, "CECShopSearchFashionShopPolicy");
	SetCnet(0x01410CE2A0, 3, "CECShopSearchCompositePolicy");
	SetCnet(0x0141132A58, 5, "CECShopCartBuyCommand");
	SetCnet(0x01410B3B30, 5, "CECShopBuyCommand");
	SetCnet(0x01411E0318, 1, "CECShopBaseChange");
	SetCnet(0x01411E0338, 14, "CECShopArrayItems");
	SetCnet(0x01411E0148, 5, "CECShakeCameraBase");
	SetCnet(0x01411E01A8, 5, "CECShakeCamera2");
	SetCnet(0x01411E0178, 5, "CECShakeCamera");
	SetCnet(0x01411DFF58, 5, "CECSetPasswordMediator");
	SetCnet(0x01410C8280, 2, "CECServantPackOpt");
	SetCnet(0x01411DF508, 5, "CECServantMediator");
	SetCnet(0x01411BAC48, 24, "CECServantDebrisItem");
	SetCnet(0x01411DBAC8, 5, "CECSelectTransmitMapMediator");
	SetCnet(0x01411562E8, 2, "CECScriptUnitWait");
	SetCnet(0x0141156360, 2, "CECScriptUnitStart");
	SetCnet(0x0141156330, 2, "CECScriptUnitReturn");
	SetCnet(0x0141156378, 2, "CECScriptUnitIfCondition");
	SetCnet(0x014115A990, 2, "CECScriptUnitIfBlock::CECScriptUnitIfBranch");
	SetCnet(0x0141156390, 2, "CECScriptUnitIfBlock");
	SetCnet(0x0141156318, 2, "CECScriptUnitFunction");
	SetCnet(0x0141156348, 2, "CECScriptUnitFinish");
	SetCnet(0x014115AAD0, 8, "CECScriptUnitExecutorStateWaitPop");
	SetCnet(0x014115AA40, 8, "CECScriptUnitExecutorStateNull");
	SetCnet(0x014115A9F8, 8, "CECScriptUnitExecutorStateNormal");
	SetCnet(0x014115AA88, 8, "CECScriptUnitExecutorStateBlock");
	SetCnet(0x01411599F0, 8, "CECScriptUnitExecutorStateAfterPop");
	SetCnet(0x01411599A8, 8, "CECScriptUnitExecutorState");
	SetCnet(0x014115A9A8, 9, "CECScriptUnitExecutor");
	SetCnet(0x0141156300, 2, "CECScriptUnitCommonBlock");
	SetCnet(0x01411562D0, 2, "CECScriptUnit");
	SetCnet(0x014115A8F0, 11, "CECScriptUIInGame");
	SetCnet(0x014115A740, 3, "CECScriptTipWorkSetTitleAndContent");
	SetCnet(0x014115A760, 3, "CECScriptTipWorkMove");
	SetCnet(0x014115A780, 3, "CECScriptTipWorkGfx");
	SetCnet(0x014115A720, 3, "CECScriptTipWork");
	SetCnet(0x014115A5F0, 5, "CECScriptOptionInGame");
	SetCnet(0x014115A6C8, 5, "CECScriptOption");
	SetCnet(0x01411E7FF8, 11, "CECScriptManInGame");
	SetCnet(0x014115A4A0, 11, "CECScriptMan");
	SetCnet(0x014115A408, 6, "CECScriptGlobalResourceInGame");
	SetCnet(0x014115A1F8, 2, "CECScriptFunctionStopVoice");
	SetCnet(0x014115A258, 2, "CECScriptFunctionShowTip");
	SetCnet(0x014115A270, 2, "CECScriptFunctionShowText");
	SetCnet(0x014115A180, 2, "CECScriptFunctionShowHelpDialog");
	SetCnet(0x014115A288, 2, "CECScriptFunctionShowGfxOnObj");
	SetCnet(0x014115A1B0, 2, "CECScriptFunctionShowDialog");
	SetCnet(0x014115A240, 2, "CECScriptFunctionSetTipTitleAndContent");
	SetCnet(0x014115A228, 2, "CECScriptFunctionSetImage");
	SetCnet(0x014115A168, 2, "CECScriptFunctionSetHasNextTip");
	SetCnet(0x014115A1C8, 2, "CECScriptFunctionSetFlashDialogItem");
	SetCnet(0x014115A198, 2, "CECScriptFunctionSetContent");
	SetCnet(0x014115A1E0, 2, "CECScriptFunctionPlayVoice");
	SetCnet(0x014115A210, 2, "CECScriptFucntionResetTimer");
	SetCnet(0x0141156278, 2, "CECScriptConditionParser::COperatorOr");
	SetCnet(0x01411562A8, 2, "CECScriptConditionParser::COperatorNot");
	SetCnet(0x0141156290, 2, "CECScriptConditionParser::COperatorAnd");
	SetCnet(0x0141156268, 1, "CECScriptConditionParser::COperand");
	SetCnet(0x01411DBA48, 5, "CECScriptCommandMediator");
	SetCnet(0x0141158528, 3, "CECScriptCheckTitle");
	SetCnet(0x0141158548, 1, "CECScriptCheckTitle");
	SetCnet(0x0141157D18, 3, "CECScriptCheckTaskStatus");
	SetCnet(0x0141157D38, 1, "CECScriptCheckTaskStatus");
	SetCnet(0x0141157D48, 3, "CECScriptCheckTaskInventoryItemCount");
	SetCnet(0x0141157D68, 1, "CECScriptCheckTaskInventoryItemCount");
	SetCnet(0x0141157C58, 3, "CECScriptCheckTargetPlayer");
	SetCnet(0x0141157C78, 1, "CECScriptCheckTargetPlayer");
	SetCnet(0x0141157C28, 3, "CECScriptCheckTargetNPC");
	SetCnet(0x0141157C48, 1, "CECScriptCheckTargetNPC");
	SetCnet(0x0141157C88, 3, "CECScriptCheckTargetMonster");
	SetCnet(0x0141157CA8, 1, "CECScriptCheckTargetMonster");
	SetCnet(0x0141159410, 163, "CECScriptCheckStateInGame");
	SetCnet(0x0141157DA8, 3, "CECScriptCheckSkillLevelBetween");
	SetCnet(0x0141157DC8, 1, "CECScriptCheckSkillLevelBetween");
	SetCnet(0x0141157DD8, 3, "CECScriptCheckSkillAbilityBetween");
	SetCnet(0x0141157DF8, 1, "CECScriptCheckSkillAbilityBetween");
	SetCnet(0x0141157BF8, 3, "CECScriptCheckServiceNPC");
	SetCnet(0x0141157C18, 1, "CECScriptCheckServiceNPC");
	SetCnet(0x01411579E8, 3, "CECScriptCheckScriptExecuted");
	SetCnet(0x0141157A08, 1, "CECScriptCheckScriptExecuted");
	SetCnet(0x01411584C8, 3, "CECScriptCheckReputationBetween");
	SetCnet(0x01411584E8, 1, "CECScriptCheckReputationBetween");
	SetCnet(0x01411584F8, 3, "CECScriptCheckReincarnation");
	SetCnet(0x0141158518, 1, "CECScriptCheckReincarnation");
	SetCnet(0x0141158288, 3, "CECScriptCheckPlayerTrashBoxHasPsw");
	SetCnet(0x01411582A8, 1, "CECScriptCheckPlayerTrashBoxHasPsw");
	SetCnet(0x0141157A78, 3, "CECScriptCheckPlayerProfession");
	SetCnet(0x0141157A98, 1, "CECScriptCheckPlayerProfession");
	SetCnet(0x0141157AD8, 3, "CECScriptCheckPlayerMPPercentBetween");
	SetCnet(0x0141157AF8, 1, "CECScriptCheckPlayerMPPercentBetween");
	SetCnet(0x0141157A48, 3, "CECScriptCheckPlayerLevelBetween");
	SetCnet(0x0141157A68, 1, "CECScriptCheckPlayerLevelBetween");
	SetCnet(0x0141157FE8, 3, "CECScriptCheckPlayerIsUsingTrashBox");
	SetCnet(0x0141158008, 1, "CECScriptCheckPlayerIsUsingTrashBox");
	SetCnet(0x01411581C8, 3, "CECScriptCheckPlayerIsUsingItem");
	SetCnet(0x01411581E8, 1, "CECScriptCheckPlayerIsUsingItem");
	SetCnet(0x01411582E8, 3, "CECScriptCheckPlayerIsUnderWater");
	SetCnet(0x0141158308, 1, "CECScriptCheckPlayerIsUnderWater");
	SetCnet(0x0141157FB8, 3, "CECScriptCheckPlayerIsTrading");
	SetCnet(0x0141157FD8, 1, "CECScriptCheckPlayerIsTrading");
	SetCnet(0x01411580A8, 3, "CECScriptCheckPlayerIsTalkingWithNPC");
	SetCnet(0x01411580C8, 1, "CECScriptCheckPlayerIsTalkingWithNPC");
	SetCnet(0x01411580D8, 3, "CECScriptCheckPlayerIsSpellingMagic");
	SetCnet(0x01411580F8, 1, "CECScriptCheckPlayerIsSpellingMagic");
	SetCnet(0x0141157E68, 3, "CECScriptCheckPlayerIsSitting");
	SetCnet(0x0141157E88, 1, "CECScriptCheckPlayerIsSitting");
	SetCnet(0x0141158018, 3, "CECScriptCheckPlayerIsRooting");
	SetCnet(0x0141158038, 1, "CECScriptCheckPlayerIsRooting");
	SetCnet(0x0141158198, 3, "CECScriptCheckPlayerIsReviving");
	SetCnet(0x01411581B8, 1, "CECScriptCheckPlayerIsReviving");
	SetCnet(0x0141158348, 3, "CECScriptCheckPlayerIsPlayTrick");
	SetCnet(0x0141158368, 1, "CECScriptCheckPlayerIsPlayTrick");
	SetCnet(0x0141158138, 3, "CECScriptCheckPlayerIsPicking");
	SetCnet(0x0141158158, 1, "CECScriptCheckPlayerIsPicking");
	SetCnet(0x0141157EC8, 3, "CECScriptCheckPlayerIsPariah");
	SetCnet(0x0141157EE8, 1, "CECScriptCheckPlayerIsPariah");
	SetCnet(0x0141157F28, 3, "CECScriptCheckPlayerIsPVPOpen");
	SetCnet(0x0141157F48, 1, "CECScriptCheckPlayerIsPVPOpen");
	SetCnet(0x01411582B8, 3, "CECScriptCheckPlayerIsMoving");
	SetCnet(0x01411582D8, 1, "CECScriptCheckPlayerIsMoving");
	SetCnet(0x0141158078, 3, "CECScriptCheckPlayerIsMeleeing");
	SetCnet(0x0141158098, 1, "CECScriptCheckPlayerIsMeleeing");
	SetCnet(0x0141158108, 3, "CECScriptCheckPlayerIsJumping");
	SetCnet(0x0141158128, 1, "CECScriptCheckPlayerIsJumping");
	SetCnet(0x0141157E98, 3, "CECScriptCheckPlayerIsInVader");
	SetCnet(0x0141157EB8, 1, "CECScriptCheckPlayerIsInVader");
	SetCnet(0x0141157F58, 3, "CECScriptCheckPlayerIsInFashionMode");
	SetCnet(0x0141157F78, 1, "CECScriptCheckPlayerIsInFashionMode");
	SetCnet(0x0141158168, 3, "CECScriptCheckPlayerIsGathering");
	SetCnet(0x0141158188, 1, "CECScriptCheckPlayerIsGathering");
	SetCnet(0x0141157E38, 3, "CECScriptCheckPlayerIsFlying");
	SetCnet(0x0141157E58, 1, "CECScriptCheckPlayerIsFlying");
	SetCnet(0x0141157F88, 3, "CECScriptCheckPlayerIsFighting");
	SetCnet(0x0141157FA8, 1, "CECScriptCheckPlayerIsFighting");
	SetCnet(0x0141158228, 3, "CECScriptCheckPlayerIsDoingSessionPose");
	SetCnet(0x0141158248, 1, "CECScriptCheckPlayerIsDoingSessionPose");
	SetCnet(0x0141157EF8, 3, "CECScriptCheckPlayerIsDiving");
	SetCnet(0x0141157F18, 1, "CECScriptCheckPlayerIsDiving");
	SetCnet(0x0141157E08, 3, "CECScriptCheckPlayerIsDead");
	SetCnet(0x0141157E28, 1, "CECScriptCheckPlayerIsDead");
	SetCnet(0x01411581F8, 3, "CECScriptCheckPlayerIsChangingFace");
	SetCnet(0x0141158218, 1, "CECScriptCheckPlayerIsChangingFace");
	SetCnet(0x0141158258, 3, "CECScriptCheckPlayerIsAdjustOrient");
	SetCnet(0x0141158278, 1, "CECScriptCheckPlayerIsAdjustOrient");
	SetCnet(0x0141158318, 3, "CECScriptCheckPlayerIsAdjustDistance");
	SetCnet(0x0141158338, 1, "CECScriptCheckPlayerIsAdjustDistance");
	SetCnet(0x0141157AA8, 3, "CECScriptCheckPlayerHPPercentBetween");
	SetCnet(0x0141157AC8, 1, "CECScriptCheckPlayerHPPercentBetween");
	SetCnet(0x0141158048, 3, "CECScriptCheckPlayerCannotAttack");
	SetCnet(0x0141158068, 1, "CECScriptCheckPlayerCannotAttack");
	SetCnet(0x01411583D8, 3, "CECScriptCheckPQIsTriggered");
	SetCnet(0x01411583F8, 1, "CECScriptCheckPQIsTriggered");
	SetCnet(0x0141158558, 3, "CECScriptCheckNoActiveScript");
	SetCnet(0x0141158578, 1, "CECScriptCheckNoActiveScript");
	SetCnet(0x0141157CE8, 3, "CECScriptCheckMapID");
	SetCnet(0x0141157D08, 1, "CECScriptCheckMapID");
	SetCnet(0x0141157B98, 3, "CECScriptCheckKillMonster");
	SetCnet(0x0141157BB8, 1, "CECScriptCheckKillMonster");
	SetCnet(0x01411583A8, 3, "CECScriptCheckIsTimerTriggered");
	SetCnet(0x01411583C8, 1, "CECScriptCheckIsTimerTriggered");
	SetCnet(0x0141158378, 3, "CECScriptCheckInventoryItemMoved");
	SetCnet(0x0141158398, 1, "CECScriptCheckInventoryItemMoved");
	SetCnet(0x0141157D78, 3, "CECScriptCheckInventoryItemCount");
	SetCnet(0x0141157D98, 1, "CECScriptCheckInventoryItemCount");
	SetCnet(0x0141158588, 3, "CECScriptCheckHomeLevel");
	SetCnet(0x01411585A8, 1, "CECScriptCheckHomeLevel");
	SetCnet(0x0141158648, 3, "CECScriptCheckHomeHarvest");
	SetCnet(0x0141158668, 1, "CECScriptCheckHomeHarvest");
	SetCnet(0x01411585E8, 3, "CECScriptCheckHomeFunctionBuildingLevel");
	SetCnet(0x0141158608, 1, "CECScriptCheckHomeFunctionBuildingLevel");
	SetCnet(0x01411585B8, 3, "CECScriptCheckHomeExp");
	SetCnet(0x01411585D8, 1, "CECScriptCheckHomeExp");
	SetCnet(0x0141158618, 3, "CECScriptCheckHomeEditMode");
	SetCnet(0x0141158638, 1, "CECScriptCheckHomeEditMode");
	SetCnet(0x0141158498, 3, "CECScriptCheckHavePet");
	SetCnet(0x01411584B8, 1, "CECScriptCheckHavePet");
	SetCnet(0x0141158468, 3, "CECScriptCheckFrameRateBetween");
	SetCnet(0x0141158488, 1, "CECScriptCheckFrameRateBetween");
	SetCnet(0x0141157BC8, 3, "CECScriptCheckEquipNewWeapon");
	SetCnet(0x0141157BE8, 1, "CECScriptCheckEquipNewWeapon");
	SetCnet(0x0141157A18, 3, "CECScriptCheckDisplayNext");
	SetCnet(0x0141157A38, 1, "CECScriptCheckDisplayNext");
	SetCnet(0x0141157B38, 3, "CECScriptCheckDialogItemText");
	SetCnet(0x0141157B58, 1, "CECScriptCheckDialogItemText");
	SetCnet(0x0141157B68, 3, "CECScriptCheckDialogItemIsChecked");
	SetCnet(0x0141157B88, 1, "CECScriptCheckDialogItemIsChecked");
	SetCnet(0x0141157B08, 3, "CECScriptCheckDialogIsVisible");
	SetCnet(0x0141157B28, 1, "CECScriptCheckDialogIsVisible");
	SetCnet(0x0141158678, 3, "CECScriptCheckBtnClicked");
	SetCnet(0x0141158698, 1, "CECScriptCheckBtnClicked");
	SetCnet(0x01411579B8, 3, "CECScriptCheckBase");
	SetCnet(0x01411579D8, 1, "CECScriptCheckBase");
	SetCnet(0x0141158438, 3, "CECScriptCheckAutoMove");
	SetCnet(0x0141158458, 1, "CECScriptCheckAutoMove");
	SetCnet(0x0141157CB8, 3, "CECScriptCheckAddress");
	SetCnet(0x0141157CD8, 1, "CECScriptCheckAddress");
	SetCnet(0x0141158408, 3, "CECScriptCheckAccountBoxIsTriggered");
	SetCnet(0x0141158428, 1, "CECScriptCheckAccountBoxIsTriggered");
	SetCnet(0x01411563E8, 3, "CECScriptBoolExpOr");
	SetCnet(0x0141156408, 3, "CECScriptBoolExpNot");
	SetCnet(0x0141156428, 3, "CECScriptBoolExpConstant");
	SetCnet(0x01411563C8, 3, "CECScriptBoolExpAnd");
	SetCnet(0x01411563A8, 3, "CECScriptBoolExp");
	SetCnet(0x01411562C0, 1, "CECScript");
	SetCnet(0x01411DB9C8, 4, "CECScreenEffectWhiteScreen");
	SetCnet(0x01411DB8D8, 4, "CECScreenEffectShake");
	SetCnet(0x01411DB900, 4, "CECScreenEffectRedSpark");
	SetCnet(0x01411DB9A0, 4, "CECScreenEffectGreenSpark");
	SetCnet(0x01411DB950, 4, "CECScreenEffectGrayScreen");
	SetCnet(0x01411DB928, 4, "CECScreenEffectBlackScreen");
	SetCnet(0x01411DB978, 4, "CECScreenEffectBindingCarrier");
	SetCnet(0x01411DB8B0, 4, "CECScreenEffect");
	SetCnet(0x01411DB738, 4, "CECScnBoxArea");
	SetCnet(0x0141096490, 4, "CECSceneThreadObj");
	SetCnet(0x01411DB6C0, 1, "CECSceneServiceNPCChange");
	SetCnet(0x0141124780, 2, "CECSceneServiceNPC::SceneServiceNPCProcessor");
	SetCnet(0x01411DB6E0, 1, "CECSceneServiceNPC");
	SetCnet(0x01411DAE78, 1, "CECSceneBlock");
	SetCnet(0x01411DA590, 2, "CECScene");
	SetCnet(0x01411E1198, 6, "CECSCSysModule");
	SetCnet(0x01411E1010, 6, "CECSCSpecialSkill");
	SetCnet(0x01411E10F0, 6, "CECSCSkillGrp");
	SetCnet(0x01411E0FD8, 6, "CECSCSkill");
	SetCnet(0x01411E1128, 6, "CECSCPet");
	SetCnet(0x01411E1048, 6, "CECSCItem");
	SetCnet(0x01411E1080, 6, "CECSCFlyItem");
	SetCnet(0x01411E10B8, 6, "CECSCCommand");
	SetCnet(0x01411E1160, 6, "CECSCAutoFashion");
	SetCnet(0x01411D3E08, 8, "CECRuneSimulator");
	SetCnet(0x01411DA280, 5, "CECRuneMediator");
	SetCnet(0x01411B5808, 24, "CECRune");
	SetCnet(0x014115B408, 6, "CECRideToUseTargetItemContext");
	SetCnet(0x014115B398, 6, "CECRideToSkillContext");
	SetCnet(0x014115B360, 6, "CECRideToFlyContext");
	SetCnet(0x014115B0C8, 9, "CECRideActionFilter");
	SetCnet(0x014116EBA0, 3, "CECRewuShader");
	SetCnet(0x01411D73B8, 1, "CECRenderModelMgr");
	SetCnet(0x01411DF668, 8, "CECRenderModel");
	SetCnet(0x01411D72B8, 5, "CECRedPacketMessageMediator");
	SetCnet(0x01411D7228, 5, "CECRedPacketMediator");
	SetCnet(0x01411D7160, 5, "CECRedPacketGfxMediator");
	SetCnet(0x01411D70C0, 5, "CECRedPacketEditMediator");
	SetCnet(0x01411B5F10, 24, "CECRedBookUpgradeItem");
	SetCnet(0x01411D6BF8, 5, "CECRedBookMediator");
	SetCnet(0x01411D68A8, 5, "CECRedBookBoxMediator");
	SetCnet(0x01411FB2B8, 7, "CECReconnectUserTokenPolicy");
	SetCnet(0x01411FB510, 16, "CECReconnectStateRequested");
	SetCnet(0x01411FB5B0, 16, "CECReconnectStateReconnecting");
	SetCnet(0x01411FB3C8, 16, "CECReconnectStateNone");
	SetCnet(0x01411FB468, 16, "CECReconnectStateCanRequest");
	SetCnet(0x01411FB338, 16, "CECReconnectState");
	SetCnet(0x01411FB280, 6, "CECReconnectSimpleUserPasswordPolicy");
	SetCnet(0x01411FB248, 6, "CECReconnectPolicy");
	SetCnet(0x01411FB2F8, 7, "CECReconnectForeignArcUserTokenPolicy");
	SetCnet(0x01411D6468, 5, "CECRecallActivityMediator");
	SetCnet(0x01411D6180, 5, "CECRandomSoftKeyboardMediator");
	SetCnet(0x01410B3B60, 5, "CECRandShopBuyCommand");
	SetCnet(0x01411D9D38, 1, "CECRTDebug");
	SetCnet(0x01411D4CD8, 13, "CECQuickBuyPopTriggerPolicy");
	SetCnet(0x01411D4D48, 4, "CECQuickBuyPopHidePolicy");
	SetCnet(0x01411D5018, 3, "CECQuickBuyPopBuyItemPolicy");
	SetCnet(0x01411D4D70, 2, "CECQuickBuyPopAlignPolicy");
	SetCnet(0x01411D4D88, 13, "CECQuickBuyPopActivityTrigger");
	SetCnet(0x01411D4DF8, 4, "CECQuickBuyPopActivityHide");
	SetCnet(0x01411D4E20, 2, "CECQuickBuyPopActivityAlign");
	SetCnet(0x01411B5CB8, 24, "CECQiLingItem");
	SetCnet(0x01411B5BF0, 24, "CECQiHunItem");
	SetCnet(0x01411B5B28, 24, "CECQiHunCoverItem");
	SetCnet(0x01411E03B0, 14, "CECQShop");
	SetCnet(0x01411FBCA0, 4, "CECProtocolInt<unsigned int>");
	SetCnet(0x01411FBC78, 4, "CECProtocolInt<short>");
	SetCnet(0x01411FBC50, 4, "CECProtocolInt<int>");
	SetCnet(0x01411FBCC8, 4, "CECProtocolInt<char>");
	SetCnet(0x01411D2550, 5, "CECPridictableEngraveMediator");
	SetCnet(0x01411D5BF8, 3, "CECPreprocessor");
	SetCnet(0x01411D2520, 5, "CECPrayMediator");
	SetCnet(0x01411D2400, 5, "CECPortraitRender");
	SetCnet(0x01411D21E8, 1, "CECPlayerWrapper");
	SetCnet(0x01411C2EB0, 17, "CECPlayerMan");
	SetCnet(0x01411C2F40, 4, "CECPlayerMan");
	SetCnet(0x01411D2070, 1, "CECPlayerLevelRankRealmChangeCheck");
	SetCnet(0x01411D2050, 1, "CECPlayerLevelRankRealmChange");
	SetCnet(0x01411D1FF8, 5, "CECPlayerFightScoreMediator");
	SetCnet(0x01411CC3E8, 2, "CECPlayerEquipItemsInventoryDrawer");
	SetCnet(0x0141100398, 2, "CECPlayerEquipItemsDrawer");
	SetCnet(0x01411CC3D0, 2, "CECPlayerEquipItemsArrayDrawer");
	SetCnet(0x01411CFE90, 15, "CECPlayerActionPlaySupportCastSkillWhenMovePolicy");
	SetCnet(0x01411CFD90, 15, "CECPlayerActionPlayPolicy");
	SetCnet(0x01411CFE10, 15, "CECPlayerActionPlayDefaultPolicy");
	SetCnet(0x01411CC400, 80, "CECPlayer");
	SetCnet(0x01411CA5A0, 1, "CECPetData");
	SetCnet(0x01411CA5B0, 1, "CECPetCorral");
	SetCnet(0x01411CA0D8, 95, "CECPet");
	SetCnet(0x014114C810, 3, "CECPendingSellingRole");
	SetCnet(0x0141177A10, 3, "CECPendingLogoutHalf");
	SetCnet(0x014109D710, 3, "CECPendingLogoutFull");
	SetCnet(0x0141177A48, 3, "CECPendingLogoutCrossServer");
	SetCnet(0x0141177A88, 3, "CECPendingCrossServerGetInOut");
	SetCnet(0x01411CA090, 3, "CECPendingAction");
	SetCnet(0x01411CA058, 1, "CECPateText");
	SetCnet(0x014111E0D0, 5, "CECPasswordInfoBase");
	SetCnet(0x01411C9E60, 5, "CECParkRankMediator");
	SetCnet(0x0141157968, 1, "CECParamList::Param<unsigned short>");
	SetCnet(0x014115A158, 1, "CECParamList::Param<unsigned long>");
	SetCnet(0x0141157958, 1, "CECParamList::Param<int>");
	SetCnet(0x0141157978, 1, "CECParamList::Param<float>");
	SetCnet(0x014115A148, 1, "CECParamList::Param<bool>");
	SetCnet(0x0141157998, 1, "CECParamList::Param<AWString>");
	SetCnet(0x0141157988, 1, "CECParamList::Param<AString>");
	SetCnet(0x01411579A8, 1, "CECParamList");
	SetCnet(0x014115F210, 2, "CECPackItemCounterCondition");
	SetCnet(0x01411C2700, 19, "CECOrnamentMan");
	SetCnet(0x01411C9AC8, 5, "CECOrnament");
	SetCnet(0x014111C618, 2, "CECOnlineAwardMessageBoxHandler");
	SetCnet(0x01411C9700, 5, "CECOfflineShopSelfSettingLogMediator");
	SetCnet(0x0141132890, 4, "CECObserver<CECShoppingController>");
	SetCnet(0x01410D87B8, 4, "CECObserver<CECShoppingCart>");
	SetCnet(0x0141172B68, 4, "CECObserver<CECShopBase>");
	SetCnet(0x0141124798, 4, "CECObserver<CECSceneServiceNPC>");
	SetCnet(0x0141112AE0, 4, "CECObserver<CECPlayerLevelRankRealmChangeCheck>");
	SetCnet(0x014110B800, 4, "CECObserver<CECLoginQueue>");
	SetCnet(0x014113B498, 4, "CECObserver<CECHostSkillModel>");
	SetCnet(0x01410D8790, 4, "CECObserver<CECFashionShop>");
	SetCnet(0x01410D50F0, 4, "CECObserver<CECFactionPVPModel>");
	SetCnet(0x01411C2168, 4, "CECObserver<CECFactionMan>");
	SetCnet(0x01410BDCA0, 4, "CECObserver<CECComboSkillState>");
	SetCnet(0x0141165FE8, 1, "CECObservableChange");
	SetCnet(0x01411E0CA0, 1, "CECObservable<CECShoppingController>");
	SetCnet(0x01411E0880, 1, "CECObservable<CECShoppingCart>");
	SetCnet(0x01411E0328, 1, "CECObservable<CECShopBase>");
	SetCnet(0x01411DB6D0, 1, "CECObservable<CECSceneServiceNPC>");
	SetCnet(0x01411D2060, 1, "CECObservable<CECPlayerLevelRankRealmChangeCheck>");
	SetCnet(0x01411BCB58, 1, "CECObservable<CECLoginQueue>");
	SetCnet(0x01411AE858, 1, "CECObservable<CECHostSkillModel>");
	SetCnet(0x0141170FE8, 1, "CECObservable<CECFactionPVPModel>");
	SetCnet(0x0141170B70, 1, "CECObservable<CECFactionMan>");
	SetCnet(0x0141166050, 1, "CECObservable<CECComboSkillState>");
	SetCnet(0x01411AE918, 7, "CECObjectWork");
	SetCnet(0x01411C8DF0, 20, "CECObject");
	SetCnet(0x01411C6910, 5, "CECNewlotteryMediator");
	SetCnet(0x01411C6B00, 5, "CECNewPopMsgMediator");
	SetCnet(0x01411C8D80, 3, "CECNPCVoiceTimer");
	SetCnet(0x01411C88C8, 5, "CECNPCTalkMediator");
	SetCnet(0x01411C84C0, 95, "CECNPCServer");
	SetCnet(0x01411C8150, 55, "CECNPCModelStatuePlayerPolicy");
	SetCnet(0x01411C7C30, 53, "CECNPCModelPolicy");
	SetCnet(0x01411C7DE0, 55, "CECNPCModelDefaultPolicy");
	SetCnet(0x01411C7FA0, 53, "CECNPCModelClonePlayerPolicy");
	SetCnet(0x01411C21B0, 17, "CECNPCMan");
	SetCnet(0x01411C2240, 4, "CECNPCMan");
	SetCnet(0x01411AD7B0, 5, "CECNPCInventory");
	SetCnet(0x01411C7670, 95, "CECNPCFollowServer");
	SetCnet(0x01411D1710, 83, "CECNPCClonedMaster");
	SetCnet(0x01411C7330, 2, "CECNPCBind::SkeletonHookGetterBySkeleton");
	SetCnet(0x01411C7620, 2, "CECNPCBind::SkeletonHookGetterByPlayer");
	SetCnet(0x01411C7318, 2, "CECNPCBind::SkeletionHookGetter");
	SetCnet(0x01411C7018, 95, "CECNPC");
	SetCnet(0x01411C6748, 5, "CECMysteriousShopMediator");
	SetCnet(0x01411C6610, 5, "CECMonsterFlagMediator");
	SetCnet(0x01411C6230, 95, "CECMonster");
	SetCnet(0x014116E8E0, 16, "CECModelWrapper");
	SetCnet(0x01411C6138, 20, "CECModelSmoothRotate");
	SetCnet(0x0141248E68, 16, "CECModel");
	SetCnet(0x014111E250, 5, "CECMinePassword");
	SetCnet(0x01411C1D90, 1, "CECMessageMan");
	SetCnet(0x01410A5768, 2, "CECMessageBoxHandleBase");
	SetCnet(0x01411D3D78, 8, "CECMeridiansSimulator");
	SetCnet(0x01411C4D08, 5, "CECMentorStudentMediator");
	SetCnet(0x01411B0B90, 5, "CECMediatorInstanceMenual");
	SetCnet(0x01411C1BE8, 17, "CECMatterMan");
	SetCnet(0x01411C37D0, 25, "CECMatter");
	SetCnet(0x01411C3610, 5, "CECMaterialRefineMediator");
	SetCnet(0x014115AD08, 8, "CECMatchBase");
	SetCnet(0x01411C5D48, 5, "CECMNFactionWorldMapMediator");
	SetCnet(0x01411C5CE0, 5, "CECMNFactionWarApplyResultMediator");
	SetCnet(0x01411C5C60, 5, "CECMNFactionWarApplyMediator");
	SetCnet(0x01411C5BB8, 5, "CECMNFactionTransmitMediator");
	SetCnet(0x01411C5B88, 5, "CECMNFactionResourcePointDegreeMediator");
	SetCnet(0x01411C5B08, 5, "CECMNFactionRankMediator");
	SetCnet(0x01411C5848, 5, "CECMNFactionHelpMediator");
	SetCnet(0x01411C5588, 5, "CECMNFactionBattleResultMediator");
	SetCnet(0x01411C5530, 5, "CECMNFactionBattleFieldMapMediator");
	SetCnet(0x01411C53C0, 5, "CECMNFactionBattleFieldInfoMediator");
	SetCnet(0x01411C3A18, 1, "CECMCDownload");
	SetCnet(0x01411BFE40, 5, "CECLotteryMainMediator");
	SetCnet(0x01411BFA00, 5, "CECLotteryBatchSettingMediator");
	SetCnet(0x01411BDF68, 38, "CECLoginUIMan");
	SetCnet(0x01411BCB48, 1, "CECLoginQueueChange");
	SetCnet(0x01411BCB68, 1, "CECLoginQueue");
	SetCnet(0x01411BC648, 80, "CECLoginPlayer");
	SetCnet(0x01411BC3C8, 5, "CECLoanMediator");
	SetCnet(0x0141109D80, 15, "CECLoanEquipUpInheritStoneHole");
	SetCnet(0x0141109E00, 15, "CECLoanEquipUpInheritHole");
	SetCnet(0x01411BBB30, 27, "CECLoadingUIMan");
	SetCnet(0x01411BBC10, 1, "CECLoadProgress");
	SetCnet(0x01411BB820, 5, "CECLibProduceMediator");
	SetCnet(0x01410CE768, 2, "CECLazyButtonClickObserver");
	SetCnet(0x014115B078, 9, "CECLandingActionFilter");
	SetCnet(0x01411B9110, 48, "CECIvtrWing");
	SetCnet(0x01411B4868, 24, "CECIvtrWeddingInviteCard");
	SetCnet(0x01411B47A0, 24, "CECIvtrWeddingBookCard");
	SetCnet(0x01411BB440, 48, "CECIvtrWeapon");
	SetCnet(0x01411B5E48, 24, "CECIvtrUseForSelfItem");
	SetCnet(0x01411B9908, 24, "CECIvtrUnknown");
	SetCnet(0x01411B4D18, 24, "CECIvtrUniversalToken");
	SetCnet(0x01411BA720, 24, "CECIvtrUnionScroll");
	SetCnet(0x01411B4548, 24, "CECIvtrTransmitScroll");
	SetCnet(0x01411BA590, 24, "CECIvtrTownScroll");
	SetCnet(0x01411B3FD0, 24, "CECIvtrTossMat");
	SetCnet(0x01411BB2D8, 24, "CECIvtrTaskNmMatter");
	SetCnet(0x01411BB148, 24, "CECIvtrTaskItem");
	SetCnet(0x01411BB210, 24, "CECIvtrTaskDice");
	SetCnet(0x01411B4610, 24, "CECIvtrTargetItem");
	SetCnet(0x01411BAA40, 24, "CECIvtrTankCallin");
	SetCnet(0x01411BAE00, 24, "CECIvtrStone");
	SetCnet(0x01411B79F8, 48, "CECIvtrSpeaker");
	SetCnet(0x01411B5D80, 24, "CECIvtrSlideSkillItem");
	SetCnet(0x01411BA4C8, 24, "CECIvtrSkillTome");
	SetCnet(0x01411B4228, 24, "CECIvtrSkillMat");
	SetCnet(0x01411BAB08, 24, "CECIvtrShopToken");
	SetCnet(0x01411B4930, 24, "CECIvtrShapener");
	SetCnet(0x01411BA658, 24, "CECIvtrRevScroll");
	SetCnet(0x01411BAEC8, 24, "CECIvtrRefineTicket");
	SetCnet(0x01411B9C00, 24, "CECIvtrRecipe");
	SetCnet(0x01411BA020, 24, "CECIvtrPetFood");
	SetCnet(0x01411BA0E8, 24, "CECIvtrPetFaceTicket");
	SetCnet(0x01411B9F58, 24, "CECIvtrPetEgg");
	SetCnet(0x01411B20F8, 48, "CECIvtrNewArmor");
	SetCnet(0x01411B4B88, 24, "CECIvtrMonsterSpirit");
	SetCnet(0x01411B9D18, 24, "CECIvtrMoneyConvertible");
	SetCnet(0x01411B3E40, 24, "CECIvtrMedicine");
	SetCnet(0x01411B6618, 24, "CECIvtrMaterialRefineTicket");
	SetCnet(0x01411B6550, 24, "CECIvtrMaterialRefine");
	SetCnet(0x01411B9B38, 24, "CECIvtrMaterial");
	SetCnet(0x01411B46D8, 24, "CECIvtrLookInfoItem");
	SetCnet(0x01411B6488, 24, "CECIvtrKidDebrisGenerator");
	SetCnet(0x01411B5290, 24, "CECIvtrItemWishTributeItem");
	SetCnet(0x01411B5358, 24, "CECIvtrItemRedPacketPaper");
	SetCnet(0x01411B5038, 24, "CECIvtrItemPackageByProfession");
	SetCnet(0x01411B5420, 24, "CECIvtrItemHomeUnlockPaper");
	SetCnet(0x01411B51C8, 24, "CECIvtrItemHomeFormulasItem");
	SetCnet(0x01411B54E8, 24, "CECIvtrItemGuardianBeastEgg");
	SetCnet(0x01411B5100, 24, "CECIvtrItemFixPosTransmitCharge");
	SetCnet(0x01411B1EA8, 24, "CECIvtrItem");
	SetCnet(0x01411B42F0, 24, "CECIvtrIncSkillAbility");
	SetCnet(0x01411B63C0, 24, "CECIvtrIllustratedWingEggItem");
	SetCnet(0x01411B62F8, 24, "CECIvtrIllustratedPetEggItem");
	SetCnet(0x01411B6230, 24, "CECIvtrIllustratedFashionItem");
	SetCnet(0x01411B96D8, 24, "CECIvtrGoblinExpPill");
	SetCnet(0x01411B9610, 24, "CECIvtrGoblinEquip");
	SetCnet(0x01411B9488, 48, "CECIvtrGoblin");
	SetCnet(0x01411B4C50, 24, "CECIvtrGeneralCardDice");
	SetCnet(0x01411B8328, 50, "CECIvtrGeneralCard");
	SetCnet(0x01411BA978, 24, "CECIvtrGMGenerator");
	SetCnet(0x01411B8018, 48, "CECIvtrForceToken");
	SetCnet(0x01411B8F88, 48, "CECIvtrFlySword");
	SetCnet(0x01411B4160, 24, "CECIvtrFirework2");
	SetCnet(0x01411B4098, 24, "CECIvtrFirework");
	SetCnet(0x01411B8C88, 48, "CECIvtrFashionNew");
	SetCnet(0x01411B8A40, 48, "CECIvtrFashion");
	SetCnet(0x01411B49F8, 24, "CECIvtrFactionMaterial");
	SetCnet(0x01411BA7E8, 24, "CECIvtrFaceTicket");
	SetCnet(0x01411BA8B0, 24, "CECIvtrFacePill");
	SetCnet(0x01410CC928, 48, "CECIvtrEquipAddonDesc");
	SetCnet(0x01411B6DF0, 48, "CECIvtrEquip");
	SetCnet(0x01411B3F08, 24, "CECIvtrElement");
	SetCnet(0x01411B81A0, 48, "CECIvtrDynSkillEquip");
	SetCnet(0x01411B4480, 24, "CECIvtrDyeTicket");
	SetCnet(0x01411B43B8, 24, "CECIvtrDoubleExp");
	SetCnet(0x01411B3CB8, 48, "CECIvtrDmgRune");
	SetCnet(0x01411B6B08, 24, "CECIvtrDestroyingEssence");
	SetCnet(0x01411B68D0, 48, "CECIvtrDecoration");
	SetCnet(0x01411B4AC0, 24, "CECIvtrCongregate");
	SetCnet(0x01411B7E90, 48, "CECIvtrCertificate");
	SetCnet(0x01411B8648, 48, "CECIvtrCampToken");
	SetCnet(0x01411BAF90, 24, "CECIvtrBibleRefineTicket");
	SetCnet(0x01411B7868, 49, "CECIvtrBible");
	SetCnet(0x01411B7D08, 48, "CECIvtrAutoMP");
	SetCnet(0x01411B7B80, 48, "CECIvtrAutoHP");
	SetCnet(0x01411B4DE0, 24, "CECIvtrAstrolabeRandomAddon");
	SetCnet(0x01411B4EA8, 24, "CECIvtrAstrolabeIncInnerPointValue");
	SetCnet(0x01411B4F70, 24, "CECIvtrAstrolabeIncExp");
	SetCnet(0x01411B84C0, 48, "CECIvtrAstrolabe");
	SetCnet(0x01411B23D8, 48, "CECIvtrArrow");
	SetCnet(0x01411B3BF0, 24, "CECIvtrArmorRune");
	SetCnet(0x01411B1F70, 48, "CECIvtrArmor");
	SetCnet(0x01411B5998, 24, "CECItemUsedForArea");
	SetCnet(0x01410B0CD8, 3, "CECItemPropertyZoomer");
	SetCnet(0x01411B1708, 3, "CECItemPropertyLinearZoomer");
	SetCnet(0x01410B0CF8, 3, "CECItemPropertyDefaultZoomer");
	SetCnet(0x01411B1748, 3, "CECItemPropertyAstrolabeZoomer2");
	SetCnet(0x01411B1728, 3, "CECItemPropertyAstrolabeZoomer");
	SetCnet(0x01411B19B0, 6, "CECItemExtProperty::PropertyValueProcessor");
	SetCnet(0x01411B19E8, 6, "CECItemExtProperty::PropertyValueNullProcessor");
	SetCnet(0x01411B1A58, 6, "CECItemExtProperty::PropertyValueLocalFloatRangeProcessor");
	SetCnet(0x01411B1AC8, 6, "CECItemExtProperty::PropertyValueLocalFloatRangeMinusP0Processor");
	SetCnet(0x01411B1A20, 6, "CECItemExtProperty::PropertyValueHalveProcessor");
	SetCnet(0x01411B1768, 3, "CECItemExtProperty::PropertyValueFormatPrinter");
	SetCnet(0x01411B1A90, 6, "CECItemExtProperty::PropertyValueAllFloatRangeMinusP0Processor");
	SetCnet(0x01411B1960, 5, "CECItemExtProperty::LocalRangedMagicDefenceExtraFormat");
	SetCnet(0x01411B18D0, 5, "CECItemExtProperty::LocalRangedIntPercentageFormat");
	SetCnet(0x01411B1880, 5, "CECItemExtProperty::LocalRangedIntFormat");
	SetCnet(0x01411B1930, 5, "CECItemExtProperty::LocalRangedFormatFromItemDesc");
	SetCnet(0x01411B17B0, 3, "CECItemExtProperty::IntPercentageFormat");
	SetCnet(0x01411B1810, 3, "CECItemExtProperty::IntPercentageCascadeFormat");
	SetCnet(0x01411B1788, 3, "CECItemExtProperty::IntFormat");
	SetCnet(0x01411B17E0, 3, "CECItemExtProperty::IntCascadeFormat");
	SetCnet(0x01411B1860, 3, "CECItemExtProperty::FormatFromItemDesc");
	SetCnet(0x01411F5200, 3, "CECItemChatRepeatTimer");
	SetCnet(0x01411B15E8, 5, "CECItemBubbleMediator");
	SetCnet(0x01410C8110, 2, "CECInvokeNumberHandleBase");
	SetCnet(0x01411B1478, 1, "CECInventoryPutParam");
	SetCnet(0x01411B1448, 5, "CECInventory");
	SetCnet(0x01411B0DD0, 5, "CECInstanceTargetMeditor");
	SetCnet(0x014119F348, 2, "CECInputFilter");
	SetCnet(0x01411B01D0, 1, "CECInputCtrl");
	SetCnet(0x014115F228, 2, "CECIncPointValueMaterialCondition");
	SetCnet(0x01411AFCD8, 2, "CECImageRes");
	SetCnet(0x01411AFA38, 1, "CECImageDrawing");
	SetCnet(0x01411AF750, 80, "CECIllustrationPlayer");
	SetCnet(0x01411AF690, 5, "CECIdentifyItemMediator");
	SetCnet(0x014116A638, 2, "CECIconDecal");
	SetCnet(0x0141102F38, 2, "CECHuaZhaoTaskTrigger");
	SetCnet(0x01411AE868, 1, "CECHostSkillModel");
	SetCnet(0x0141140BB8, 2, "CECHostPlayer::PackSorter");
	SetCnet(0x01411AD510, 81, "CECHostPlayer");
	SetCnet(0x01411D1470, 83, "CECHostNavigatePlayer");
	SetCnet(0x01411AB870, 1, "CECHostMove");
	SetCnet(0x01411AB588, 2, "CECHostInputFilter");
	SetCnet(0x01411AB300, 6, "CECHostGoblin");
	SetCnet(0x01411B11E8, 2, "CECHostBrushTest");
	SetCnet(0x01411AB010, 1, "CECHomeWorld");
	SetCnet(0x01411AA3A0, 5, "CECHomeWorkShopMediator");
	SetCnet(0x01411AA218, 1, "CECHomeWorkShop");
	SetCnet(0x01411A98D8, 2, "CECHomeTerrainOpUp");
	SetCnet(0x01411A9938, 2, "CECHomeTerrainOpRing");
	SetCnet(0x01411A9950, 2, "CECHomeTerrainOpHelicalLine");
	SetCnet(0x01411A9920, 2, "CECHomeTerrainOpFlat");
	SetCnet(0x01411A98F0, 2, "CECHomeTerrainOpDown");
	SetCnet(0x01411A9908, 2, "CECHomeTerrainOpClear");
	SetCnet(0x01411A94B8, 5, "CECHomeTaskMediator");
	SetCnet(0x01411A9250, 5, "CECHomeSkinMediator");
	SetCnet(0x01411A8DC8, 5, "CECHomeResourceAndFarmMediator");
	SetCnet(0x01411A8C30, 5, "CECHomeRedPackageFrMediator");
	SetCnet(0x01411A8AB8, 5, "CECHomeOpHintMediator");
	SetCnet(0x01411A8A60, 5, "CECHomeObjOpMediator");
	SetCnet(0x01411C1910, 17, "CECHomeObjMan");
	SetCnet(0x01411A8390, 16, "CECHomeObjHook");
	SetCnet(0x01411A8080, 23, "CECHomeObjControllerStateTexEdit");
	SetCnet(0x01411A7FC0, 23, "CECHomeObjControllerStateTerrainEdit");
	SetCnet(0x01411A7F00, 23, "CECHomeObjControllerStateSelectedObjRotate");
	SetCnet(0x01411A7E40, 23, "CECHomeObjControllerStateSelectedObjMove");
	SetCnet(0x01411A7CC0, 23, "CECHomeObjControllerStateObjSelected");
	SetCnet(0x01411A7C00, 23, "CECHomeObjControllerStateNormal");
	SetCnet(0x01411A7D80, 23, "CECHomeObjControllerStateNewObjMove");
	SetCnet(0x01411A87E0, 23, "CECHomeObjControllerStateMultiSelect");
	SetCnet(0x01411A8960, 23, "CECHomeObjControllerStateMultiRotate");
	SetCnet(0x01411A88A0, 23, "CECHomeObjControllerStateMultiMove");
	SetCnet(0x01411A8140, 23, "CECHomeObjControllerStateGrassEdit");
	SetCnet(0x01411A7B40, 23, "CECHomeObjControllerState");
	SetCnet(0x01411A7508, 23, "CECHomeObj");
	SetCnet(0x01411A6FE8, 5, "CECHomeMirrorUploadMediator");
	SetCnet(0x01411A6FB8, 5, "CECHomeMirrorRanklistMediator");
	SetCnet(0x01411A69B0, 5, "CECHomeMainMediator");
	SetCnet(0x01411A6930, 5, "CECHomeKickoutPlayerMediator");
	SetCnet(0x01411A6900, 5, "CECHomeItemLinkMediator");
	SetCnet(0x01411A6888, 2, "CECHomeInputFilter");
	SetCnet(0x01411A5FD8, 5, "CECHomeHelpMediator");
	SetCnet(0x01411A5A70, 3, "CECHomeCommandTextureChanged");
	SetCnet(0x01411A5A50, 3, "CECHomeCommandTerrainChanged");
	SetCnet(0x01411A59F0, 3, "CECHomeCommandRotate");
	SetCnet(0x01411A5A10, 3, "CECHomeCommandNewObj");
	SetCnet(0x01411A5AF0, 3, "CECHomeCommandMultiSelectRotate");
	SetCnet(0x01411A5AB0, 3, "CECHomeCommandMultiSelectMove");
	SetCnet(0x01411A5AD0, 3, "CECHomeCommandMultiSelectDelete");
	SetCnet(0x01411A59B0, 3, "CECHomeCommandMoveFromPos");
	SetCnet(0x01411A59D0, 3, "CECHomeCommandMoveFromHook");
	SetCnet(0x01411A5A90, 3, "CECHomeCommandGrassChanged");
	SetCnet(0x01411A5A30, 3, "CECHomeCommandDelObj");
	SetCnet(0x01411A5990, 3, "CECHomeCommand");
	SetCnet(0x01411A52F8, 5, "CECHomeBuildingNameHintMediator");
	SetCnet(0x01411A52A0, 5, "CECHomeBagMediator");
	SetCnet(0x01411A4538, 5, "CECHomeAppreciateMediator");
	SetCnet(0x01411A4528, 1, "CECHistoryVariableProgressInterfaceData");
	SetCnet(0x01411A3E18, 5, "CECHighPolyCustomizeMediator");
	SetCnet(0x01411A3708, 5, "CECHeroBookMediator");
	SetCnet(0x014114C070, 2, "CECHandler<GNET::SSOGetTicket_Re>");
	SetCnet(0x01411AF608, 13, "CECHPWorkUse");
	SetCnet(0x01411AD7E0, 2, "CECHPWorkTraceSpellMatcher");
	SetCnet(0x01411AF570, 9, "CECHPWorkTrace");
	SetCnet(0x01411AF2A0, 9, "CECHPWorkStand");
	SetCnet(0x01411ABFB0, 2, "CECHPWorkSpellMatcher");
	SetCnet(0x01411AF1D8, 9, "CECHPWorkSpell");
	SetCnet(0x01411AF228, 9, "CECHPWorkSkillStateAction");
	SetCnet(0x01411AF020, 9, "CECHPWorkSit");
	SetCnet(0x01411AEA58, 9, "CECHPWorkRevive");
	SetCnet(0x01411AE9E8, 2, "CECHPWorkPostTickRunWorkCommand");
	SetCnet(0x01411AE9D0, 2, "CECHPWorkPostTickCommand");
	SetCnet(0x01411AF070, 9, "CECHPWorkPick");
	SetCnet(0x01411AEBF0, 9, "CECHPWorkPassiveMove");
	SetCnet(0x01411AEC40, 9, "CECHPWorkParabolaMove");
	SetCnet(0x01411AEE00, 9, "CECHPWorkNavigate");
	SetCnet(0x01411AEF70, 9, "CECHPWorkMove");
	SetCnet(0x01411AEEB0, 9, "CECHPWorkMelee");
	SetCnet(0x01411ABF98, 2, "CECHPWorkMatcher");
	SetCnet(0x01411AE9C0, 1, "CECHPWorkMan");
	SetCnet(0x01411AE9A8, 2, "CECHPWorkGeneralMatcher");
	SetCnet(0x01411AECB8, 9, "CECHPWorkFollow");
	SetCnet(0x01411AEB50, 9, "CECHPWorkFly");
	SetCnet(0x01411AEAA8, 9, "CECHPWorkFall");
	SetCnet(0x01411AEBA0, 9, "CECHPWorkFMove");
	SetCnet(0x01411AEA08, 9, "CECHPWorkDead");
	SetCnet(0x01411AF160, 9, "CECHPWorkCongregate");
	SetCnet(0x01411AF0C0, 9, "CECHPWorkConcentrate");
	SetCnet(0x01411AF110, 9, "CECHPWorkBeBound");
	SetCnet(0x01411AE958, 9, "CECHPWork");
	SetCnet(0x01411A32C8, 5, "CECGuildRecordMediator");
	SetCnet(0x01411A3238, 5, "CECGuildBattleMediator");
	SetCnet(0x01411A1218, 5, "CECGuardianBeastMainMediator");
	SetCnet(0x01411A0330, 5, "CECGrowthTargetMediator");
	SetCnet(0x014119F7B8, 4, "CECGrassArea");
	SetCnet(0x014119F698, 6, "CECGoblin");
	SetCnet(0x014119F2D8, 5, "CECGfxStarsMediator");
	SetCnet(0x01411DF6C8, 2, "CECGeneralComputeServantMoveParamFunction");
	SetCnet(0x01411728D0, 2, "CECGeneralComputeMoveParamFunction");
	SetCnet(0x0141162408, 2, "CECGeneralComputeHomeMoveParamFunction");
	SetCnet(0x01411D3E50, 8, "CECGeneralCardSimulator");
	SetCnet(0x014119EEC0, 5, "CECGatherMineMediator");
	SetCnet(0x01411CA018, 1, "CECGameUIMan::AUI_EditboxItemMaskFilter");
	SetCnet(0x0141177AC8, 38, "CECGameUIMan");
	SetCnet(0x0141177C00, 2, "CECGameUIMan");
	SetCnet(0x01411F36F8, 1, "CECGameSession");
	SetCnet(0x0141174CF0, 1, "CECGameRun");
	SetCnet(0x0141173880, 1, "CECGame");
	SetCnet(0x014119F618, 5, "CECGMPrepareRoomMediator");
	SetCnet(0x014119F248, 3, "CECGFXCaster");
	SetCnet(0x0141173308, 1, "CECFriendMan");
	SetCnet(0x0141173158, 5, "CECFreshManQuestionMediator");
	SetCnet(0x014115B3D0, 6, "CECFlyToRideContext");
	SetCnet(0x014115B028, 9, "CECFlyActionFilter");
	SetCnet(0x0141172E40, 5, "CECFixPosTransmitMediator");
	SetCnet(0x01411B58D0, 24, "CECFixMonsterItem");
	SetCnet(0x014115AFC0, 2, "CECFitlerBase");
	SetCnet(0x0141172C90, 5, "CECFirstRechargeGiftMediator");
	SetCnet(0x0141172C48, 5, "CECFireworks2Mediator");
	SetCnet(0x01411B5678, 24, "CECFastProduceItem");
	SetCnet(0x0141172B48, 1, "CECFashionShopChange");
	SetCnet(0x01410D8980, 3, "CECFashionShop::CECSelectedFashionLooper");
	SetCnet(0x0141172B90, 1, "CECFashionShop");
	SetCnet(0x0141172BA0, 4, "CECFashionShop");
	SetCnet(0x01411727F8, 5, "CECFakeMonster");
	SetCnet(0x0141170BA0, 5, "CECFactoinInventory");
	SetCnet(0x01411725E0, 5, "CECFactionTeamMediator");
	SetCnet(0x0141171520, 5, "CECFactionShareSettingMediator");
	SetCnet(0x0141170898, 5, "CECFactionRecuitMediator");
	SetCnet(0x0141170D00, 5, "CECFactionPetMediator");
	SetCnet(0x0141170FD8, 1, "CECFactionPVPModelScoreChange");
	SetCnet(0x0141170FC8, 1, "CECFactionPVPModelChange");
	SetCnet(0x0141170FF8, 1, "CECFactionPVPModel");
	SetCnet(0x0141170B60, 1, "CECFactionManFactionChange");
	SetCnet(0x0141170B50, 1, "CECFactionManChange");
	SetCnet(0x0141170B90, 1, "CECFactionMan");
	SetCnet(0x0141170318, 66, "CECFaceHighPoly");
	SetCnet(0x014116A668, 2, "CECFaceDecal");
	SetCnet(0x014116FC38, 66, "CECFaceBase");
	SetCnet(0x014116E968, 66, "CECFace");
	SetCnet(0x014116E470, 5, "CECEventHintMediator");
	SetCnet(0x01411D3EE0, 8, "CECEquipmentSimulator");
	SetCnet(0x01410D0C98, 15, "CECEquipUpInheritStoneHole");
	SetCnet(0x01410D0C18, 15, "CECEquipUpInheritStone");
	SetCnet(0x01410D0B18, 15, "CECEquipUpInheritRefine");
	SetCnet(0x01410D0A98, 15, "CECEquipUpInheritProperty");
	SetCnet(0x01410D0B98, 15, "CECEquipUpInheritHole");
	SetCnet(0x01410D0D18, 15, "CECEquipUpInheritEngrave");
	SetCnet(0x01410D0D98, 15, "CECEquipUpInheritAddons");
	SetCnet(0x014116E0C0, 5, "CECEquipSoulAndSpriteMediator");
	SetCnet(0x014116E060, 5, "CECEquipSlotNewMediator");
	SetCnet(0x014116DAF8, 1, "CECEnemyMan");
	SetCnet(0x014116DB78, 5, "CECEnemyListMediator");
	SetCnet(0x014116D280, 82, "CECElsePlayer");
	SetCnet(0x014116CDE8, 5, "CECEasyProduceMediator");
	SetCnet(0x01411B55B0, 24, "CECEasyProduceItem");
	SetCnet(0x014116DE18, 5, "CECEPWorkUseItem");
	SetCnet(0x014116DCF8, 5, "CECEPWorkStand");
	SetCnet(0x014116DD88, 5, "CECEPWorkSpell");
	SetCnet(0x014116DF38, 5, "CECEPWorkSkillStateAct");
	SetCnet(0x014116DDB8, 5, "CECEPWorkPickUp");
	SetCnet(0x014116DEA8, 5, "CECEPWorkPassiveMove");
	SetCnet(0x014116DED8, 5, "CECEPWorkParabolaMove");
	SetCnet(0x014116DD28, 5, "CECEPWorkMove");
	SetCnet(0x014116DD58, 5, "CECEPWorkMelee");
	SetCnet(0x014116DCC8, 2, "CECEPWorkMatcher");
	SetCnet(0x014116DE48, 5, "CECEPWorkIdle");
	SetCnet(0x014116DCE0, 2, "CECEPWorkIDMatcher");
	SetCnet(0x014116DE78, 5, "CECEPWorkFlashMove");
	SetCnet(0x014116DDE8, 5, "CECEPWorkDead");
	SetCnet(0x014116DF08, 5, "CECEPWorkCongregate");
	SetCnet(0x014116DC98, 5, "CECEPWork");
	SetCnet(0x014116CCC8, 5, "CECDynSkillMediator");
	SetCnet(0x014116CC68, 5, "CECDriftBottleMediator");
	SetCnet(0x014116C518, 7, "CECDomainInfo");
	SetCnet(0x014116C6F8, 7, "CECDomainGuildInfo");
	SetCnet(0x014116C558, 8, "CECDomainCountryInfo");
	SetCnet(0x014116C5A0, 1, "CECDomainCountry");
	SetCnet(0x014116C3A0, 1, "CECDomain");
	SetCnet(0x014116C348, 5, "CECDlgNewserverMainMediator");
	SetCnet(0x014116C2C8, 5, "CECDlgNewserverEvent05Mediator");
	SetCnet(0x014116C270, 5, "CECDlgNewserverEvent04Mediator");
	SetCnet(0x014116C240, 5, "CECDlgNewserverEvent03Mediator");
	SetCnet(0x014116C210, 5, "CECDlgNewserverEvent02viewMediator");
	SetCnet(0x014116C1E0, 5, "CECDlgNewserverEvent02Mediator");
	SetCnet(0x014116C188, 5, "CECDlgNewserverEvent01Mediator");
	SetCnet(0x014116C128, 5, "CECDlgGuildpowerhelpsub08Mediator");
	SetCnet(0x014116C0F8, 5, "CECDlgGuildpowerhelpsub07Mediator");
	SetCnet(0x014116C0C8, 5, "CECDlgGuildpowerhelpsub06Mediator");
	SetCnet(0x014116C098, 5, "CECDlgGuildpowerhelpsub05Mediator");
	SetCnet(0x014116C068, 5, "CECDlgGuildpowerhelpsub0505Mediator");
	SetCnet(0x014116C038, 5, "CECDlgGuildpowerhelpsub0504Mediator");
	SetCnet(0x014116C008, 5, "CECDlgGuildpowerhelpsub0503Mediator");
	SetCnet(0x014116BFD8, 5, "CECDlgGuildpowerhelpsub0502Mediator");
	SetCnet(0x014116BFA8, 5, "CECDlgGuildpowerhelpsub0501Mediator");
	SetCnet(0x014116BF78, 5, "CECDlgGuildpowerhelpsub04Mediator");
	SetCnet(0x014116BF48, 5, "CECDlgGuildpowerhelpsub03Mediator");
	SetCnet(0x014116BF18, 5, "CECDlgGuildpowerhelpsub02Mediator");
	SetCnet(0x014116BEE8, 5, "CECDlgGuildpowerhelpsub0204Mediator");
	SetCnet(0x014116BEB8, 5, "CECDlgGuildpowerhelpsub0203Mediator");
	SetCnet(0x014116BE88, 5, "CECDlgGuildpowerhelpsub0202Mediator");
	SetCnet(0x014116BE58, 5, "CECDlgGuildpowerhelpsub0201Mediator");
	SetCnet(0x014116BE28, 5, "CECDlgGuildpowerhelpsub01Mediator");
	SetCnet(0x014116BDF8, 5, "CECDlgGuildpowerhelpMainMediator");
	SetCnet(0x014116C158, 5, "CECDlgGuildpowerMainMediator");
	SetCnet(0x014116BDC8, 5, "CECDlgGuildpower6Mediator");
	SetCnet(0x014116BD98, 5, "CECDlgGuildpower5Mediator");
	SetCnet(0x014116BD68, 5, "CECDlgGuildpower4Mediator");
	SetCnet(0x014116BD38, 5, "CECDlgGuildpower3Mediator");
	SetCnet(0x014116BD08, 5, "CECDlgGuildpower2Mediator");
	SetCnet(0x014116BCD8, 5, "CECDlgGuildpower1Mediator");
	SetCnet(0x014116AF80, 5, "CECDlgAnniversary2020TaskEventMediator");
	SetCnet(0x014116AF50, 5, "CECDlgAnniversary2020SigninEventMediator");
	SetCnet(0x014116AF20, 5, "CECDlgAnniversary2020RewardEventMediator");
	SetCnet(0x014116AEF0, 5, "CECDlgAnniversary2020ProgGfxMediator");
	SetCnet(0x014116AEC0, 5, "CECDlgAnniversary2020Mediator");
	SetCnet(0x014116AE68, 5, "CECDlgAnimationTalkMediator");
	SetCnet(0x014116AE38, 5, "CECDlgAnimationEscMediator");
	SetCnet(0x014116AD08, 5, "CECDivinationMediator");
	SetCnet(0x014116A9D8, 5, "CECDialogShowDependencyMediatorBase");
	SetCnet(0x014116AAC8, 5, "CECDialogPosAlignMediator");
	SetCnet(0x014116AA68, 5, "CECDialogInFrontShowMediator");
	SetCnet(0x014116AA08, 5, "CECDialogExclusiveShowMediator");
	SetCnet(0x014116AA38, 5, "CECDialogDependentHideMediator");
	SetCnet(0x014116AA98, 5, "CECDialogCenterAlignMediator");
	SetCnet(0x01411C1458, 17, "CECDecalMan");
	SetCnet(0x014116A610, 2, "CECDecal");
	SetCnet(0x014116A5E0, 5, "CECDebugCmdMediator");
	SetCnet(0x014116A0C0, 5, "CECDealInventory");
	SetCnet(0x014116A060, 6, "CECDartCar");
	SetCnet(0x0141133520, 5, "CECCustomizePolicy");
	SetCnet(0x01411696C0, 19, "CECCustomizeMgrBase");
	SetCnet(0x0141169760, 19, "CECCustomizeMgr");
	SetCnet(0x0141169FD8, 5, "CECCustomizeLoginCharacterPolicy");
	SetCnet(0x014116A008, 5, "CECCustomizeHostPolicy");
	SetCnet(0x0141169800, 19, "CECCustomizeHighPolyMgr");
	SetCnet(0x0141169FA8, 5, "CECCustomizeCreateCharacterPolicy");
	SetCnet(0x0141168BC8, 1, "CECCustomizeBound");
	SetCnet(0x0141168A00, 5, "CECCrossServerCryMsgMediator");
	SetCnet(0x0141168438, 4, "CECCritterGroup");
	SetCnet(0x0141168268, 5, "CECCoupleMediator");
	SetCnet(0x01410A0850, 8, "CECCoolDownTimer<>");
	SetCnet(0x0141168028, 2, "CECControlLoopAnimationObserverNotifyCmd");
	SetCnet(0x0141168040, 2, "CECControlLoopAnimation::CreatePolicy");
	SetCnet(0x014115B350, 1, "CECContextValidCheckerForRide");
	SetCnet(0x0141167E08, 5, "CECConsoleVariableMediator");
	SetCnet(0x0141166A80, 1, "CECConfigs");
	SetCnet(0x01411DF6B0, 2, "CECComputeServantMoveParamFunction");
	SetCnet(0x01411728B8, 2, "CECComputeMoveParamFunction");
	SetCnet(0x01411623F0, 2, "CECComputeHomeMoveParamFunction");
	SetCnet(0x0141166880, 5, "CECCommerateBookMediator");
	SetCnet(0x0141166060, 1, "CECComboSkillState");
	SetCnet(0x0141166040, 1, "CECComboSkillChange");
	SetCnet(0x0141165AA8, 1, "CECComboSkill");
	SetCnet(0x01411655A8, 5, "CECCollectionMediator");
	SetCnet(0x014110EF08, 3, "CECCloseDlgTimer");
	SetCnet(0x01411D11D0, 83, "CECClonePlayer");
	SetCnet(0x0141165088, 5, "CECChronicleMediator");
	SetCnet(0x01411D3D30, 8, "CECCharacterSimulator");
	SetCnet(0x0141164CA8, 1, "CECChangePill");
	SetCnet(0x0141164BB8, 20, "CECCefBrowser");
	SetCnet(0x0141163B68, 5, "CECCarrierUpMediator");
	SetCnet(0x0141163960, 5, "CECCarrierOpMediator");
	SetCnet(0x01411B5A60, 24, "CECCaptureItem");
	SetCnet(0x014115AFD8, 9, "CECCancelRideActionFilter");
	SetCnet(0x01411634E8, 5, "CECCampTreeMediator");
	SetCnet(0x01411B60A0, 24, "CECCampTokenUpgradeItem");
	SetCnet(0x01411D3F70, 8, "CECCampTokenSimulator");
	SetCnet(0x01411B6168, 24, "CECCampTokenRollbackItem");
	SetCnet(0x01411B5FD8, 24, "CECCampTokenProbAdjustItem");
	SetCnet(0x01411633F8, 5, "CECCampTokenMediator");
	SetCnet(0x0141162F08, 5, "CECCampStatisticMediator");
	SetCnet(0x0141162DD0, 5, "CECCampRankMediator");
	SetCnet(0x0141162D10, 5, "CECCampMediator");
	SetCnet(0x0141162B18, 8, "CECCameraInputNormal");
	SetCnet(0x0141162B60, 1, "CECCamera");
	SetCnet(0x01411649D8, 9, "CECCDS");
	SetCnet(0x01411629A8, 1, "CECC2SCmdCache");
	SetCnet(0x01410CE050, 4, "CECBuyCommandObserver");
	SetCnet(0x01410B3B00, 5, "CECBuyCommand");
	SetCnet(0x01411623E0, 1, "CECBuildingModel");
	SetCnet(0x014116A6A0, 1, "CECBubbleDecalList");
	SetCnet(0x014116A680, 1, "CECBubbleDecal");
	SetCnet(0x0141096638, 15, "CECBrushMan");
	SetCnet(0x0141162230, 5, "CECBossRushMediator");
	SetCnet(0x0141161FC0, 5, "CECBibleRefineMediator");
	SetCnet(0x0141096500, 1, "CECBezierWalker");
	SetCnet(0x01410964C8, 1, "CECBezierSeg");
	SetCnet(0x01410964B8, 1, "CECBezierPoint");
	SetCnet(0x01410964D8, 4, "CECBezier");
	SetCnet(0x0141160E00, 5, "CECBattleRoyaleMapMediator");
	SetCnet(0x0141160798, 38, "CECBaseUIMan");
	SetCnet(0x0141160118, 5, "CECBarrageMediator");
	SetCnet(0x01411AFA48, 1, "CECBarDrawing");
	SetCnet(0x01411E0428, 14, "CECBackShop");
	SetCnet(0x014115FBA8, 1, "CECAutoPolicy");
	SetCnet(0x01411C1158, 17, "CECAttacksMan");
	SetCnet(0x014115F640, 10, "CECAstrolabeSwallowMediatorStateWaitSwallowee");
	SetCnet(0x014115F878, 10, "CECAstrolabeSwallowMediatorStateWaitServer2");
	SetCnet(0x014115F808, 10, "CECAstrolabeSwallowMediatorStateWaitServer");
	SetCnet(0x014115F6B0, 10, "CECAstrolabeSwallowMediatorStateWaitConfirmSwallowee");
	SetCnet(0x014115F798, 10, "CECAstrolabeSwallowMediatorStateWaitConfirm");
	SetCnet(0x014115F728, 10, "CECAstrolabeSwallowMediatorStateWaitChoose");
	SetCnet(0x014115F5D8, 10, "CECAstrolabeSwallowMediatorStateNone");
	SetCnet(0x014115F570, 10, "CECAstrolabeSwallowMediatorState");
	SetCnet(0x014115F8E8, 5, "CECAstrolabeSwallowMediator");
	SetCnet(0x01411D3E98, 8, "CECAstrolabeSimulator");
	SetCnet(0x014115F478, 5, "CECAstrolabeRandomAddOnMediator");
	SetCnet(0x014115F2B8, 28, "CECAstrolabeMediator");
	SetCnet(0x014115F1E0, 5, "CECAstrolabeIncPointValueMediator");
	SetCnet(0x014115DC90, 5, "CECArenaRankMediator");
	SetCnet(0x014115DC60, 5, "CECArenaOtherTeamInfoMediator");
	SetCnet(0x014115D1A0, 5, "CECArenaMatchMediator");
	SetCnet(0x014115C920, 5, "CECArenaFakeTeamMediator");
	SetCnet(0x014115C8C8, 5, "CECArenaCreateTeamMediator");
	SetCnet(0x014115BD18, 5, "CECArenaBattleMediator");
	SetCnet(0x014115BCA0, 1, "CECArenaBattleInfo");
	SetCnet(0x014115BAF8, 3, "CECAnniversaryEventInterfaceConfigData::AnniversaryOpenTimer");
	SetCnet(0x014115B9D8, 5, "CECAdvertisementMediator");
	SetCnet(0x014115B440, 5, "CECActiveMediator");
	SetCnet(0x014115B2D8, 5, "CECActionUseSkillItem");
	SetCnet(0x01411AD808, 8, "CECActionSwitcherBase");
	SetCnet(0x01411AD850, 8, "CECActionSwitcher");
	SetCnet(0x014115B2A8, 5, "CECActionSkill");
	SetCnet(0x014115B278, 5, "CECActionRide");
	SetCnet(0x014115B248, 5, "CECActionLanding");
	SetCnet(0x014115B218, 5, "CECActionFly");
	SetCnet(0x014115B318, 6, "CECActionContext");
	SetCnet(0x014115B1E8, 5, "CECActionCancelRide");
	SetCnet(0x014115B1B8, 5, "CECActionBase");
	SetCnet(0x014115AD98, 5, "CECAcrossServerMatchMediator");
	SetCnet(0x014115AD50, 8, "CECAcrossServerMatch");
	SetCnet(0x0141155D98, 41, "CDlgWorldMapThirdGfx");
	SetCnet(0x0141155C48, 41, "CDlgWorldMapThird");
	SetCnet(0x01411553B8, 41, "CDlgWorldMap");
	SetCnet(0x0141153BD8, 47, "CDlgWikiTaskList");
	SetCnet(0x0141153D58, 6, "CDlgWikiTaskList");
	SetCnet(0x01411539A0, 41, "CDlgWikiTaskDetail");
	SetCnet(0x01411536B8, 5, "CDlgWikiTask::ShowSpecficLinkCommand");
	SetCnet(0x01411536E8, 46, "CDlgWikiTask");
	SetCnet(0x0141153860, 6, "CDlgWikiTask");
	SetCnet(0x0141153068, 5, "CDlgWikiSkill::ShowSpecficLinkCommand");
	SetCnet(0x0141153098, 5, "CDlgWikiSkill::SetNPCNameLinkCommand");
	SetCnet(0x01411530C8, 46, "CDlgWikiSkill");
	SetCnet(0x0141153240, 6, "CDlgWikiSkill");
	SetCnet(0x0141152A18, 5, "CDlgWikiRecipeDetail::ShowSpecficLinkCommand");
	SetCnet(0x0141152A48, 44, "CDlgWikiRecipeDetail");
	SetCnet(0x01411523B8, 5, "CDlgWikiRecipe::ShowSpecficLinkCommand");
	SetCnet(0x0141152420, 6, "CDlgWikiRecipe::ProductSearcher");
	SetCnet(0x01411523E8, 6, "CDlgWikiRecipe::MaterialSearcher");
	SetCnet(0x0141152458, 46, "CDlgWikiRecipe");
	SetCnet(0x01411525D0, 6, "CDlgWikiRecipe");
	SetCnet(0x0141151C68, 47, "CDlgWikiRandomProperty");
	SetCnet(0x0141151DE8, 6, "CDlgWikiRandomProperty");
	SetCnet(0x0141151A30, 41, "CDlgWikiQiHunLingExtProp");
	SetCnet(0x0141151828, 47, "CDlgWikiNPCList");
	SetCnet(0x01411519A8, 6, "CDlgWikiNPCList");
	SetCnet(0x01411515B0, 47, "CDlgWikiMonsterTask");
	SetCnet(0x0141151730, 6, "CDlgWikiMonsterTask");
	SetCnet(0x0141151360, 47, "CDlgWikiMonsterList");
	SetCnet(0x01411514E0, 6, "CDlgWikiMonsterList");
	SetCnet(0x01411510C0, 47, "CDlgWikiMonsterDrop");
	SetCnet(0x0141151240, 6, "CDlgWikiMonsterDrop");
	SetCnet(0x0141150D68, 5, "CDlgWikiMonster::ShowSpecficLinkCommand");
	SetCnet(0x0141150D98, 46, "CDlgWikiMonster");
	SetCnet(0x0141150F10, 6, "CDlgWikiMonster");
	SetCnet(0x01411509F0, 47, "CDlgWikiItemListBase");
	SetCnet(0x0141150B70, 6, "CDlgWikiItemListBase");
	SetCnet(0x0141150750, 47, "CDlgWikiItemConfirm");
	SetCnet(0x01411508D0, 6, "CDlgWikiItemConfirm");
	SetCnet(0x0141150368, 5, "CDlgWikiItem::ShowSpecficLinkCommand");
	SetCnet(0x0141150398, 46, "CDlgWikiItem");
	SetCnet(0x0141150510, 6, "CDlgWikiItem");
	SetCnet(0x014114FE60, 46, "CDlgWikiGuide");
	SetCnet(0x014114FFD8, 6, "CDlgWikiGuide");
	SetCnet(0x014114FB30, 46, "CDlgWikiFeature");
	SetCnet(0x014114FCA8, 6, "CDlgWikiFeature");
	SetCnet(0x014114F890, 47, "CDlgWikiEquipmentDrop");
	SetCnet(0x014114FA10, 6, "CDlgWikiEquipmentDrop");
	SetCnet(0x014114F4B8, 5, "CDlgWikiEquipment::ShowSpecficLinkCommand");
	SetCnet(0x014114F4E8, 46, "CDlgWikiEquipment");
	SetCnet(0x014114F660, 6, "CDlgWikiEquipment");
	SetCnet(0x014114F088, 46, "CDlgWikiByNameBase");
	SetCnet(0x014114F200, 6, "CDlgWikiByNameBase");
	SetCnet(0x014114EE40, 46, "CDlgWikiBase");
	SetCnet(0x014114EFB8, 6, "CDlgWikiBase");
	SetCnet(0x014114EB80, 47, "CDlgWikiAreaList");
	SetCnet(0x014114ED00, 6, "CDlgWikiAreaList");
	SetCnet(0x014114E8E8, 41, "CDlgWiki");
	SetCnet(0x014114E6D0, 41, "CDlgWeddingInvite");
	SetCnet(0x014114E370, 41, "CDlgWedding");
	SetCnet(0x014114DC90, 46, "CDlgWebViewProduct");
	SetCnet(0x014114DE08, 2, "CDlgWebViewProduct");
	SetCnet(0x014114D940, 41, "CDlgWebTradeOption");
	SetCnet(0x014114D700, 39, "CDlgWebTradeInfo");
	SetCnet(0x014114D2A0, 46, "CDlgWebTradeBase");
	SetCnet(0x014114CC30, 47, "CDlgWebRoleTrade");
	SetCnet(0x014114C858, 47, "CDlgWebMyShop");
	SetCnet(0x014114C0B0, 7, "CDlgWebListSSOURLNavigator");
	SetCnet(0x014114C0F0, 7, "CDlgWebListSSOPayNavigator");
	SetCnet(0x014114C130, 7, "CDlgWebListSSOActivityNavigator");
	SetCnet(0x014114C1B0, 7, "CDlgWebListSSOActivity3Navigator");
	SetCnet(0x014114C170, 7, "CDlgWebListSSOActivity2Navigator");
	SetCnet(0x014114C1F0, 41, "CDlgWebList");
	SetCnet(0x014114C340, 2, "CDlgWebList");
	SetCnet(0x014114C358, 4, "CDlgWebList");
	SetCnet(0x014114BD78, 41, "CDlgWarTower");
	SetCnet(0x01411542D0, 41, "CDlgWSResult");
	SetCnet(0x0141154180, 41, "CDlgWSPack");
	SetCnet(0x0141154820, 41, "CDlgWSLocationTip");
	SetCnet(0x0141154420, 43, "CDlgWSExit");
	SetCnet(0x01411546D0, 41, "CDlgWSCircleTime");
	SetCnet(0x0141154580, 41, "CDlgWSChoosePosTip");
	SetCnet(0x014114BBA0, 41, "CDlgVoteEnd");
	SetCnet(0x014114B9C8, 41, "CDlgVoteBegin");
	SetCnet(0x014114B508, 41, "CDlgVirtualStorage");
	SetCnet(0x014114B1D0, 41, "CDlgVipHelp");
	SetCnet(0x014114AFD8, 41, "CDlgViewModel");
	SetCnet(0x014114A7E0, 3, "CDlgTurnOverCards::CECTurnCardsTimer");
	SetCnet(0x014114A800, 41, "CDlgTurnOverCards");
	SetCnet(0x014114A4A8, 41, "CDlgTreasureMap");
	SetCnet(0x014114A248, 41, "CDlgTransmitMapsTool01");
	SetCnet(0x0141149FC8, 41, "CDlgTransmitMaps");
	SetCnet(0x0141149CC8, 41, "CDlgTrade");
	SetCnet(0x0141149950, 41, "CDlgTouchShop");
	SetCnet(0x01411496B0, 42, "CDlgTokenShop");
	SetCnet(0x01411492F8, 41, "CDlgTitleSubList");
	SetCnet(0x0141148EA0, 41, "CDlgTitleSubDia");
	SetCnet(0x0141148BE0, 41, "CDlgTitleList");
	SetCnet(0x0141148990, 41, "CDlgTitleChallenge");
	SetCnet(0x0141148718, 41, "CDlgTitleBubble");
	SetCnet(0x01411892A8, 41, "CDlgTimePause");
	SetCnet(0x01410C8AE8, 41, "CDlgThrowDriftBottle");
	SetCnet(0x01411481C8, 39, "CDlgTheme");
	SetCnet(0x0141147D80, 41, "CDlgTextHelp");
	SetCnet(0x0141147BC0, 41, "CDlgTeamStateHint");
	SetCnet(0x0141147A20, 41, "CDlgTeamMate");
	SetCnet(0x01411476D0, 41, "CDlgTeamMain");
	SetCnet(0x01411473C8, 41, "CDlgTeamContext");
	SetCnet(0x0141147128, 41, "CDlgTeach");
	SetCnet(0x0141146CE8, 44, "CDlgTaskTrace");
	SetCnet(0x0141146640, 41, "CDlgTaskTalk");
	SetCnet(0x01411463C8, 41, "CDlgTaskMiniGameQTE");
	SetCnet(0x0141145FB8, 41, "CDlgTaskList");
	SetCnet(0x0141184C08, 41, "CDlgTaskHintPop");
	SetCnet(0x0141145BE0, 41, "CDlgTaskFinishDiary");
	SetCnet(0x0141145A08, 41, "CDlgTaskEventTraceSublist");
	SetCnet(0x0141145758, 44, "CDlgTaskEventTraceSub");
	SetCnet(0x0141145370, 41, "CDlgTaskEventTrace");
	SetCnet(0x0141145118, 41, "CDlgTaskConfirm");
	SetCnet(0x0141183770, 41, "CDlgTaskAction");
	SetCnet(0x0141144CA0, 41, "CDlgTask");
	SetCnet(0x01411440B8, 16, "CDlgTargetShowPlayerPolicy");
	SetCnet(0x0141144140, 16, "CDlgTargetShowPlayerAsPlayerPolicy");
	SetCnet(0x01411441C8, 16, "CDlgTargetShowNPCAsPlayerPolicy");
	SetCnet(0x0141143EC0, 41, "CDlgTargetOfTarget");
	SetCnet(0x0141144450, 41, "CDlgTargetItem");
	SetCnet(0x0141143D70, 41, "CDlgTarget");
	SetCnet(0x01410E7058, 41, "CDlgSystemTeach");
	SetCnet(0x0141184968, 41, "CDlgSystem7");
	SetCnet(0x01411434E0, 41, "CDlgSystem6");
	SetCnet(0x0141143630, 4, "CDlgSystem6");
	SetCnet(0x0141184818, 41, "CDlgSystem5");
	SetCnet(0x0141143390, 41, "CDlgSystem4");
	SetCnet(0x01411438C8, 41, "CDlgSystem3");
	SetCnet(0x0141143240, 41, "CDlgSystem2");
	SetCnet(0x0141142D90, 41, "CDlgSystem");
	SetCnet(0x0141142AE8, 41, "CDlgSysModule");
	SetCnet(0x0141185EA0, 41, "CDlgSysModQuickBar");
	SetCnet(0x0141189C18, 41, "CDlgSummerEnter_2021");
	SetCnet(0x01411426A0, 41, "CDlgSummerActivity_2021");
	SetCnet(0x0141142380, 41, "CDlgSubList");
	SetCnet(0x0141189AB0, 44, "CDlgSubHeroBookBiogeaphyChapter");
	SetCnet(0x014114B658, 44, "CDlgSubEquipInfo");
	SetCnet(0x01411420D0, 41, "CDlgSubDialogList");
	SetCnet(0x0141141E78, 42, "CDlgStudent");
	SetCnet(0x01411416C0, 41, "CDlgStoryBookMain");
	SetCnet(0x0141141810, 41, "CDlgStoryBookList");
	SetCnet(0x0141141960, 41, "CDlgStoryBookInfo");
	SetCnet(0x0141141AB0, 41, "CDlgStoryBookEntry");
	SetCnet(0x0141141238, 41, "CDlgStoragePW");
	SetCnet(0x0141139410, 44, "CDlgStorageItem");
	SetCnet(0x0141141050, 41, "CDlgStorageChangePW");
	SetCnet(0x0141140BD0, 41, "CDlgStorage");
	SetCnet(0x0141140790, 41, "CDlgStopNPCVoice");
	SetCnet(0x0141140518, 41, "CDlgStoneTransfer");
	SetCnet(0x0141140200, 41, "CDlgStoneReplace");
	SetCnet(0x0141135BE8, 44, "CDlgStoneItem");
	SetCnet(0x014113FEC8, 41, "CDlgStoneChange");
	SetCnet(0x014113FB50, 41, "CDlgStatuePlayerProperty");
	SetCnet(0x014113F948, 41, "CDlgStatueActionSelect");
	SetCnet(0x014113F1C8, 41, "CDlgSpringFestival2021Notice");
	SetCnet(0x014113F078, 41, "CDlgSpringFestival2021Main");
	SetCnet(0x014113F318, 41, "CDlgSpringFestival2021Button");
	SetCnet(0x014113EA30, 41, "CDlgSpouseParadeBook");
	SetCnet(0x014113E6B8, 41, "CDlgSpouseLoveTreeChoose");
	SetCnet(0x014113E4B8, 41, "CDlgSpouseLoveTree");
	SetCnet(0x014113E290, 41, "CDlgSpouseEnterHome");
	SetCnet(0x014113E058, 41, "CDlgSplit");
	SetCnet(0x014113DD78, 41, "CDlgSoloTowerChallengeState");
	SetCnet(0x014113DAF8, 41, "CDlgSoloTowerChallengeSelectLayer");
	SetCnet(0x014113D8A0, 41, "CDlgSoloTowerChallengeScoreCost");
	SetCnet(0x014113D490, 41, "CDlgSoloTowerChallengeRankLocal");
	SetCnet(0x014113D5E0, 41, "CDlgSoloTowerChallengeRankGlobal");
	SetCnet(0x014113D140, 41, "CDlgSoloTowerChallengeConfirm");
	SetCnet(0x014113CEA0, 41, "CDlgSoloTowerChallengeAward");
	SetCnet(0x014113CB08, 41, "CDlgSlotMachine");
	SetCnet(0x014113C8D0, 41, "CDlgSlideSkill");
	SetCnet(0x014113C650, 41, "CDlgSkillTree");
	SetCnet(0x014113C390, 41, "CDlgSkillSubTree");
	SetCnet(0x0141186140, 41, "CDlgSkillSubPool");
	SetCnet(0x014113BE90, 41, "CDlgSkillSubOther");
	SetCnet(0x0141185FF0, 41, "CDlgSkillSubListRankItem");
	SetCnet(0x014113B9E8, 41, "CDlgSkillSubListItem");
	SetCnet(0x014113B4C0, 41, "CDlgSkillSubList");
	SetCnet(0x014113B610, 4, "CDlgSkillSubList");
	SetCnet(0x014113B0C8, 41, "CDlgSkillSubAction");
	SetCnet(0x014112C610, 44, "CDlgSkillItem");
	SetCnet(0x014113AEA0, 41, "CDlgSkillEffect");
	SetCnet(0x014113ACE8, 41, "CDlgSkillEdit");
	SetCnet(0x014113A9E8, 41, "CDlgSkillConfig");
	SetCnet(0x014113A6C8, 41, "CDlgSkillAction");
	SetCnet(0x014113A2A0, 41, "CDlgSimulatorSuits");
	SetCnet(0x014113A000, 41, "CDlgSimulatorSuitList");
	SetCnet(0x01411392C0, 41, "CDlgSimulatorStorage");
	SetCnet(0x0141135A98, 41, "CDlgSimulatorStoneList");
	SetCnet(0x0141136CF0, 41, "CDlgSimulatorSoulSetting");
	SetCnet(0x0141139170, 41, "CDlgSimulatorSoul");
	SetCnet(0x0141138A50, 41, "CDlgSimulatorRuneList");
	SetCnet(0x0141135EA0, 41, "CDlgSimulatorRandomProps");
	SetCnet(0x0141138398, 41, "CDlgSimulatorProduceLine");
	SetCnet(0x0141138650, 41, "CDlgSimulatorMaterialAcquireMethod");
	SetCnet(0x0141137700, 41, "CDlgSimulatorMain");
	SetCnet(0x0141137020, 41, "CDlgSimulatorHelp");
	SetCnet(0x0141136B98, 42, "CDlgSimulatorGeneralCardList");
	SetCnet(0x0141136A48, 41, "CDlgSimulatorGeneralCardDetail");
	SetCnet(0x0141136438, 41, "CDlgSimulatorEquipmentDetail");
	SetCnet(0x0141135948, 41, "CDlgSimulatorEquipList");
	SetCnet(0x0141135D50, 41, "CDlgSimulatorEngrave");
	SetCnet(0x014113A150, 41, "CDlgSimulatorCompare");
	SetCnet(0x0141134F58, 41, "CDlgSimulatorClassify");
	SetCnet(0x0141136588, 41, "CDlgSimulatorCampTokenDetail");
	SetCnet(0x01411345E0, 43, "CDlgSimulatorCTTreeDetail");
	SetCnet(0x0141134338, 42, "CDlgSimulatorCTOpts");
	SetCnet(0x01411341E8, 41, "CDlgSimulatorCTMain");
	SetCnet(0x0141134490, 41, "CDlgSimulatorCTLevelDetail");
	SetCnet(0x0141133C60, 41, "CDlgSimulatorAstrolabe");
	SetCnet(0x01411338B8, 41, "CDlgSimpleDynSkill");
	SetCnet(0x0141133550, 4, "CDlgSimpleCostItemServicePolicy::ProtocolParameterReadyPolicy");
	SetCnet(0x0141133578, 7, "CDlgSimpleCostItemServicePolicy");
	SetCnet(0x01411335B8, 41, "CDlgSimpleCostItemService");
	SetCnet(0x0141133708, 4, "CDlgSimpleCostItemService");
	SetCnet(0x01411330E0, 41, "CDlgSignIn");
	SetCnet(0x014111B158, 43, "CDlgShopSearchBase");
	SetCnet(0x0141132DE0, 42, "CDlgShopCartSubList");
	SetCnet(0x0141132BC0, 41, "CDlgShopCartSub");
	SetCnet(0x01411328B8, 41, "CDlgShopCart");
	SetCnet(0x0141132A08, 4, "CDlgShopCart");
	SetCnet(0x0141132A30, 4, "CDlgShopCart");
	SetCnet(0x0141132540, 41, "CDlgShop");
	SetCnet(0x01410FF648, 41, "CDlgShieldEnergy");
	SetCnet(0x0141132078, 45, "CDlgSettingVideo");
	SetCnet(0x0141131CC8, 45, "CDlgSettingSystem");
	SetCnet(0x0141131A90, 41, "CDlgSettingScriptHelp");
	SetCnet(0x0141131878, 45, "CDlgSettingQuickKey");
	SetCnet(0x0141131560, 45, "CDlgSettingGame");
	SetCnet(0x0141131210, 45, "CDlgSetting");
	SetCnet(0x0141131020, 41, "CDlgSetPW");
	SetCnet(0x014112E8E0, 41, "CDlgServantWakeUpResult");
	SetCnet(0x0141130E10, 41, "CDlgServantSubStory");
	SetCnet(0x0141130C30, 41, "CDlgServantSubState");
	SetCnet(0x01411309D0, 41, "CDlgServantSubBag");
	SetCnet(0x014112F610, 41, "CDlgServantSubAward");
	SetCnet(0x01411306D0, 41, "CDlgServantQuickBarSettings");
	SetCnet(0x0141130490, 41, "CDlgServantQuickBar");
	SetCnet(0x014112E640, 41, "CDlgServantNewDay");
	SetCnet(0x014112F4C0, 41, "CDlgServantMain");
	SetCnet(0x0141130188, 41, "CDlgServantLevelUp");
	SetCnet(0x014112E790, 41, "CDlgServantLessonPool");
	SetCnet(0x014112E100, 41, "CDlgServantLesson");
	SetCnet(0x014112E3A0, 41, "CDlgServantInputName");
	SetCnet(0x014112E250, 41, "CDlgServantGrowing");
	SetCnet(0x014112E4F0, 41, "CDlgServantGfx");
	SetCnet(0x014112F760, 41, "CDlgServantAward");
	SetCnet(0x014112FD68, 41, "CDlgServantAdult");
	SetCnet(0x014112D710, 41, "CDlgSelectTransmitMap");
	SetCnet(0x014112D350, 3, "CDlgSelect::HintDlgShow");
	SetCnet(0x014112D370, 41, "CDlgSelect");
	SetCnet(0x014112CFF8, 41, "CDlgScriptTip");
	SetCnet(0x014112CE10, 41, "CDlgScriptHelpHistory");
	SetCnet(0x014112CBE8, 41, "CDlgScriptHelp");
	SetCnet(0x0141187648, 41, "CDlgScriptGfx18");
	SetCnet(0x014112C9E0, 43, "CDlgScreenPositionBase");
	SetCnet(0x014112C4C0, 41, "CDlgRuneMain");
	SetCnet(0x014112C128, 41, "CDlgRuneForge");
	SetCnet(0x014112BDC0, 41, "CDlgRuneEquip");
	SetCnet(0x014112BCF0, 2, "CDlgReviveMessageBoxHandler");
	SetCnet(0x014112BB98, 41, "CDlgRevive");
	SetCnet(0x014112B998, 41, "CDlgReturnReward");
	SetCnet(0x014112B7B0, 41, "CDlgResetProp");
	SetCnet(0x014112B558, 41, "CDlgReportToGM");
	SetCnet(0x01411237C8, 41, "CDlgRelationshipSubProductList");
	SetCnet(0x0141123A68, 41, "CDlgRelationshipSubProduct");
	SetCnet(0x0141123678, 41, "CDlgRelationshipSubCostList");
	SetCnet(0x0141123918, 41, "CDlgRelationshipSubCost");
	SetCnet(0x014112B158, 41, "CDlgReincarnationRewrite");
	SetCnet(0x014112AF28, 41, "CDlgReincarnationBook");
	SetCnet(0x014112AC78, 41, "CDlgReincarnation");
	SetCnet(0x014112A9A0, 41, "CDlgRefineTrans");
	SetCnet(0x014112A620, 41, "CDlgRedSpark");
	SetCnet(0x014112A470, 41, "CDlgRedPacketResult");
	SetCnet(0x014112A1C0, 41, "CDlgRedPacketMessage");
	SetCnet(0x0141129F98, 41, "CDlgRedPacketGfx");
	SetCnet(0x0141129CF8, 41, "CDlgRedPacketEdit");
	SetCnet(0x0141129A00, 41, "CDlgRedPacket");
	SetCnet(0x0141128F98, 41, "CDlgRedBookRankList");
	SetCnet(0x0141128E48, 41, "CDlgRedBookMain");
	SetCnet(0x01411290E8, 41, "CDlgRedBookEntrance");
	SetCnet(0x0141129738, 41, "CDlgRedBookBox");
	SetCnet(0x0141188958, 41, "CDlgRedBookAwardSub");
	SetCnet(0x0141128528, 41, "CDlgRecallerReward");
	SetCnet(0x01411283D0, 42, "CDlgRecallInviterAward");
	SetCnet(0x0141128118, 41, "CDlgRecallActivityMain");
	SetCnet(0x0141128678, 43, "CDlgRecallActivityEntrance");
	SetCnet(0x0141127FC8, 41, "CDlgRecallActivityCode");
	SetCnet(0x0141127490, 41, "CDlgRandomSoftKeyboard");
	SetCnet(0x0141127150, 41, "CDlgRandomMap");
	SetCnet(0x0141127950, 41, "CDlgRandProp");
	SetCnet(0x0141126E98, 41, "CDlgQuickPay");
	SetCnet(0x0141126AE0, 44, "CDlgQuickBuyPop");
	SetCnet(0x0141126C48, 7, "CDlgQuickBuyPop");
	SetCnet(0x0141126858, 44, "CDlgQuickBuyBase");
	SetCnet(0x01411269C0, 7, "CDlgQuickBuyBase");
	SetCnet(0x01411265C0, 41, "CDlgQuickBarPet");
	SetCnet(0x0141126228, 41, "CDlgQuickBar");
	SetCnet(0x01411846C8, 41, "CDlgQuickActionBind");
	SetCnet(0x0141125C38, 41, "CDlgQuickAction");
	SetCnet(0x01411255D8, 41, "CDlgQuestionnaireEntrance");
	SetCnet(0x0141125728, 41, "CDlgQuestionnaire");
	SetCnet(0x0141125930, 41, "CDlgQuestionTask");
	SetCnet(0x01411253D8, 41, "CDlgQuestion");
	SetCnet(0x0141125118, 41, "CDlgQShopItem");
	SetCnet(0x0141124DC8, 41, "CDlgQShopBuy");
	SetCnet(0x01411247C0, 41, "CDlgQShop");
	SetCnet(0x0141124910, 4, "CDlgQShop");
	SetCnet(0x01411BE5D0, 41, "CDlgPwdProtect");
	SetCnet(0x01411BE330, 41, "CDlgPwdHint");
	SetCnet(0x0141123F10, 42, "CDlgPureColorFashionTip");
	SetCnet(0x0141123CC0, 41, "CDlgProfView");
	SetCnet(0x01411230D0, 41, "CDlgProduceLibrary");
	SetCnet(0x0141123528, 41, "CDlgProduceLibRelationship");
	SetCnet(0x0141122CC8, 42, "CDlgProduce");
	SetCnet(0x01411228B8, 41, "CDlgProclaim");
	SetCnet(0x0141122688, 44, "CDlgPridictableEngrave");
	SetCnet(0x0141122308, 41, "CDlgPreviewProduce");
	SetCnet(0x0141122010, 41, "CDlgPreviewPetRebuild");
	SetCnet(0x0141121D78, 41, "CDlgPray");
	SetCnet(0x01411216F0, 41, "CDlgPopMsg");
	SetCnet(0x0141121638, 7, "CDlgPlayerRenamePolicy");
	SetCnet(0x0141121200, 41, "CDlgPlayerFightScore");
	SetCnet(0x0141184AB8, 41, "CDlgPlantPet");
	SetCnet(0x0141120B40, 41, "CDlgPetRetrain");
	SetCnet(0x01411208D8, 41, "CDlgPetRename");
	SetCnet(0x0141120638, 41, "CDlgPetRec");
	SetCnet(0x0141120390, 41, "CDlgPetNature");
	SetCnet(0x0141120030, 41, "CDlgPetList");
	SetCnet(0x014111FD18, 41, "CDlgPetHatch");
	SetCnet(0x014111FA90, 41, "CDlgPetHandBookSubList");
	SetCnet(0x014111F8C8, 41, "CDlgPetHandBookSub");
	SetCnet(0x014111F6E0, 41, "CDlgPetFittingRoom");
	SetCnet(0x014111F098, 41, "CDlgPetEvolution");
	SetCnet(0x014111F4F8, 41, "CDlgPetEvoAnim");
	SetCnet(0x014111ECD8, 41, "CDlgPetDye");
	SetCnet(0x014111E860, 41, "CDlgPetDetail");
	SetCnet(0x014111E5F8, 41, "CDlgPengPengRank");
	SetCnet(0x014111E410, 41, "CDlgPengPengEnter");
	SetCnet(0x014111E100, 41, "CDlgPasswordConfirm");
	SetCnet(0x014111DCA0, 41, "CDlgParkRankList");
	SetCnet(0x01410A3210, 41, "CDlgPaletteHSVBase");
	SetCnet(0x01410A3360, 2, "CDlgPaletteHSVBase");
	SetCnet(0x014111DA28, 43, "CDlgPaletteFashion");
	SetCnet(0x014111D8D0, 42, "CDlgPaletteBase");
	SetCnet(0x014111D660, 44, "CDlgPalette2");
	SetCnet(0x014111D448, 43, "CDlgPalette");
	SetCnet(0x0141121A60, 44, "CDlgPQ");
	SetCnet(0x0141120CF0, 41, "CDlgPKSetting");
	SetCnet(0x014111D200, 41, "CDlgOptimizeOS");
	SetCnet(0x014111CD58, 41, "CDlgOptimizeMem");
	SetCnet(0x014111C970, 41, "CDlgOptimizeFunc");
	SetCnet(0x014111C758, 41, "CDlgOptimizeBase");
	SetCnet(0x014110E8E0, 41, "CDlgOnlineRemind");
	SetCnet(0x014111C488, 41, "CDlgOnlineAward");
	SetCnet(0x01411873A8, 41, "CDlgOldMoney2NewMoney");
	SetCnet(0x014111AE78, 41, "CDlgOfflineShopType");
	SetCnet(0x014111C1B0, 42, "CDlgOfflineShopStore");
	SetCnet(0x014111BB48, 41, "CDlgOfflineShopSelfSetting");
	SetCnet(0x014111B898, 43, "CDlgOfflineShopList");
	SetCnet(0x014111B390, 43, "CDlgOfflineShopItemsList");
	SetCnet(0x014111AD28, 41, "CDlgOfflineShopCreate");
	SetCnet(0x0141186D18, 41, "CDlgOfflineBattleVectory");
	SetCnet(0x014111A860, 41, "CDlgOfflineBattleTiny");
	SetCnet(0x014111AAB8, 41, "CDlgOfflineBattleShut");
	SetCnet(0x0141186E68, 41, "CDlgOfflineBattleReborn");
	SetCnet(0x014111A710, 41, "CDlgOfflineBattlePanel");
	SetCnet(0x014111BF18, 41, "CDlgOfflinShopSelfSettingLog");
	SetCnet(0x01411197F0, 41, "CDlgNewserverMain");
	SetCnet(0x0141119388, 41, "CDlgNewserverEvent05");
	SetCnet(0x0141118FF0, 41, "CDlgNewserverEvent04");
	SetCnet(0x0141118AC8, 41, "CDlgNewserverEvent03");
	SetCnet(0x0141118530, 41, "CDlgNewserverEvent02view");
	SetCnet(0x0141117E58, 2, "CDlgNewserverEvent02::CTaskTrigger");
	SetCnet(0x0141117E70, 41, "CDlgNewserverEvent02");
	SetCnet(0x0141117AE0, 41, "CDlgNewserverEvent01");
	SetCnet(0x0141117868, 41, "CDlgNewPopMsg");
	SetCnet(0x01411874F8, 41, "CDlgNewMoney2OldMoney");
	SetCnet(0x01411172A0, 41, "CDlgNewLotteryTips");
	SetCnet(0x0141117150, 41, "CDlgNewLotterySetting");
	SetCnet(0x0141117000, 41, "CDlgNewLotteryRewards");
	SetCnet(0x0141116EB0, 41, "CDlgNewLottery");
	SetCnet(0x0141187798, 41, "CDlgNewGoldHelp6");
	SetCnet(0x0141187258, 41, "CDlgNewGoldGuide");
	SetCnet(0x0141116688, 5, "CDlgNameLink::TaskEventLinkCommand");
	SetCnet(0x01411166B8, 5, "CDlgNameLink::OpenTreasureMapLinkCommand");
	SetCnet(0x0141116658, 5, "CDlgNameLink::OpenHomeAppreciateLinkCommand");
	SetCnet(0x0141116628, 5, "CDlgNameLink::MoveToLinkCommand");
	SetCnet(0x01411455F0, 44, "CDlgNameLink");
	SetCnet(0x014111A2A0, 41, "CDlgNPCTalk");
	SetCnet(0x0141119C40, 41, "CDlgNPC");
	SetCnet(0x0141115E58, 41, "CDlgMysteriousShopBuyConfirm");
	SetCnet(0x0141115D08, 41, "CDlgMysteriousShop");
	SetCnet(0x0141115910, 41, "CDlgMonsterSpirit");
	SetCnet(0x0141105480, 41, "CDlgMonsterSkillList");
	SetCnet(0x01411055D0, 41, "CDlgMonsterSkillInfo");
	SetCnet(0x0141115650, 41, "CDlgMonsterFlag");
	SetCnet(0x01411214A8, 7, "CDlgModifyNamePolicy");
	SetCnet(0x01411214E8, 41, "CDlgModifyName");
	SetCnet(0x0141113590, 41, "CDlgMinimizeBar");
	SetCnet(0x0141112B08, 41, "CDlgMiniMap");
	SetCnet(0x0141112C58, 4, "CDlgMiniMap");
	SetCnet(0x0141112218, 41, "CDlgMiniGameScore");
	SetCnet(0x0141106118, 44, "CDlgMessageItem");
	SetCnet(0x0141111FC8, 41, "CDlgMessageBox");
	SetCnet(0x0141111C90, 41, "CDlgMeridiansImpact");
	SetCnet(0x01411115E0, 41, "CDlgMeridians");
	SetCnet(0x01411108A8, 41, "CDlgMentoringLeaveWords");
	SetCnet(0x01411106B0, 45, "CDlgMentoringApplyList");
	SetCnet(0x0141110440, 45, "CDlgMentoring");
	SetCnet(0x0141110DB0, 42, "CDlgMentorStudnetAward");
	SetCnet(0x01411112F0, 44, "CDlgMentorStudentSearchBase");
	SetCnet(0x0141110008, 42, "CDlgMentorStudentInstance");
	SetCnet(0x0141111090, 41, "CDlgMentorStudentGet");
	SetCnet(0x0141186FB8, 41, "CDlgMentorStudentChangeIdentity");
	SetCnet(0x0141110B30, 42, "CDlgMentorRank");
	SetCnet(0x014110FEB0, 42, "CDlgMentor");
	SetCnet(0x014110F9E8, 41, "CDlgMaterialRefineConfirm");
	SetCnet(0x014110F898, 41, "CDlgMaterialRefine");
	SetCnet(0x0141185538, 41, "CDlgMatchResult");
	SetCnet(0x0141185148, 41, "CDlgMatchProfileSetting");
	SetCnet(0x0141184EA8, 41, "CDlgMatchProfileHobby");
	SetCnet(0x0141184D58, 41, "CDlgMatchProfileHabit");
	SetCnet(0x0141184FF8, 41, "CDlgMatchProfileAge");
	SetCnet(0x01411853E8, 41, "CDlgMatchModeSelect");
	SetCnet(0x0141185298, 41, "CDlgMatchInfoHint");
	SetCnet(0x014110ECA8, 41, "CDlgMailWrite");
	SetCnet(0x014110E558, 41, "CDlgMailToFriends");
	SetCnet(0x014110E120, 41, "CDlgMailRead");
	SetCnet(0x014110DEB0, 41, "CDlgMailOption");
	SetCnet(0x014110DB10, 41, "CDlgMailList");
	SetCnet(0x014110EF28, 41, "CDlgMaSpringWine");
	SetCnet(0x0141114F48, 41, "CDlgMNFactionWorldMap");
	SetCnet(0x0141114D00, 41, "CDlgMNFactionWarApplyResult");
	SetCnet(0x0141114B18, 41, "CDlgMNFactionWarApply");
	SetCnet(0x01411148D0, 41, "CDlgMNFactionTransmit");
	SetCnet(0x01411146C0, 41, "CDlgMNFactionResourcePointDegree");
	SetCnet(0x01411144E0, 41, "CDlgMNFactionRank");
	SetCnet(0x01411142B8, 41, "CDlgMNFactionHelp");
	SetCnet(0x0141114038, 41, "CDlgMNFactionChooseBattle");
	SetCnet(0x0141113DE0, 41, "CDlgMNFactionBattleResult");
	SetCnet(0x0141113B18, 41, "CDlgMNFactionBattleFieldMap");
	SetCnet(0x0141113880, 41, "CDlgMNFactionBattleFieldInfo");
	SetCnet(0x0141115218, 41, "CDlgMNFActionWorldMapDetail");
	SetCnet(0x014110C870, 41, "CDlgLotterySubList");
	SetCnet(0x014110C5A8, 41, "CDlgLotterySub");
	SetCnet(0x014110D310, 41, "CDlgLotteryMain");
	SetCnet(0x014110CA70, 41, "CDlgLotteryHintCostItem");
	SetCnet(0x014110C408, 41, "CDlgLotteryBatchSettingSubList");
	SetCnet(0x014110C1B8, 41, "CDlgLotteryBatchSettingSub");
	SetCnet(0x014110BF70, 41, "CDlgLotteryBatchSetting");
	SetCnet(0x01411BE1F0, 39, "CDlgLoginVersion");
	SetCnet(0x01411BE0A0, 41, "CDlgLoginServerListButton");
	SetCnet(0x014110BB90, 41, "CDlgLoginServerList");
	SetCnet(0x014110B828, 41, "CDlgLoginQueue");
	SetCnet(0x014110B978, 4, "CDlgLoginQueue");
	SetCnet(0x014110B598, 41, "CDlgLoginPage2");
	SetCnet(0x014110B448, 41, "CDlgLoginPage");
	SetCnet(0x014110B098, 50, "CDlgLoginOther");
	SetCnet(0x014110B230, 1, "CDlgLoginOther");
	SetCnet(0x014110AD28, 41, "CDlgLoginErr");
	SetCnet(0x014110AAC8, 41, "CDlgLoginButton");
	SetCnet(0x014110A670, 41, "CDlgLogin");
	SetCnet(0x0141109C30, 41, "CDlgLoanPayment");
	SetCnet(0x01411096C0, 41, "CDlgLoanMain");
	SetCnet(0x0141109AC8, 44, "CDlgLoanListItem");
	SetCnet(0x0141109978, 41, "CDlgLoanList");
	SetCnet(0x014110A000, 41, "CDlgLoanEquipUpEnsure");
	SetCnet(0x0141109E80, 47, "CDlgLoanEquipUp");
	SetCnet(0x0141109810, 44, "CDlgLoanConfigItem");
	SetCnet(0x0141108B90, 46, "CDlgLevel2UpgradeShowDeity");
	SetCnet(0x0141108708, 46, "CDlgLevel2UpgradeShow");
	SetCnet(0x0141108540, 41, "CDlgLeaveWords");
	SetCnet(0x0141108378, 41, "CDlgKingResult");
	SetCnet(0x0141108228, 41, "CDlgKingElection");
	SetCnet(0x0141107F30, 41, "CDlgKingCommand");
	SetCnet(0x0141107D30, 41, "CDlgKingAuction");
	SetCnet(0x0141139E98, 44, "CDlgItemSuit");
	SetCnet(0x0141138BA0, 44, "CDlgItemRune");
	SetCnet(0x01411384E8, 44, "CDlgItemProduce");
	SetCnet(0x0141134C88, 44, "CDlgItemEquipStone");
	SetCnet(0x0141134B20, 44, "CDlgItemEquipRefine");
	SetCnet(0x0141134DF0, 44, "CDlgItemEquipEngrave");
	SetCnet(0x0141107A90, 41, "CDlgItemDesc");
	SetCnet(0x014118A9D8, 41, "CDlgItemBubbleWithCount<6>");
	SetCnet(0x014118A888, 41, "CDlgItemBubbleWithCount<2>");
	SetCnet(0x0141107870, 41, "CDlgItemBubble");
	SetCnet(0x0141107458, 41, "CDlgInvisibleList");
	SetCnet(0x0141106E28, 2, "CDlgInventoryMessageBoxHandler");
	SetCnet(0x0141107218, 42, "CDlgInventoryDetail");
	SetCnet(0x0141106B68, 41, "CDlgInventory");
	SetCnet(0x0141106700, 41, "CDlgInstanceStageSwitch");
	SetCnet(0x01411064A0, 41, "CDlgInstanceStage");
	SetCnet(0x0141105FC8, 41, "CDlgInstanceMessageBoard");
	SetCnet(0x0141105330, 41, "CDlgInstanceManualDetail");
	SetCnet(0x0141104AC8, 41, "CDlgInstanceManual");
	SetCnet(0x01411046F8, 41, "CDlgInstall");
	SetCnet(0x0141103E30, 41, "CDlgInputName");
	SetCnet(0x0141104318, 41, "CDlgInputNO3");
	SetCnet(0x0141183B70, 41, "CDlgInputNO2");
	SetCnet(0x01411041C8, 41, "CDlgInputNO");
	SetCnet(0x0141103A78, 41, "CDlgInfo");
	SetCnet(0x01411036B8, 3, "CDlgIdentifyItemMain::CECCloseDlgTimer");
	SetCnet(0x01411036D8, 41, "CDlgIdentifyItemMain");
	SetCnet(0x01411033F8, 41, "CDlgIdentify");
	SetCnet(0x0141103098, 41, "CDlgIceThunderBall");
	SetCnet(0x01411896C0, 41, "CDlgHuaZhaoActivityRule");
	SetCnet(0x0141189570, 41, "CDlgHuaZhaoActivityEnter");
	SetCnet(0x0141102DE8, 41, "CDlgHuaZhaoActivity");
	SetCnet(0x01411026E8, 41, "CDlgHpOtherMonster");
	SetCnet(0x01411000E0, 41, "CDlgHostPet");
	SetCnet(0x01410FFDB8, 41, "CDlgHostELF");
	SetCnet(0x01410FF4F8, 41, "CDlgHost");
	SetCnet(0x01410FEE08, 41, "CDlgHomeWorldMap");
	SetCnet(0x01410FEB58, 41, "CDlgHomeWorkShopTalentChoose");
	SetCnet(0x01410FE968, 41, "CDlgHomeWorkShopPurchaseLevelUp");
	SetCnet(0x01410FE740, 41, "CDlgHomeWorkShopPurchase");
	SetCnet(0x01410FE378, 41, "CDlgHomeWorkShopOwnDelegateSubList");
	SetCnet(0x01410FE1B0, 41, "CDlgHomeWorkShopOwnDelegateSub");
	SetCnet(0x01410FDF20, 41, "CDlgHomeWorkShopOwnDelegateList");
	SetCnet(0x01410FDCE8, 41, "CDlgHomeWorkShopOwnDelegateConfirm");
	SetCnet(0x01410FD9D0, 41, "CDlgHomeWorkShopLevelUp");
	SetCnet(0x01410FD720, 41, "CDlgHomeWorkShopAllDelegateList");
	SetCnet(0x01410FD218, 41, "CDlgHomeWorkShop");
	SetCnet(0x01410FCC70, 41, "CDlgHomeTaskAccept");
	SetCnet(0x01410FCA00, 41, "CDlgHomeSurfaceHint");
	SetCnet(0x01410FC888, 41, "CDlgHomeSurfaceHandBook");
	SetCnet(0x01410FC5F0, 41, "CDlgHomeSkinSublistItem");
	SetCnet(0x01410FC4A0, 41, "CDlgHomeSkinSublist");
	SetCnet(0x01410FC350, 41, "CDlgHomeSkinMain");
	SetCnet(0x01410FC068, 41, "CDlgHomeSetting");
	SetCnet(0x01410FBE18, 41, "CDlgHomeSetCleanMoneyRatio");
	SetCnet(0x01410FBB48, 41, "CDlgHomeResourceProduce");
	SetCnet(0x01410FB8F8, 41, "CDlgHomeRedPackageFriend");
	SetCnet(0x01410FB6A0, 41, "CDlgHomeProduceFood");
	SetCnet(0x01410FB468, 41, "CDlgHomePetHandBook");
	SetCnet(0x01410FB1F0, 41, "CDlgHomeOpHint");
	SetCnet(0x01410FB000, 41, "CDlgHomeObjOp");
	SetCnet(0x01410FADC8, 41, "CDlgHomeMirrorUpload");
	SetCnet(0x01410FAB70, 41, "CDlgHomeMirrorRanklist");
	SetCnet(0x0141186530, 41, "CDlgHomeMapName");
	SetCnet(0x01410FA728, 41, "CDlgHomeMapEditBase");
	SetCnet(0x01411863E0, 41, "CDlgHomeMapBuy");
	SetCnet(0x01410FA2C0, 41, "CDlgHomeMainInfo");
	SetCnet(0x01410F9FF0, 41, "CDlgHomeMain");
	SetCnet(0x01410F9D30, 41, "CDlgHomeKickoutPlayer");
	SetCnet(0x01410F9B20, 41, "CDlgHomeItemLink");
	SetCnet(0x01410F9938, 41, "CDlgHomeHandBookSkinSub");
	SetCnet(0x01410F9718, 41, "CDlgHomeHandBookSkinList");
	SetCnet(0x01410F9350, 41, "CDlgHomeHandBookBase");
	SetCnet(0x01410F9178, 41, "CDlgHomeFoodRipe");
	SetCnet(0x01410F8F78, 41, "CDlgHomeFoodChooseSubList");
	SetCnet(0x01410F8D28, 41, "CDlgHomeFoodChooseSub");
	SetCnet(0x01410F8B48, 41, "CDlgHomeFarmChooseToPlantList");
	SetCnet(0x01410F87B8, 41, "CDlgHomeFarm");
	SetCnet(0x01410F8298, 41, "CDlgHomeEquipment");
	SetCnet(0x01410F8518, 41, "CDlgHomeEquipOptionFunc");
	SetCnet(0x01410F7900, 41, "CDlgHomeEditorItem");
	SetCnet(0x01410F8070, 41, "CDlgHomeEditTerrianSub");
	SetCnet(0x01410F7E68, 41, "CDlgHomeEditSurfaceSub");
	SetCnet(0x01410F7B08, 41, "CDlgHomeEditSurface");
	SetCnet(0x01410F7410, 41, "CDlgHomeEditSubBase");
	SetCnet(0x01410F7560, 41, "CDlgHomeEditGrassSub");
	SetCnet(0x01410F7178, 41, "CDlgHomeEditFunctionBuilding");
	SetCnet(0x01410F6E20, 41, "CDlgHomeChangeResource");
	SetCnet(0x01410F6BF8, 41, "CDlgHomeBuildingNameHint");
	SetCnet(0x01410F6A50, 41, "CDlgHomeBag");
	SetCnet(0x01410F6588, 41, "CDlgHomeAppreciate");
	SetCnet(0x01410F60E0, 41, "CDlgHistoryStage2");
	SetCnet(0x01410F5F28, 41, "CDlgHistoryStage1");
	SetCnet(0x01410F5D78, 41, "CDlgHistoryStage");
	SetCnet(0x01410F5BA0, 41, "CDlgHighPolyCustomizeSubmit");
	SetCnet(0x01410F5960, 41, "CDlgHighPolyCustomizeSlider");
	SetCnet(0x01410F5780, 41, "CDlgHighPolyCustomizePreMain");
	SetCnet(0x01410F5630, 41, "CDlgHighPolyCustomizePre");
	SetCnet(0x01410F53E0, 41, "CDlgHighPolyCustomizeMenu");
	SetCnet(0x01410F51E0, 41, "CDlgHighPolyCustomizeMain");
	SetCnet(0x01410F5008, 41, "CDlgHighPolyCustomizeFaceName");
	SetCnet(0x01410F4DC8, 41, "CDlgHighPolyCustomizeFaceMain");
	SetCnet(0x01410F4AB0, 41, "CDlgHighPolyCustomizeDefaultSubFace");
	SetCnet(0x01410F4C00, 41, "CDlgHighPolyCustomizeDefaultSubBody");
	SetCnet(0x01410F4960, 41, "CDlgHighPolyCustomizeDefaultMain");
	SetCnet(0x01410F4460, 41, "CDlgHighPolyCustomizeBodyMain");
	SetCnet(0x0141189810, 41, "CDlgHeroPersonality");
	SetCnet(0x01410F4170, 41, "CDlgHeroDetail");
	SetCnet(0x0141189960, 41, "CDlgHeroBookTask");
	SetCnet(0x01410F3E50, 41, "CDlgHeroBook");
	SetCnet(0x01410F3B88, 41, "CDlgHelp");
	SetCnet(0x01410F3908, 41, "CDlgHandBookTextureSub");
	SetCnet(0x01410F3760, 41, "CDlgHandBookSurfaceSub");
	SetCnet(0x01410F3468, 41, "CDlgHandBookGrassSub");
	SetCnet(0x0141102AB8, 41, "CDlgHPSystem");
	SetCnet(0x0141102900, 41, "CDlgHPPortrait");
	SetCnet(0x0141102400, 43, "CDlgHPCMakeupTextures");
	SetCnet(0x0141187A38, 43, "CDlgHPCMakeupTattooTextures");
	SetCnet(0x0141102198, 41, "CDlgHPCMakeupTattoo");
	SetCnet(0x0141101F88, 41, "CDlgHPCMakeupSkin");
	SetCnet(0x01411020D8, 2, "CDlgHPCMakeupSkin");
	SetCnet(0x0141187B98, 43, "CDlgHPCMakeupScarTextures");
	SetCnet(0x01411878E8, 41, "CDlgHPCMakeupScar");
	SetCnet(0x01411887F8, 43, "CDlgHPCMakeupRaceFeature");
	SetCnet(0x0141101448, 41, "CDlgHPCMakeupPupil");
	SetCnet(0x0141101598, 2, "CDlgHPCMakeupPupil");
	SetCnet(0x0141101AC8, 41, "CDlgHPCMakeupMain");
	SetCnet(0x0141187CF8, 43, "CDlgHPCMakeupLipTextures");
	SetCnet(0x0141101900, 41, "CDlgHPCMakeupLip");
	SetCnet(0x0141101A50, 2, "CDlgHPCMakeupLip");
	SetCnet(0x0141188698, 43, "CDlgHPCMakeupHairModelSelect");
	SetCnet(0x0141101798, 41, "CDlgHPCMakeupHair");
	SetCnet(0x01411018E8, 2, "CDlgHPCMakeupHair");
	SetCnet(0x0141187FB8, 43, "CDlgHPCMakeupEyeshadowTextures");
	SetCnet(0x0141101010, 41, "CDlgHPCMakeupEyeshadow");
	SetCnet(0x0141101160, 2, "CDlgHPCMakeupEyeshadow");
	SetCnet(0x0141188538, 43, "CDlgHPCMakeupEyepupilTextures");
	SetCnet(0x0141188118, 43, "CDlgHPCMakeupEyelineTextures");
	SetCnet(0x0141101178, 41, "CDlgHPCMakeupEyeline");
	SetCnet(0x01411012C8, 2, "CDlgHPCMakeupEyeline");
	SetCnet(0x01411883D8, 43, "CDlgHPCMakeupEyelashTextures");
	SetCnet(0x01411012E0, 41, "CDlgHPCMakeupEyelash");
	SetCnet(0x0141101430, 2, "CDlgHPCMakeupEyelash");
	SetCnet(0x0141188278, 43, "CDlgHPCMakeupBrowTextures");
	SetCnet(0x0141100EA8, 41, "CDlgHPCMakeupBrow");
	SetCnet(0x0141100FF8, 2, "CDlgHPCMakeupBrow");
	SetCnet(0x0141187E58, 43, "CDlgHPCMakeupBlusherTextures");
	SetCnet(0x01411015D0, 41, "CDlgHPCMakeupBlusher");
	SetCnet(0x0141101720, 2, "CDlgHPCMakeupBlusher");
	SetCnet(0x0141100B80, 41, "CDlgHPCGenderName");
	SetCnet(0x01411003B0, 41, "CDlgHPCExtraFunction");
	SetCnet(0x0141100CD0, 41, "CDlgHPCConfirm");
	SetCnet(0x01410EA660, 41, "CDlgGuradianBeastWinReward");
	SetCnet(0x01410EA510, 41, "CDlgGuradianBeastScoreReward");
	SetCnet(0x01410E9430, 41, "CDlgGuradianBeastHatch");
	SetCnet(0x01410F1E38, 41, "CDlgGuildpowerhelpsub08");
	SetCnet(0x01410F1C28, 41, "CDlgGuildpowerhelpsub07");
	SetCnet(0x01410F1A18, 41, "CDlgGuildpowerhelpsub06");
	SetCnet(0x01410F1808, 41, "CDlgGuildpowerhelpsub0505");
	SetCnet(0x01410F15F8, 41, "CDlgGuildpowerhelpsub0504");
	SetCnet(0x01410F13E8, 41, "CDlgGuildpowerhelpsub0503");
	SetCnet(0x01410F11C0, 41, "CDlgGuildpowerhelpsub0502");
	SetCnet(0x01410F0FB0, 41, "CDlgGuildpowerhelpsub0501");
	SetCnet(0x01410F0DA0, 41, "CDlgGuildpowerhelpsub05");
	SetCnet(0x01410F0B90, 41, "CDlgGuildpowerhelpsub04");
	SetCnet(0x01410F0978, 41, "CDlgGuildpowerhelpsub03");
	SetCnet(0x01410F0740, 41, "CDlgGuildpowerhelpsub0204");
	SetCnet(0x01410F0530, 41, "CDlgGuildpowerhelpsub0203");
	SetCnet(0x01410F0318, 41, "CDlgGuildpowerhelpsub0202");
	SetCnet(0x01410F0108, 41, "CDlgGuildpowerhelpsub0201");
	SetCnet(0x01410EFEF0, 41, "CDlgGuildpowerhelpsub02");
	SetCnet(0x01410EFC70, 41, "CDlgGuildpowerhelpsub01");
	SetCnet(0x01410EFA10, 41, "CDlgGuildpowerhelpMain");
	SetCnet(0x01410F31F0, 41, "CDlgGuildpowerMain");
	SetCnet(0x01410EF7C8, 41, "CDlgGuildpower6");
	SetCnet(0x01410F2F10, 41, "CDlgGuildpower5");
	SetCnet(0x01410F2C78, 41, "CDlgGuildpower4");
	SetCnet(0x01410F2A58, 41, "CDlgGuildpower3");
	SetCnet(0x01410F2670, 41, "CDlgGuildpower2");
	SetCnet(0x01410F2318, 41, "CDlgGuildpower1");
	SetCnet(0x01410F2088, 41, "CDlgGuildRecord");
	SetCnet(0x01410EF580, 41, "CDlgGuildMapTravel");
	SetCnet(0x01410EF338, 52, "CDlgGuildMapSubBase");
	SetCnet(0x01410EF078, 52, "CDlgGuildMapSub4");
	SetCnet(0x01410EEEA8, 52, "CDlgGuildMapSub2");
	SetCnet(0x01410EECD8, 52, "CDlgGuildMapSub1");
	SetCnet(0x01410EEAC0, 41, "CDlgGuildMapStatus");
	SetCnet(0x01410EE6B0, 52, "CDlgGuildMapBase");
	SetCnet(0x01410EE398, 52, "CDlgGuildMap");
	SetCnet(0x01410EDED0, 41, "CDlgGuildMan");
	SetCnet(0x01410ED9D8, 41, "CDlgGuildDiplomacyMan");
	SetCnet(0x01410ED638, 41, "CDlgGuildDiplomacyApply");
	SetCnet(0x01410ED370, 41, "CDlgGuildCreate");
	SetCnet(0x01410ED1B0, 41, "CDlgGuildBattleStatistic");
	SetCnet(0x01410ECF00, 41, "CDlgGuildBattleInvite");
	SetCnet(0x01410ECCB0, 41, "CDlgGuildBattleHistorySubList");
	SetCnet(0x01410ECAC0, 41, "CDlgGuildBattleHistorySub");
	SetCnet(0x01410EC708, 41, "CDlgGuildBattleHistoryData");
	SetCnet(0x01410EC2B0, 41, "CDlgGuildBattleHistory");
	SetCnet(0x01410EBDE0, 41, "CDlgGuildBattleDeclare");
	SetCnet(0x01410EB530, 41, "CDlgGuildBattleAlliance");
	SetCnet(0x01410EB2E0, 41, "CDlgGuildBattleAcceptWord");
	SetCnet(0x01410EB090, 41, "CDlgGuildBattleAcceptSubList");
	SetCnet(0x01410EAE70, 41, "CDlgGuildBattleAcceptSub");
	SetCnet(0x01410EAB98, 41, "CDlgGuildBattleAccept");
	SetCnet(0x01410EAA20, 41, "CDlgGuardianbeastRank");
	SetCnet(0x01410EA8D0, 41, "CDlgGuardianBeastWorkSelect");
	SetCnet(0x01410E9580, 41, "CDlgGuardianBeastRecharge");
	SetCnet(0x01410E9D58, 41, "CDlgGuardianBeastMain");
	SetCnet(0x01410E8E58, 41, "CDlgGuardianBeastFightSetting");
	SetCnet(0x01410E88D8, 41, "CDlgGuardianBeastFightInfo");
	SetCnet(0x01410E8788, 41, "CDlgGuardianBeastFight");
	SetCnet(0x01410E7D48, 41, "CDlgGuardianBeastBag");
	SetCnet(0x01410E78E8, 41, "CDlgGuardianBeastArrangeWork");
	SetCnet(0x01410E6DA0, 41, "CDlgGrowthTargetSubList");
	SetCnet(0x01410E6EF0, 44, "CDlgGrowthTargetSub2");
	SetCnet(0x01410E6C50, 41, "CDlgGrowthTargetSub");
	SetCnet(0x01410E6B00, 41, "CDlgGrowthTarget");
	SetCnet(0x01410E72F8, 41, "CDlgGrowthComplete");
	SetCnet(0x01410E71A8, 41, "CDlgGrowthAward");
	SetCnet(0x01410E63E8, 43, "CDlgGraduates");
	SetCnet(0x01410E6070, 41, "CDlgGoldTrade");
	SetCnet(0x01410E5E20, 41, "CDlgGoldPassword");
	SetCnet(0x01410E5BA0, 41, "CDlgGoldInquire");
	SetCnet(0x01410E5920, 41, "CDlgGoldAccount");
	SetCnet(0x0141184578, 41, "CDlgGodEvilConvert");
	SetCnet(0x01410E20C8, 41, "CDlgGivingFor");
	SetCnet(0x01410E1D18, 41, "CDlgGiftCard");
	SetCnet(0x0141186680, 42, "CDlgGfxStars");
	SetCnet(0x01410E17D8, 42, "CDlgGeneralCardProduce");
	SetCnet(0x01410E08A0, 41, "CDlgGeneralCardBuySetting");
	SetCnet(0x01410E0B58, 41, "CDlgGeneralCardBuyActive");
	SetCnet(0x01410E09F0, 41, "CDlgGeneralCardBuy");
	SetCnet(0x01410E0B40, 2, "CDlgGeneralCardBuy");
	SetCnet(0x01410DFF78, 41, "CDlgGeneralCard");
	SetCnet(0x01410E1A18, 41, "CDlgGenCardRespawn");
	SetCnet(0x01410E1518, 41, "CDlgGenCardExchange");
	SetCnet(0x01410E1108, 42, "CDlgGenCardCollection");
	SetCnet(0x01410DF9A0, 41, "CDlgGatherMine");
	SetCnet(0x01410E5458, 41, "CDlgGMViewWarTeamMain");
	SetCnet(0x01410E5230, 41, "CDlgGMViewWarMate");
	SetCnet(0x01410E4F98, 41, "CDlgGMViewWarMain");
	SetCnet(0x01410E4D48, 41, "CDlgGMViewWarChoose");
	SetCnet(0x01410E5690, 41, "CDlgGMViewTeamPoint");
	SetCnet(0x01410E4AC0, 41, "CDlgGMStatement");
	SetCnet(0x01410E4938, 41, "CDlgGMStartWar");
	SetCnet(0x0141184428, 41, "CDlgGMQueryItemSub");
	SetCnet(0x01410E4698, 43, "CDlgGMQueryItem");
	SetCnet(0x01410E4218, 41, "CDlgGMPrepareRoom");
	SetCnet(0x01410E3B68, 41, "CDlgGMParam");
	SetCnet(0x01410E3900, 41, "CDlgGMMessage");
	SetCnet(0x01410E3748, 41, "CDlgGMFinishMsg");
	SetCnet(0x01410C7308, 41, "CDlgGMDelMsgReason");
	SetCnet(0x01410E33B0, 41, "CDlgGMCreateWar");
	SetCnet(0x01410E2FC8, 41, "CDlgGMCountTime");
	SetCnet(0x01410E2B48, 41, "CDlgGMConsoleForbid");
	SetCnet(0x01410E2610, 41, "CDlgGMConsole");
	SetCnet(0x01410DF750, 46, "CDlgFullScreenWithPlayer");
	SetCnet(0x01410DF5C0, 41, "CDlgFullScreenVideo");
	SetCnet(0x01411893F8, 46, "CDlgFullScreenHostForTask");
	SetCnet(0x014112B3A8, 41, "CDlgFullScreenEffectShow");
	SetCnet(0x01410DF3D0, 42, "CDlgFullScreenBase");
	SetCnet(0x01410DF258, 41, "CDlgFriendRequest");
	SetCnet(0x01410DF0B8, 41, "CDlgFriendOptionNormal");
	SetCnet(0x01411842D8, 41, "CDlgFriendOptionName");
	SetCnet(0x01410DED08, 41, "CDlgFriendOptionGroup");
	SetCnet(0x01410DEB18, 41, "CDlgFriendListBase");
	SetCnet(0x01410DE8B0, 41, "CDlgFriendList");
	SetCnet(0x01410DE5A0, 41, "CDlgFriendHistory");
	SetCnet(0x01410DE3B8, 41, "CDlgFriendGroup");
	SetCnet(0x01410DE1D0, 41, "CDlgFriendEnemyList");
	SetCnet(0x01410DDE68, 41, "CDlgFriendColor");
	SetCnet(0x01410DDCA0, 41, "CDlgFriendChat");
	SetCnet(0x01410DD9F0, 41, "CDlgFreshManQuestionTips");
	SetCnet(0x01410DD7A0, 41, "CDlgFreshManQuestion");
	SetCnet(0x01410DD510, 41, "CDlgFortressWarList");
	SetCnet(0x01410DD278, 41, "CDlgFortressWar");
	SetCnet(0x01410DCF48, 41, "CDlgFortressStatus");
	SetCnet(0x01410DCD48, 41, "CDlgFortressMini");
	SetCnet(0x01410DCB40, 41, "CDlgFortressMaterial");
	SetCnet(0x01410DC758, 41, "CDlgFortressInfo");
	SetCnet(0x01410DC408, 41, "CDlgFortressExchange");
	SetCnet(0x01410DC200, 41, "CDlgFortressContrib");
	SetCnet(0x01410DC008, 41, "CDlgFortressBuildSubList");
	SetCnet(0x01410DBB50, 41, "CDlgFortressBuildSub");
	SetCnet(0x01410DB7C8, 41, "CDlgFortressBuildHelp");
	SetCnet(0x01410DB5E0, 41, "CDlgFortressBuild");
	SetCnet(0x01410DB3A8, 42, "CDlgForceNPC");
	SetCnet(0x01410DB0F0, 41, "CDlgForceActivityIcon");
	SetCnet(0x01410DAF20, 41, "CDlgForceActivity");
	SetCnet(0x01410DAC28, 41, "CDlgForce");
	SetCnet(0x01410DA8B0, 41, "CDlgFlySwordImprove");
	SetCnet(0x01410A0310, 41, "CDlgFlyPetSubBase");
	SetCnet(0x01410DA5F0, 41, "CDlgFixPosTransmit");
	SetCnet(0x01410DA380, 41, "CDlgFittingRoom");
	SetCnet(0x01410DA0F8, 41, "CDlgFirstRechargeGiftMain");
	SetCnet(0x01410D9FA8, 41, "CDlgFirstRechargeGiftEntry");
	SetCnet(0x01410D9CC8, 41, "CDlgFireworks2");
	SetCnet(0x01410D9A40, 42, "CDlgFingerGuessing");
	SetCnet(0x01410D97D0, 41, "CDlgFindServer");
	SetCnet(0x01410D95E8, 41, "CDlgFindPlayer");
	SetCnet(0x01410D93E0, 41, "CDlgFashionSplit");
	SetCnet(0x01410D9270, 3, "CDlgFashionShopItemStatusGetter");
	SetCnet(0x01410D91B0, 3, "CDlgFashionShopItemPriceCalculator");
	SetCnet(0x01410D92D0, 3, "CDlgFashionShopItemHintCalculator");
	SetCnet(0x01410D9290, 3, "CDlgFashionShopItemGiftChecker");
	SetCnet(0x01410D92B0, 3, "CDlgFashionShopItemFlashSaleChecker");
	SetCnet(0x01410D8C20, 3, "CDlgFashionShopItemFitter");
	SetCnet(0x01410D9250, 3, "CDlgFashionShopItemDiscountChecker");
	SetCnet(0x01410D91E0, 3, "CDlgFashionShopItemAddToShopCart");
	SetCnet(0x01410D8F80, 41, "CDlgFashionShopItem");
	SetCnet(0x01410D87E0, 41, "CDlgFashionShop");
	SetCnet(0x01410D8930, 4, "CDlgFashionShop");
	SetCnet(0x01410D8958, 4, "CDlgFashionShop");
	SetCnet(0x01410D62B8, 41, "CDlgFactionshareDiyList");
	SetCnet(0x01410D8468, 41, "CDlgFactionTargetSubList");
	SetCnet(0x01410D8160, 41, "CDlgFactionTargetSubDia");
	SetCnet(0x01410D7DD8, 41, "CDlgFactionTarget");
	SetCnet(0x01410D7F78, 41, "CDlgFactionTargeFinish");
	SetCnet(0x01410D7BF0, 41, "CDlgFactionTalentTree");
	SetCnet(0x01410D41F0, 42, "CDlgFactionStorageHis");
	SetCnet(0x01410D78F8, 41, "CDlgFactionStorage");
	SetCnet(0x01410D7600, 41, "CDlgFactionShopConfirm");
	SetCnet(0x01410D73E0, 41, "CDlgFactionShop");
	SetCnet(0x01410D6F80, 41, "CDlgFactionShareTeamDIY");
	SetCnet(0x01410D6CE0, 41, "CDlgFactionShareSetting");
	SetCnet(0x01410D6818, 41, "CDlgFactionShareMaster");
	SetCnet(0x01410D6E30, 41, "CDlgFactionShareJob");
	SetCnet(0x0141186BC8, 41, "CDlgFactionRight1");
	SetCnet(0x01410D5EC8, 41, "CDlgFactionRepareRecharge");
	SetCnet(0x0141121678, 7, "CDlgFactionRenamePolicy");
	SetCnet(0x01410D3380, 41, "CDlgFactionRecruitSendApply");
	SetCnet(0x01410D5C68, 41, "CDlgFactionRecruitApply");
	SetCnet(0x01410D5748, 41, "CDlgFactionRecruit");
	SetCnet(0x01410D4E28, 41, "CDlgFactionPetMain");
	SetCnet(0x01410D4AD0, 41, "CDlgFactionPetGuess");
	SetCnet(0x01410D4838, 41, "CDlgFactionPetFeed");
	SetCnet(0x01410D5460, 41, "CDlgFactionPVPStatus");
	SetCnet(0x01410D55B0, 4, "CDlgFactionPVPStatus");
	SetCnet(0x01410D5118, 41, "CDlgFactionPVPRank");
	SetCnet(0x01410D5268, 4, "CDlgFactionPVPRank");
	SetCnet(0x0141104468, 41, "CDlgFactionInputNO");
	SetCnet(0x01410D4098, 42, "CDlgFactionHistoryBase");
	SetCnet(0x01410D3A98, 41, "CDlgFactionHelpBase");
	SetCnet(0x0141186A78, 41, "CDlgFactionFarmHarvest");
	SetCnet(0x01410D3780, 41, "CDlgFactionFarm");
	SetCnet(0x0141186928, 41, "CDlgFactionDivideMem");
	SetCnet(0x01410D4348, 42, "CDlgFactionDevideHis");
	SetCnet(0x01410D3078, 41, "CDlgFactionBoard");
	SetCnet(0x01410D2A68, 41, "CDlgFactionBase");
	SetCnet(0x01410D2890, 41, "CDlgFactionAwardShow");
	SetCnet(0x01410D25A8, 41, "CDlgFactionApplyPlayer");
	SetCnet(0x01410D2010, 43, "CDlgFaceName");
	SetCnet(0x01410D1E38, 41, "CDlgFaceLift");
	SetCnet(0x01410D1B00, 50, "CDlgExplorer");
	SetCnet(0x01410D1C98, 1, "CDlgExplorer");
	SetCnet(0x0141184188, 41, "CDlgExp");
	SetCnet(0x01410D1568, 41, "CDlgExit");
	SetCnet(0x01410D1338, 41, "CDlgExclusiveAward");
	SetCnet(0x01410D1038, 41, "CDlgEquipUpEnsure");
	SetCnet(0x01410D0918, 47, "CDlgEquipUp");
	SetCnet(0x01410D0590, 41, "CDlgEquipUndestroy");
	SetCnet(0x01410D0278, 41, "CDlgEquipSoulTransfer");
	SetCnet(0x01410CFE98, 41, "CDlgEquipSoulSwallow");
	SetCnet(0x01410CF9C8, 41, "CDlgEquipSoulSet");
	SetCnet(0x01410CF790, 41, "CDlgEquipSoulResolve");
	SetCnet(0x01410CF398, 41, "CDlgEquipSoulRefresh");
	SetCnet(0x01410CED80, 41, "CDlgEquipSoulDetect");
	SetCnet(0x01410CEA08, 41, "CDlgEquipSoulBase");
	SetCnet(0x01410CE780, 41, "CDlgEquipSlotNew");
	SetCnet(0x01410CE8D0, 2, "CDlgEquipSlotNew");
	SetCnet(0x01410CE4A0, 41, "CDlgEquipSlot");
	SetCnet(0x01410CE078, 44, "CDlgEquipRefine");
	SetCnet(0x01410CE1E0, 7, "CDlgEquipRefine");
	SetCnet(0x01410CDC40, 41, "CDlgEquipMark");
	SetCnet(0x01410CD910, 41, "CDlgEquipDye");
	SetCnet(0x01410CD620, 41, "CDlgEquipDestroy");
	SetCnet(0x01410CD318, 41, "CDlgEquipBind");
	SetCnet(0x01410CCC88, 41, "CDlgEngravePreview");
	SetCnet(0x01410CC7C0, 44, "CDlgEngrave");
	SetCnet(0x01410CC430, 41, "CDlgEnemyOptionFunc");
	SetCnet(0x01410C96A8, 41, "CDlgEasyProduce");
	SetCnet(0x01410C93D8, 41, "CDlgEarthBagRank");
	SetCnet(0x01410CD018, 41, "CDlgEPEquip");
	SetCnet(0x01410CC0D0, 41, "CDlgELFXiDian");
	SetCnet(0x01410CBDC8, 41, "CDlgELFTransaction");
	SetCnet(0x01410CBB70, 41, "CDlgELFToPill");
	SetCnet(0x01410CB900, 41, "CDlgELFSkillTree");
	SetCnet(0x01410CB6A8, 41, "CDlgELFRetrain");
	SetCnet(0x01410CB348, 41, "CDlgELFRefineTrans");
	SetCnet(0x01410CB028, 41, "CDlgELFRefine");
	SetCnet(0x01410CAB80, 41, "CDlgELFProp");
	SetCnet(0x01410CA750, 41, "CDlgELFLearn");
	SetCnet(0x01410CA2C0, 41, "CDlgELFInExp");
	SetCnet(0x01410CA008, 41, "CDlgELFGeniusReset");
	SetCnet(0x01410C9D30, 41, "CDlgELFGenius");
	SetCnet(0x01410C9A38, 41, "CDlgELFEquipRemove");
	SetCnet(0x0141155390, 2, "CDlgDynamicControl::ControlCommand");
	SetCnet(0x01410AFF80, 41, "CDlgDynamicControl");
	SetCnet(0x01410C9028, 41, "CDlgDriftBottleMsg");
	SetCnet(0x01410C8ED8, 41, "CDlgDriftBottleHistory");
	SetCnet(0x01410C8128, 42, "CDlgDragDrop");
	SetCnet(0x01410C7EF0, 41, "CDlgDownloadSpeed");
	SetCnet(0x01410C7D48, 41, "CDlgDoubleExpS");
	SetCnet(0x01410C7B68, 41, "CDlgDoubleExp");
	SetCnet(0x01410C79C0, 41, "CDlgDomainCondition");
	SetCnet(0x01410C7708, 41, "CDlgDivinationDetail");
	SetCnet(0x01410C75B8, 41, "CDlgDivination");
	SetCnet(0x01410C7148, 41, "CDlgDebugCmd");
	SetCnet(0x01410C6D78, 41, "CDlgDamageRep");
	SetCnet(0x01410C6AE0, 41, "CDlgDallianceState");
	SetCnet(0x01410C6660, 41, "CDlgCutoffStudent");
	SetCnet(0x01410C63B0, 43, "CDlgCustomizeStature");
	SetCnet(0x01410C60C8, 43, "CDlgCustomizePre");
	SetCnet(0x01410C5CA8, 43, "CDlgCustomizePaint");
	SetCnet(0x01410C5548, 43, "CDlgCustomizeNoseMouth2");
	SetCnet(0x01410C53E8, 43, "CDlgCustomizeNoseMouth");
	SetCnet(0x01410C4ED0, 43, "CDlgCustomizeHair");
	SetCnet(0x01410C46B0, 43, "CDlgCustomizeFace2");
	SetCnet(0x01410C4550, 43, "CDlgCustomizeFace");
	SetCnet(0x01410C3C18, 43, "CDlgCustomizeEye2");
	SetCnet(0x01410C3AB8, 43, "CDlgCustomizeEye");
	SetCnet(0x01410C3690, 43, "CDlgCustomizeBase");
	SetCnet(0x01410C34C0, 43, "CDlgCustomize");
	SetCnet(0x01410C32E8, 41, "CDlgCrossServerCryMsg");
	SetCnet(0x01410C2DF0, 42, "CDlgCreateRace2020");
	SetCnet(0x01411BE480, 41, "CDlgCreateGenderName");
	SetCnet(0x01410C2F48, 42, "CDlgCreate2020");
	SetCnet(0x01410C27C0, 42, "CDlgCoupon");
	SetCnet(0x0141187108, 41, "CDlgCoupleIntroduction");
	SetCnet(0x01410C2538, 42, "CDlgCoupleAward");
	SetCnet(0x01410C2120, 41, "CDlgCouple");
	SetCnet(0x01410C1D20, 41, "CDlgCountryWarMap");
	SetCnet(0x01410C1930, 41, "CDlgCountryScore");
	SetCnet(0x01410C1738, 41, "CDlgCountryReward");
	SetCnet(0x01410C0D68, 41, "CDlgCountryMove");
	SetCnet(0x01410C1530, 41, "CDlgCountryMapSub");
	SetCnet(0x01410C0C18, 41, "CDlgCountryMap");
	SetCnet(0x01410C08C8, 41, "CDlgCountDown");
	SetCnet(0x01410C03A0, 41, "CDlgConsoleVariableSubListItem");
	SetCnet(0x01410C0740, 41, "CDlgConsoleVariableSubList");
	SetCnet(0x01410C0090, 41, "CDlgConsoleVariable");
	SetCnet(0x01410BFED0, 41, "CDlgConsole");
	SetCnet(0x01410BFCD8, 41, "CDlgCongregate");
	SetCnet(0x01410BFA18, 41, "CDlgComplexTitle");
	SetCnet(0x01410BEAD8, 41, "CDlgCommerateBookModel");
	SetCnet(0x01410BE980, 42, "CDlgCommerateBookMain");
	SetCnet(0x01410BE548, 42, "CDlgCommerateBookCover");
	SetCnet(0x01410BE1B8, 41, "CDlgCommerateBookContentsSub");
	SetCnet(0x01410BE068, 41, "CDlgCommerateBookContents");
	SetCnet(0x01410BEC28, 41, "CDlgCommerateBookBtn");
	SetCnet(0x01410BDCC8, 41, "CDlgComboShortCutBar");
	SetCnet(0x01410BDE18, 4, "CDlgComboShortCutBar");
	SetCnet(0x01410A2F48, 41, "CDlgCollectionTotalButton");
	SetCnet(0x01410A2D60, 41, "CDlgCollectionTotalAward");
	SetCnet(0x01410A2A10, 41, "CDlgCollectionSeriesAward");
	SetCnet(0x01410BDA00, 41, "CDlgCollectionSearch");
	SetCnet(0x01410BD7F8, 41, "CDlgCollectionMessageBox");
	SetCnet(0x01410BD5F8, 41, "CDlgCollectionMessage");
	SetCnet(0x01410BD3C8, 41, "CDlgCollectionMain");
	SetCnet(0x01410BD1B0, 41, "CDlgCollectionListBox");
	SetCnet(0x01410A26A0, 41, "CDlgCollectionCoverParts");
	SetCnet(0x01410BCEE8, 41, "CDlgCollectionCover");
	SetCnet(0x01410BCCC8, 41, "CDlgCollectionClothesSubAll");
	SetCnet(0x01410BCA18, 41, "CDlgCollectionClothesSub");
	SetCnet(0x01410BC828, 42, "CDlgCollectionClothesPalette");
	SetCnet(0x01410BC618, 41, "CDlgCollectionClothesMain");
	SetCnet(0x01410BC450, 41, "CDlgCollectionClothesInv");
	SetCnet(0x01410BC058, 41, "CDlgCollectionClothesDye");
	SetCnet(0x01410BBC90, 41, "CDlgCollectionClothesDetail");
	SetCnet(0x01410BBA48, 41, "CDlgCollectionClothesCtrl");
	SetCnet(0x01410A23A8, 41, "CDlgCollectionCarnivalMain");
	SetCnet(0x01410BB608, 41, "CDlgCollectionBg");
	SetCnet(0x01410BB320, 41, "CDlgCollectionAwardShow");
	SetCnet(0x01410A21C8, 41, "CDlgCollectionAwardHint");
	SetCnet(0x01410BB118, 41, "CDlgChronicleSub");
	SetCnet(0x01410BAED0, 41, "CDlgChronicle");
	SetCnet(0x01410BA630, 41, "CDlgChat");
	SetCnet(0x0141185AB0, 41, "CDlgChariotScore");
	SetCnet(0x01411856C0, 41, "CDlgChariotRevive");
	SetCnet(0x0141185960, 41, "CDlgChariotRankList");
	SetCnet(0x0141185810, 41, "CDlgChariotOpt");
	SetCnet(0x0141185C00, 41, "CDlgChariotMultiKill");
	SetCnet(0x01410B9BB8, 41, "CDlgChariotInfo");
	SetCnet(0x01410B9A68, 41, "CDlgChariotEnter");
	SetCnet(0x0141185D50, 41, "CDlgChariotAmount");
	SetCnet(0x0141137850, 41, "CDlgCharacterSimulator");
	SetCnet(0x01410B8D78, 41, "CDlgCharacter");
	SetCnet(0x01410B8B90, 41, "CDlgChannelPW");
	SetCnet(0x01410B89A8, 41, "CDlgChannelOption");
	SetCnet(0x01410B86D0, 41, "CDlgChannelJoin");
	SetCnet(0x01410B83D8, 41, "CDlgChannelCreate");
	SetCnet(0x01410B8038, 41, "CDlgChannelChat");
	SetCnet(0x01410B79F8, 41, "CDlgChangeSkirt");
	SetCnet(0x0141133730, 7, "CDlgChangeGenderPolicy");
	SetCnet(0x0141133770, 5, "CDlgChangeGenderPolicy");
	SetCnet(0x01410B7688, 41, "CDlgCarrierUpSimple");
	SetCnet(0x01410B7490, 41, "CDlgCarrierUp");
	SetCnet(0x01410B70F0, 41, "CDlgCarrierOpSimple");
	SetCnet(0x01410B7240, 41, "CDlgCarrierOp");
	SetCnet(0x01410C8D88, 41, "CDlgCaptureProgress");
	SetCnet(0x01410C8C38, 41, "CDlgCaptureDriftBottle");
	SetCnet(0x01410B6D28, 41, "CDlgCampTree");
	SetCnet(0x01410B6E78, 2, "CDlgCampTree");
	SetCnet(0x01410B6808, 3, "CDlgCampTokenTree::MovementAlongTreeNode");
	SetCnet(0x01410B6828, 43, "CDlgCampTokenTree");
	SetCnet(0x0141189148, 43, "CDlgCampTokenLevel");
	SetCnet(0x0141188FE8, 43, "CDlgCampTokenFrame");
	SetCnet(0x01410B6500, 43, "CDlgCampTokenCommon");
	SetCnet(0x01410B6660, 3, "CDlgCampToken::CECUpgradeTimer");
	SetCnet(0x01410B6680, 3, "CDlgCampToken::BezierDlgObjMovement");
	SetCnet(0x01410B66A0, 44, "CDlgCampToken");
	SetCnet(0x01410B5C08, 41, "CDlgCampStatistic");
	SetCnet(0x01410B5958, 41, "CDlgCampResult");
	SetCnet(0x01410B56E0, 41, "CDlgCampRank");
	SetCnet(0x01410B4A98, 41, "CDlgCampMain");
	SetCnet(0x0141188E98, 41, "CDlgCampLevelupSub");
	SetCnet(0x0141188D48, 41, "CDlgCampLevelup");
	SetCnet(0x01410B5090, 41, "CDlgCampKillRank");
	SetCnet(0x01410B51E0, 2, "CDlgCampKillRank");
	SetCnet(0x0141188AA8, 41, "CDlgCampJoinQuit");
	SetCnet(0x01410B4E30, 41, "CDlgCampHelpBase");
	SetCnet(0x0141188BF8, 41, "CDlgCampChange");
	SetCnet(0x01410B4610, 41, "CDlgCamera");
	SetCnet(0x01410C6868, 41, "CDlgCWindow");
	SetCnet(0x01410B41C0, 41, "CDlgBuyItemSubList");
	SetCnet(0x01410B4310, 41, "CDlgBuyItemSub");
	SetCnet(0x01410B4070, 41, "CDlgBuyItemSearch");
	SetCnet(0x01410B3B90, 41, "CDlgBuyConfirm");
	SetCnet(0x01410B3850, 41, "CDlgBuddyState");
	SetCnet(0x01410B2E28, 41, "CDlgBroadCast");
	SetCnet(0x01410B2A00, 41, "CDlgBossRushStart");
	SetCnet(0x01410B28B0, 41, "CDlgBossRushMain");
	SetCnet(0x01410B2B50, 41, "CDlgBossRushAward");
	SetCnet(0x01410B2318, 41, "CDlgBoothSet");
	SetCnet(0x01410B21B8, 43, "CDlgBoothSelf");
	SetCnet(0x0141183A10, 43, "CDlgBoothElse");
	SetCnet(0x01410B2058, 43, "CDlgBooth");
	SetCnet(0x0141186290, 41, "CDlgBlackScreen");
	SetCnet(0x01410B1A40, 42, "CDlgBlackList");
	SetCnet(0x01410B1708, 41, "CDlgBibleRefineTrans");
	SetCnet(0x01410B1428, 42, "CDlgBibleRefineSuccess");
	SetCnet(0x01410B1260, 42, "CDlgBibleRefineProgress");
	SetCnet(0x01410B1070, 41, "CDlgBibleRefinePreviewSub");
	SetCnet(0x01410B0EE0, 42, "CDlgBibleRefineFail");
	SetCnet(0x01410B0D20, 41, "CDlgBibleRefineBase");
	SetCnet(0x01410B0988, 41, "CDlgBibleRefine");
	SetCnet(0x01410B01A0, 41, "CDlgBattleRoyaleMap");
	SetCnet(0x01410AFAB8, 41, "CDlgBarrageSend");
	SetCnet(0x01411867D8, 41, "CDlgBarrageBtn");
	SetCnet(0x01410AF7D8, 6, "CDlgBarrage::BarrageItem");
	SetCnet(0x01410AF810, 41, "CDlgBarrage");
	SetCnet(0x01411838C0, 41, "CDlgBag");
	SetCnet(0x01410AF298, 41, "CDlgBackSelf");
	SetCnet(0x01410AEF78, 41, "CDlgBackOthers");
	SetCnet(0x01410AECC0, 41, "CDlgBackHelp");
	SetCnet(0x01410B34B0, 41, "CDlgBShop");
	SetCnet(0x01410B0438, 41, "CDlgBBS");
	SetCnet(0x01410AEAD0, 41, "CDlgAwardSubItem");
	SetCnet(0x01410AE838, 41, "CDlgAward");
	SetCnet(0x01410AE590, 41, "CDlgAutoTask");
	SetCnet(0x01410AE208, 41, "CDlgAutoPolicy");
	SetCnet(0x01410ADED0, 41, "CDlgAutoNewGuide");
	SetCnet(0x01410ADC30, 41, "CDlgAutoMove");
	SetCnet(0x01410AD840, 41, "CDlgAutoLock");
	SetCnet(0x01410AD260, 41, "CDlgAutoHelp");
	SetCnet(0x01410AD520, 41, "CDlgAutoHPMP");
	SetCnet(0x01410AD080, 42, "CDlgAutoCloseBase");
	SetCnet(0x01410ACE00, 47, "CDlgAuctionSellList");
	SetCnet(0x01410ACB08, 47, "CDlgAuctionList");
	SetCnet(0x01410AC700, 47, "CDlgAuctionBuyList");
	SetCnet(0x01410AC1C8, 47, "CDlgAuctionBase");
	SetCnet(0x01410ABE00, 41, "CDlgAstrolabeSwallow");
	SetCnet(0x01410ABB80, 41, "CDlgAstrolabeRandomAddOn");
	SetCnet(0x01410AB938, 41, "CDlgAstrolabeIncPointValue");
	SetCnet(0x01410AB510, 41, "CDlgAstrolabe");
	SetCnet(0x01410AB228, 41, "CDlgAskHelpToGM2");
	SetCnet(0x01410AAF10, 41, "CDlgAskHelpToGM");
	SetCnet(0x01410AAAA8, 41, "CDlgArrangeTeam");
	SetCnet(0x01410AA830, 41, "CDlgArenaTeamRankList");
	SetCnet(0x01410AA630, 41, "CDlgArenaTeamDetail");
	SetCnet(0x01410A8BB0, 41, "CDlgArenaSelfTeamInfo");
	SetCnet(0x01410AA480, 41, "CDlgArenaQuickTeamSubList");
	SetCnet(0x01410AA200, 41, "CDlgArenaQuickTeamSub");
	SetCnet(0x01410A9FE0, 41, "CDlgArenaQuickTeam");
	SetCnet(0x01410A9DB8, 41, "CDlgArenaPersonRankList");
	SetCnet(0x01410A9BA0, 41, "CDlgArenaOtherTeamInfo");
	SetCnet(0x01410A98E8, 41, "CDlgArenaOptionName");
	SetCnet(0x01410A96D8, 41, "CDlgArenaMyFakeTeamMate");
	SetCnet(0x01410A9408, 41, "CDlgArenaMyFakeTeamMain");
	SetCnet(0x01410A9120, 41, "CDlgArenaMatchingTag");
	SetCnet(0x01410A8ED0, 41, "CDlgArenaLeave");
	SetCnet(0x01410A8750, 41, "CDlgArenaInputTeamName");
	SetCnet(0x01410A83F0, 41, "CDlgArenaEnterTag");
	SetCnet(0x01410A8130, 41, "CDlgArenaEnemyFakeTeamMate");
	SetCnet(0x01410A7F28, 41, "CDlgArenaChooseMatch");
	SetCnet(0x01410A7B58, 41, "CDlgArenaBattleResult");
	SetCnet(0x01410A77D8, 41, "CDlgArenaBattlePoint");
	SetCnet(0x01410A7580, 41, "CDlgArenaBattleGFXCountDown");
	SetCnet(0x01410A73F8, 41, "CDlgApprenticingLeaveWords");
	SetCnet(0x01410A71A8, 45, "CDlgApprenticingApplyList");
	SetCnet(0x01410A6EB8, 45, "CDlgApprenticing");
	SetCnet(0x01410A0700, 41, "CDlgAppreciateViewPetSub");
	SetCnet(0x01410A1F60, 41, "CDlgAppreciateViewPetInfo");
	SetCnet(0x0141183FF0, 50, "CDlgAppreciateSeriseObjViewPet");
	SetCnet(0x0141183E58, 50, "CDlgAppreciateSeriseObjRidePet");
	SetCnet(0x0141183CC0, 50, "CDlgAppreciateSeriseObjFly");
	SetCnet(0x014109FFA8, 50, "CDlgAppreciateSeriseObj");
	SetCnet(0x01410A05B0, 41, "CDlgAppreciateRidePetSub");
	SetCnet(0x01410A1C88, 41, "CDlgAppreciateRidePetInfo");
	SetCnet(0x01410A19F8, 50, "CDlgAppreciatePetPlaneSearch");
	SetCnet(0x01410A1790, 41, "CDlgAppreciatePetList");
	SetCnet(0x01410A1448, 41, "CDlgAppreciateMsgFirst");
	SetCnet(0x01410A0460, 41, "CDlgAppreciateFlySub");
	SetCnet(0x01410A0DB0, 41, "CDlgAppreciateFlyInfo");
	SetCnet(0x01410A0A18, 41, "CDlgAppreciateFlyDiff");
	SetCnet(0x01410A1178, 41, "CDlgAppreciateFlyBagList");
	SetCnet(0x014109FCB8, 41, "CDlgAppreciateFlyAndPetMain");
	SetCnet(0x014109FA48, 41, "CDlgAnniversary2020TaskEvent");
	SetCnet(0x014109F798, 41, "CDlgAnniversary2020SigninEvent");
	SetCnet(0x014109F500, 41, "CDlgAnniversary2020RewardEvent");
	SetCnet(0x014109F298, 41, "CDlgAnniversary2020ProgGfx");
	SetCnet(0x014109F068, 41, "CDlgAnniversary2020Entrance");
	SetCnet(0x014109EBF0, 41, "CDlgAnniversary2020");
	SetCnet(0x014109DC20, 41, "CDlgAnimationTalk");
	SetCnet(0x014109D9E0, 41, "CDlgAnimationEsc");
	SetCnet(0x01410A6BD8, 39, "CDlgAgreement");
	SetCnet(0x01410A6928, 41, "CDlgAdvertisement");
	SetCnet(0x0141128268, 44, "CDlgActivityRewardItem");
	SetCnet(0x01410A58D0, 44, "CDlgActivityItem");
	SetCnet(0x01410A6528, 41, "CDlgActivity");
	SetCnet(0x014109E458, 41, "CDlgActiveTaskIntroListItem");
	SetCnet(0x014109E298, 41, "CDlgActiveTaskIntroList");
	SetCnet(0x014109DFA0, 41, "CDlgActiveTaskIntro");
	SetCnet(0x014109D748, 41, "CDlgActiveStay");
	SetCnet(0x014109D468, 41, "CDlgActiveMain");
	SetCnet(0x014109D138, 41, "CDlgActiveListItem");
	SetCnet(0x014109CDD8, 41, "CDlgActiveList");
	SetCnet(0x014109CB58, 41, "CDlgActive");
	SetCnet(0x01410A5B88, 41, "CDlgAcrossServerMatchRet");
	SetCnet(0x01410A5780, 41, "CDlgAcrossServerMatchMain");
	SetCnet(0x01410A5A38, 41, "CDlgAcrossServerMatch");
	SetCnet(0x01410A5CD8, 41, "CDlgAcrossServerInvite");
	SetCnet(0x01410A5E28, 41, "CDlgAcrossInviteResault");
	SetCnet(0x0141279F10, 1, "CDebugger");
	SetCnet(0x01410A3118, 1, "CCommonDataEventListener");
	SetCnet(0x01411EFDE0, 2, "CClosedArea");
	SetCnet(0x0141272570, 1, "CCharOutline");
	SetCnet(0x0141099320, 3, "CBrushProvider");
	SetCnet(0x014127EE78, 49, "CBaseVideoRenderer");
	SetCnet(0x014127F008, 15, "CBaseVideoRenderer");
	SetCnet(0x014127F088, 5, "CBaseVideoRenderer");
	SetCnet(0x014127F0B8, 9, "CBaseVideoRenderer");
	SetCnet(0x014127F108, 5, "CBaseVideoRenderer");
	SetCnet(0x014127EC58, 45, "CBaseRenderer");
	SetCnet(0x014127EDC8, 15, "CBaseRenderer");
	SetCnet(0x014127EE48, 5, "CBaseRenderer");
	SetCnet(0x01410D1AA0, 11, "CBSCallbackImpl");
	SetCnet(0x0141224988, 7, "CAsyncStream");
	SetCnet(0x014128B318, 10, "CAsyncReader");
	SetCnet(0x014128B370, 15, "CAsyncReader");
	SetCnet(0x014128B3F0, 5, "CAsyncReader");
	SetCnet(0x014128B178, 11, "CAsyncOutputPin");
	SetCnet(0x014128B1D8, 14, "CAsyncOutputPin");
	SetCnet(0x014128B250, 18, "CAsyncOutputPin");
	SetCnet(0x014128B2E8, 5, "CAsyncOutputPin");
	SetCnet(0x0141224A08, 10, "CAsyncFilter");
	SetCnet(0x0141224A60, 15, "CAsyncFilter");
	SetCnet(0x0141224AE0, 5, "CAsyncFilter");
	SetCnet(0x0141224B10, 5, "CAsyncFilter");
	SetCnet(0x014129A3A8, 7, "CAnmWeather");
	SetCnet(0x014129AA10, 3, "CAnmUI");
	SetCnet(0x014129AA30, 7, "CAnmUI");
	SetCnet(0x014129A550, 7, "CAnmTransparent");
	SetCnet(0x014129A850, 3, "CAnmSunMoon");
	SetCnet(0x014129A870, 7, "CAnmSunMoon");
	SetCnet(0x014129AAF0, 7, "CAnmSpeedControl");
	SetCnet(0x014129A650, 7, "CAnmSound");
	SetCnet(0x014129A790, 7, "CAnmScale");
	SetCnet(0x014129AB30, 7, "CAnmRotate");
	SetCnet(0x014129A1A0, 26, "CAnmPlayer");
	SetCnet(0x014129A3E8, 7, "CAnmPlaySound");
	SetCnet(0x014129AAB0, 7, "CAnmPauseGameSound");
	SetCnet(0x0141299FC0, 25, "CAnmObject");
	SetCnet(0x014129A428, 26, "CAnmNPC");
	SetCnet(0x014129A910, 7, "CAnmMove");
	SetCnet(0x014129A590, 7, "CAnmMotion");
	SetCnet(0x014129A9D0, 7, "CAnmLock2");
	SetCnet(0x014129A950, 7, "CAnmLock");
	SetCnet(0x014129A710, 7, "CAnmJump");
	SetCnet(0x014129A690, 7, "CAnmHook");
	SetCnet(0x014129A7D0, 7, "CAnmHideWorldAction");
	SetCnet(0x0141174F58, 28, "CAnmGame");
	SetCnet(0x014129A2D8, 25, "CAnmGFX");
	SetCnet(0x014129A990, 7, "CAnmFOV");
	SetCnet(0x014129A810, 7, "CAnmDisplayHide");
	SetCnet(0x014129A750, 7, "CAnmDispatch");
	SetCnet(0x014129A5D0, 7, "CAnmDialogue");
	SetCnet(0x014129A160, 7, "CAnmColorMap");
	SetCnet(0x014129ABB8, 7, "CAnmColorFilters");
	SetCnet(0x014129ABF8, 3, "CAnmColorFilters");
	SetCnet(0x014129A6D0, 7, "CAnmCameraOscillatory");
	SetCnet(0x014129A090, 25, "CAnmCamera");
	SetCnet(0x014129A8D0, 7, "CAnmBind");
	SetCnet(0x014129AA70, 7, "CAnmBezierMove2");
	SetCnet(0x014129A610, 7, "CAnmBezierMove");
	SetCnet(0x014129AB70, 8, "CAnmActionBlur");
	SetCnet(0x014129A510, 7, "CAnmAction");
	SetCnet(0x0141299F08, 17, "CAnimationManager");
	SetCnet(0x014110E8A0, 7, "CActivityReminder");
	SetCnet(0x0141179450, 1, "BroadCastItemsFilter");
	SetCnet(0x014124C0F0, 7, "BoneScaleChange");
	SetCnet(0x0141222510, 18, "BibleEssenceExtractor");
	SetCnet(0x01410E7A38, 45, "BeastItem");
	SetCnet(0x0141155AE0, 2, "AutoMoveCommand");
	SetCnet(0x014128C058, 10, "AutoMove::MOpenHeap");
	SetCnet(0x014128C000, 10, "AutoMove::MOpenArray");
	SetCnet(0x014128BFA8, 10, "AutoMove::MOpen");
	SetCnet(0x014128B8F8, 1, "AutoMove::CluExpandLimit");
	SetCnet(0x014128B908, 1, "AutoMove::CluExpandLimit");
	SetCnet(0x014128B780, 2, "AutoMove::CheckNeighborReachable");
	SetCnet(0x014128B768, 2, "AutoMove::CheckNeighborBase");
	SetCnet(0x014128B798, 2, "AutoMove::CheckNeighborAny");
	SetCnet(0x014128B8E8, 1, "AutoMove::CPfClu");
	SetCnet(0x01411AEFC0, 2, "AutoMove::CMoveAgent::BrushTest");
	SetCnet(0x014128BA10, 1, "AutoMove::CIslandList");
	SetCnet(0x014128BA00, 1, "AutoMove::CIsland");
	SetCnet(0x014128BC70, 1, "AutoMove::CGAStar");
	SetCnet(0x014128BAA8, 1, "AutoMove::CBlockImage<short>");
	SetCnet(0x014128BA98, 1, "AutoMove::CBitImage");
	SetCnet(0x014128B758, 1, "AutoMove::BrushTestWrapper");
	SetCnet(0x0141222478, 18, "AstrolabeEssenceExtractor");
	SetCnet(0x01410A88D0, 2, "ArenaCreateTeamMessageBoxHandler");
	SetCnet(0x01411C0A18, 1, "AppreciateSetGroup");
	SetCnet(0x01411C09D8, 7, "AppreciateSeriseViewPet");
	SetCnet(0x01411C0998, 7, "AppreciateSeriseRidePet");
	SetCnet(0x01411C0958, 7, "AppreciateSeriseFly");
	SetCnet(0x01411C0918, 7, "AppreciateSeriseBase");
	SetCnet(0x01411C07B8, 21, "AppreciateObjRidePet");
	SetCnet(0x01411C0708, 21, "AppreciateObjFly");
	SetCnet(0x01411C0868, 21, "AppreciateObjAppreciatePet");
	SetCnet(0x01411DB590, 3, "AppreciateLoaderModule");
	SetCnet(0x01411C0658, 21, "ApprecaiteBaseObj");
	SetCnet(0x01412596F8, 6, "ActivedState");
	SetCnet(0x014109D288, 2, "ActiveTaskTrigger");
	SetCnet(0x0141227210, 1, "AWScriptFile");
	SetCnet(0x0141227E50, 1, "AWIniFile");
	SetCnet(0x014109C9D0, 1, "AUI_ImageGrid");
	SetCnet(0x01412694C8, 33, "AUIWindowPicture");
	SetCnet(0x014126FCB8, 28, "AUIVerticalText");
	SetCnet(0x01412680F8, 28, "AUITreeView");
	SetCnet(0x0141240A58, 1, "AUITextureAtlas");
	SetCnet(0x014126A948, 3, "AUITextTagTextCache");
	SetCnet(0x014126A918, 5, "AUITextTagTable");
	SetCnet(0x014126A578, 5, "AUITextTagReturn");
	SetCnet(0x01412639D0, 5, "AUITextTagQuoteTA");
	SetCnet(0x0141263980, 3, "AUITextTagQuote::AUITextTagQuoteCache");
	SetCnet(0x01412639A0, 5, "AUITextTagQuote");
	SetCnet(0x014126A848, 7, "AUITextTagItemText");
	SetCnet(0x014126A788, 3, "AUITextTagItemImage::AUITextTagItemImageCache");
	SetCnet(0x014126A7A8, 7, "AUITextTagItemImage");
	SetCnet(0x014126A7E8, 3, "AUITextTagItemEmotion::AUITextTagItemEmotionCache");
	SetCnet(0x014126A808, 7, "AUITextTagItemEmotion");
	SetCnet(0x014126A888, 3, "AUITextTagItemBox::AUITextTagItemBoxCache");
	SetCnet(0x014126A8A8, 7, "AUITextTagItemBox");
	SetCnet(0x014126A748, 7, "AUITextTagItem");
	SetCnet(0x014126A8E8, 5, "AUITextTagFakReturn");
	SetCnet(0x014126A668, 5, "AUITextTagCtrlWordspace");
	SetCnet(0x014126A638, 5, "AUITextTagCtrlUnderlineX");
	SetCnet(0x014126A608, 5, "AUITextTagCtrlUnderline");
	SetCnet(0x014126A5D8, 5, "AUITextTagCtrlFont");
	SetCnet(0x014126A698, 5, "AUITextTagCtrlDefaultColor");
	SetCnet(0x014126A718, 5, "AUITextTagCtrlColor");
	SetCnet(0x014126A6C8, 3, "AUITextTagCtrlChannel::AUITextTagCtrlChannelCache");
	SetCnet(0x014126A6E8, 5, "AUITextTagCtrlChannel");
	SetCnet(0x014126A5A8, 5, "AUITextTagCtrl");
	SetCnet(0x0141263960, 3, "AUITextTagCache");
	SetCnet(0x0141263930, 4, "AUITextTag");
	SetCnet(0x0141263848, 28, "AUITextArea");
	SetCnet(0x014126F3C0, 27, "AUITemplateManager");
	SetCnet(0x014126F2A0, 35, "AUITemplate");
	SetCnet(0x0141261CF0, 29, "AUISubDialog");
	SetCnet(0x01412655D8, 28, "AUIStillImageButton");
	SetCnet(0x0141263230, 28, "AUISlider");
	SetCnet(0x01412703B8, 28, "AUIScrollNum");
	SetCnet(0x0141260C38, 28, "AUIScroll");
	SetCnet(0x0141265AA8, 28, "AUIRadioButton");
	SetCnet(0x0141261620, 28, "AUIProgress");
	SetCnet(0x0141270940, 28, "AUIPicture");
	SetCnet(0x014125D728, 28, "AUIObject");
	SetCnet(0x014126F7B0, 28, "AUIModelPicture");
	SetCnet(0x014125FC88, 26, "AUIManager");
	SetCnet(0x0141269AC8, 27, "AUILuaManager");
	SetCnet(0x0141261370, 35, "AUILuaDialog");
	SetCnet(0x01412646C8, 29, "AUIListBox");
	SetCnet(0x0141267C08, 28, "AUILabel");
	SetCnet(0x0141260610, 28, "AUIImagePicture");
	SetCnet(0x0141267190, 1, "AUIFrame");
	SetCnet(0x0141266018, 33, "AUIEditBox");
	SetCnet(0x014125DFC8, 34, "AUIDialog");
	SetCnet(0x014126F610, 30, "AUICustomize");
	SetCnet(0x0141262DF8, 29, "AUICtrlFolder");
	SetCnet(0x0141269098, 30, "AUIConsole");
	SetCnet(0x0141266B88, 28, "AUIComboBox");
	SetCnet(0x0141267090, 1, "AUIClockIcon");
	SetCnet(0x0141262858, 28, "AUICheckBox");
	SetCnet(0x014124BF28, 8, "AUDIOEVENT_INFO");
	SetCnet(0x014128C508, 1, "ATextTabFile");
	SetCnet(0x014121E5C0, 3, "ATaskTempl::TaskRecursiveChecker");
	SetCnet(0x0141221A00, 1, "ATaskTempl");
	SetCnet(0x014121B6B8, 6, "ATL::CRegObject");
	SetCnet(0x014121CB38, 4, "ATL::CComPolyObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C458, 10, "ATL::CComObject<CPWIESink>");
	SetCnet(0x014121C508, 23, "ATL::CComObject<CPWIEDocHostUIHandler>");
	SetCnet(0x014121C4B0, 10, "ATL::CComObject<CPWBackIESink>");
	SetCnet(0x014121C0A8, 8, "ATL::CComObject<ATL::CComEnum<IEnumUnknown,&__s_GUID const _GUID_00000100_0000_0000_c000_000000000046,IUnknown * __ptr64,ATL::_CopyInterface<IUnknown>,ATL::CComMultiThreadModel> >");
	SetCnet(0x014121C010, 4, "ATL::CComObject<ATL::CAxUIWindow>");
	SetCnet(0x014121C038, 9, "ATL::CComObject<ATL::CAxUIWindow>");
	SetCnet(0x014121BF68, 4, "ATL::CComObject<ATL::CAxFrameWindow>");
	SetCnet(0x014121BF90, 15, "ATL::CComObject<ATL::CAxFrameWindow>");
	SetCnet(0x014121B5C8, 10, "ATL::CComModule");
	SetCnet(0x014121C668, 5, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C698, 11, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C6F8, 9, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C748, 30, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C840, 10, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C898, 6, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C8D0, 6, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C908, 4, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C930, 8, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121C978, 18, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x014121CA10, 36, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x0141242640, 3, "AStatGroup");
	SetCnet(0x014124A2E8, 3, "AStatCounter");
	SetCnet(0x014124A2A8, 3, "AStatBase");
	SetCnet(0x014124A2C8, 3, "AStat<unsigned __int64>");
	SetCnet(0x01410F3B78, 1, "AStack<void * __ptr64,void * __ptr64>");
	SetCnet(0x01412766D8, 1, "AStack<FWFormulaElement * __ptr64,FWFormulaElement * __ptr64>");
	SetCnet(0x0141156460, 1, "AStack<CECScriptConditionParser::CElement * __ptr64,CECScriptConditionParser::CElement * __ptr64>");
	SetCnet(0x014123DC28, 1, "AStack<A3DRenderTargetMan::RT_SURFS,A3DRenderTargetMan::RT_SURFS & __ptr64>");
	SetCnet(0x01412503C0, 4, "ASkinModelBreakReport");
	SetCnet(0x0141227328, 1, "AScriptFile");
	SetCnet(0x014128C2E0, 1, "ARandomGen");
	SetCnet(0x01410F3D58, 1, "APtrStack<_AUITREEVIEW_ITEM * __ptr64>");
	SetCnet(0x01411B01C0, 1, "APtrStack<CECInputFilter * __ptr64>");
	SetCnet(0x0141272670, 1, "APtrList<double * __ptr64>");
	SetCnet(0x01411C3368, 1, "APtrList<_SGC::A3DSkillGfxEvent * __ptr64>");
	SetCnet(0x0141222F80, 1, "APtrList<WikiSearcher::SearchCommand * __ptr64>");
	SetCnet(0x01411DB510, 1, "APtrList<MTL_ECMODEL * __ptr64>");
	SetCnet(0x01412799D8, 1, "APtrList<LuaDebugMsg * __ptr64>");
	SetCnet(0x0141170B80, 1, "APtrList<GNET::FactionInviteJoin * __ptr64>");
	SetCnet(0x01411DB5B0, 1, "APtrList<FxLoaderModule::MTL_FX * __ptr64>");
	SetCnet(0x0141274678, 1, "APtrList<FWOutterProperty * __ptr64>");
	SetCnet(0x0141271DD8, 1, "APtrList<FWModifierInfo * __ptr64>");
	SetCnet(0x0141271070, 1, "APtrList<FWGlyph * __ptr64>");
	SetCnet(0x0141276678, 1, "APtrList<FWFormulaElement * __ptr64>");
	SetCnet(0x01412735C0, 1, "APtrList<FWFormula * __ptr64>");
	SetCnet(0x0141271A98, 1, "APtrList<FWAssemblyInfo * __ptr64>");
	SetCnet(0x0141271E70, 1, "APtrList<FWArtInfo * __ptr64>");
	SetCnet(0x014124C180, 1, "APtrList<EVENT_INFO * __ptr64>");
	SetCnet(0x0141272740, 1, "APtrList<CGLUContour * __ptr64>");
	SetCnet(0x01411E2880, 1, "APtrList<CECSoundCache::FILECACHEITEM * __ptr64>");
	SetCnet(0x01411C34A0, 1, "APtrList<CECSkillGfxEvent * __ptr64>");
	SetCnet(0x01411DB4E0, 1, "APtrList<CECSceneThreadObj * __ptr64>");
	SetCnet(0x01411D9D28, 1, "APtrList<CECRTDebug::DBGSTR * __ptr64>");
	SetCnet(0x0141248E48, 1, "APtrList<CECModel::ChannelActNode * __ptr64>");
	SetCnet(0x0141155508, 1, "APtrList<CECMapDlgsMgr::TRANS_POINT * __ptr64>");
	SetCnet(0x014116A690, 1, "APtrList<CECBubbleDecal * __ptr64>");
	SetCnet(0x01411AD7F8, 1, "APtrList<CECActionContext * __ptr64>");
	SetCnet(0x01412740D0, 1, "APtrList<CCharVerticesBuffer * __ptr64>");
	SetCnet(0x0141274028, 1, "APtrList<CCharCurve * __ptr64>");
	SetCnet(0x0141272580, 1, "APtrList<CCharContour * __ptr64>");
	SetCnet(0x0141177A00, 1, "APtrList<AUIDialog * __ptr64>");
	SetCnet(0x0141225208, 1, "APtrList<AMSoundBufferMan::LOADED3D * __ptr64>");
	SetCnet(0x01412251F8, 1, "APtrList<AMSoundBuffer * __ptr64>");
	SetCnet(0x0141248E58, 1, "APtrList<AM3DSoundBuffer * __ptr64>");
	SetCnet(0x014124C170, 1, "APtrList<ACTION_INFO * __ptr64>");
	SetCnet(0x014122ACA0, 1, "APtrList<A3DTextureMan::TEXTURERECORD * __ptr64>");
	SetCnet(0x0141230300, 1, "APtrList<A3DTerrain2Block * __ptr64>");
	SetCnet(0x0141241378, 1, "APtrList<A3DSkinRenderWithEffect::MESHNODE * __ptr64>");
	SetCnet(0x01412410A8, 1, "APtrList<A3DSkinRender::MESHNODE * __ptr64>");
	SetCnet(0x0141228A98, 1, "APtrList<A3DSkinModelActionCore * __ptr64>");
	SetCnet(0x014123E118, 1, "APtrList<A3DShaderMan::SHADERNODE * __ptr64>");
	SetCnet(0x0141233598, 1, "APtrList<A3DSMActionChannel::ACT_NODE * __ptr64>");
	SetCnet(0x014124A278, 1, "APtrList<A3DParticle * __ptr64>");
	SetCnet(0x0141241620, 1, "APtrList<A3DMeshSorter::MESHNODE * __ptr64>");
	SetCnet(0x014124A298, 1, "APtrList<A3DGFXExMan::PlayedSfx * __ptr64>");
	SetCnet(0x014124A288, 1, "APtrList<A3DGFXExMan::FadeOutGfx * __ptr64>");
	SetCnet(0x014124A258, 1, "APtrList<A3DGFXEx * __ptr64>");
	SetCnet(0x0141249AC0, 1, "APtrList<A3DGFXElement * __ptr64>");
	SetCnet(0x01412316C8, 1, "APtrList<A3DCoordinate * __ptr64>");
	SetCnet(0x0141248E38, 1, "APtrList<A3DCombActDynData * __ptr64>");
	SetCnet(0x0141240A38, 1, "APtrList<A2DSpriteTexMan::TEXTURERECORD * __ptr64>");
	SetCnet(0x0141243718, 1, "APtrArray<void * __ptr64>");
	SetCnet(0x01412310A8, 1, "APtrArray<s_PROCSUBMESH * __ptr64>");
	SetCnet(0x014124FF18, 1, "APtrArray<SoftKeyFrameDescNotify * __ptr64>");
	SetCnet(0x014124FF08, 1, "APtrArray<SoftKeyFrameConfigDesc * __ptr64>");
	SetCnet(0x014124CAE8, 1, "APtrArray<NxActor * __ptr64>");
	SetCnet(0x01411DB520, 1, "APtrArray<MTL_ECMODEL * __ptr64>");
	SetCnet(0x01411F36C8, 1, "APtrArray<GNET::Protocol * __ptr64>");
	SetCnet(0x0141099530, 1, "APtrArray<CStaticModelObject * __ptr64>");
	SetCnet(0x0141099520, 1, "APtrArray<CELTree * __ptr64>");
	SetCnet(0x0141099690, 1, "APtrArray<CELPrecinct::MARK * __ptr64>");
	SetCnet(0x01411F36E8, 1, "APtrArray<CECStubbornNetSender * __ptr64>");
	SetCnet(0x01411AD4C0, 1, "APtrArray<CECSkill * __ptr64>");
	SetCnet(0x01411E1488, 1, "APtrArray<CECShortcut * __ptr64>");
	SetCnet(0x01411DA540, 1, "APtrArray<CECSceneBlock * __ptr64>");
	SetCnet(0x01411DA560, 1, "APtrArray<CECScene::TREETYPE * __ptr64>");
	SetCnet(0x01411DA580, 1, "APtrArray<CECScene::SUBTRNDATA * __ptr64>");
	SetCnet(0x01411DA570, 1, "APtrArray<CECScene::GRASSTYPE * __ptr64>");
	SetCnet(0x01411C2EA0, 1, "APtrArray<CECPlayerMan::PLAYERMODEL * __ptr64>");
	SetCnet(0x01411C1448, 1, "APtrArray<CECPateText * __ptr64>");
	SetCnet(0x01411AD4F0, 1, "APtrArray<CECObject * __ptr64>");
	SetCnet(0x01411C2190, 1, "APtrArray<CECNPCMan::NPCMODEL * __ptr64>");
	SetCnet(0x01411AD4B0, 1, "APtrArray<CECNPC * __ptr64>");
	SetCnet(0x01411DB4A0, 1, "APtrArray<CECModel * __ptr64>");
	SetCnet(0x01411B1438, 1, "APtrArray<CECIvtrItem * __ptr64>");
	SetCnet(0x01411AFCC8, 1, "APtrArray<CECImageRes::REGDRAW * __ptr64>");
	SetCnet(0x01411F36D8, 1, "APtrArray<CECGameSession::PINGTIME * __ptr64>");
	SetCnet(0x014119F238, 1, "APtrArray<CECGFXCaster::AUTOGFX * __ptr64>");
	SetCnet(0x01411732F8, 1, "APtrArray<CECFriendMan::SEND_INFO * __ptr64>");
	SetCnet(0x01411732E8, 1, "APtrArray<CECFriendMan::MESSAGE * __ptr64>");
	SetCnet(0x01411732D8, 1, "APtrArray<CECFriendMan::GROUP * __ptr64>");
	SetCnet(0x01411732C8, 1, "APtrArray<CECFriendMan::FRIEND * __ptr64>");
	SetCnet(0x01411C21A0, 1, "APtrArray<CECFakeMonster * __ptr64>");
	SetCnet(0x01411CA038, 1, "APtrArray<CECFaceDecal * __ptr64>");
	SetCnet(0x014116DAE8, 1, "APtrArray<CECEnemyMan::ENEMYEX * __ptr64>");
	SetCnet(0x014116DAD8, 1, "APtrArray<CECEnemyMan::ENEMY * __ptr64>");
	SetCnet(0x01411AD7A0, 1, "APtrArray<CECElsePlayer * __ptr64>");
	SetCnet(0x01411C1438, 1, "APtrArray<CECDecal * __ptr64>");
	SetCnet(0x01410F3458, 1, "APtrArray<CECBuildingModel * __ptr64>");
	SetCnet(0x014124C0E0, 1, "APtrArray<BoneScaleChange::BoneScaleParam * __ptr64>");
	SetCnet(0x01411CA028, 1, "APtrArray<AWString * __ptr64>");
	SetCnet(0x0141227E40, 1, "APtrArray<AWIniFile::s_SECTION * __ptr64>");
	SetCnet(0x0141227E30, 1, "APtrArray<AWIniFile::s_KEY * __ptr64>");
	SetCnet(0x01410AA460, 1, "APtrArray<AUISubDialog * __ptr64>");
	SetCnet(0x01410AA470, 1, "APtrArray<AUIDialog * __ptr64>");
	SetCnet(0x01410996A0, 1, "APtrArray<AString * __ptr64>");
	SetCnet(0x014123DBD8, 1, "APtrArray<AStack<A3DRenderTargetMan::RT_SURFS,A3DRenderTargetMan::RT_SURFS & __ptr64> * __ptr64>");
	SetCnet(0x014128C4F8, 1, "APtrArray<APtrArray<AString * __ptr64> * __ptr64>");
	SetCnet(0x0141259A20, 1, "APtrArray<APhysXShapeDesc * __ptr64>");
	SetCnet(0x01411C0648, 1, "APtrArray<APPRECIATE_ECM * __ptr64>");
	SetCnet(0x0141225238, 1, "APtrArray<AMSoundBufferMan::ASCACHEITEM * __ptr64>");
	SetCnet(0x0141227C60, 1, "APtrArray<AIniFile::s_SECTION * __ptr64>");
	SetCnet(0x0141227C50, 1, "APtrArray<AIniFile::s_KEY * __ptr64>");
	SetCnet(0x0141227588, 1, "APtrArray<AFilePackage::FILEENTRYCACHE * __ptr64>");
	SetCnet(0x0141227578, 1, "APtrArray<AFilePackage::FILEENTRY * __ptr64>");
	SetCnet(0x01412284B8, 1, "APtrArray<AFilePackGame::FILEENTRY * __ptr64>");
	SetCnet(0x01412353C0, 1, "APtrArray<A3DWaterWave2 * __ptr64>");
	SetCnet(0x01412353D0, 1, "APtrArray<A3DWaterMeshBlock2 * __ptr64>");
	SetCnet(0x0141231348, 1, "APtrArray<A3DWaterArea2 * __ptr64>");
	SetCnet(0x0141235850, 1, "APtrArray<A3DTrn2SubLoaderB * __ptr64>");
	SetCnet(0x01412444D8, 1, "APtrArray<A3DTrn2RenderSlot * __ptr64>");
	SetCnet(0x014122F9F0, 1, "APtrArray<A3DTexture * __ptr64>");
	SetCnet(0x0141231358, 1, "APtrArray<A3DTerrainWater2::HeightWaterAreaArray * __ptr64>");
	SetCnet(0x014123EEE8, 1, "APtrArray<A3DTerrain2LOD * __ptr64>");
	SetCnet(0x0141244508, 1, "APtrArray<A3DTerrain2Block::RENDERDATA * __ptr64>");
	SetCnet(0x01412302F0, 1, "APtrArray<A3DTerrain2Block * __ptr64>");
	SetCnet(0x0141230310, 1, "APtrArray<A3DTerrain2::TEXTURE * __ptr64>");
	SetCnet(0x0141232788, 1, "APtrArray<A3DSuppleMesh * __ptr64>");
	SetCnet(0x0141246AF8, 1, "APtrArray<A3DSklTrackSet::BONETRACK * __ptr64>");
	SetCnet(0x0141241388, 1, "APtrArray<A3DSkinRenderWithEffect::RENDERSLOT * __ptr64>");
	SetCnet(0x0141241398, 1, "APtrArray<A3DSkinRenderWithEffect::MESHNODE * __ptr64>");
	SetCnet(0x01412410B8, 1, "APtrArray<A3DSkinRender::RENDERSLOT * __ptr64>");
	SetCnet(0x01412410C8, 1, "APtrArray<A3DSkinRender::MESHNODE * __ptr64>");
	SetCnet(0x0141254768, 1, "APtrArray<A3DSkinPhysSyncData::SRC_MESH * __ptr64>");
	SetCnet(0x0141254758, 1, "APtrArray<A3DSkinPhysSyncData::MESH_DATA * __ptr64>");
	SetCnet(0x0141254748, 1, "APtrArray<A3DSkinPhysSyncData::ACTOR_DATA * __ptr64>");
	SetCnet(0x0141254100, 1, "APtrArray<A3DSkinPhysSync::AnimVertInfo * __ptr64>");
	SetCnet(0x0141228AC8, 1, "APtrArray<A3DSkinPhyShape * __ptr64>");
	SetCnet(0x0141236F58, 1, "APtrArray<A3DSkinModelActionCore * __ptr64>");
	SetCnet(0x0141228A68, 1, "APtrArray<A3DSkinModel::SKIN * __ptr64>");
	SetCnet(0x0141228A88, 1, "APtrArray<A3DSkinModel * __ptr64>");
	SetCnet(0x0141230A88, 1, "APtrArray<A3DSkinMesh::SUBMESH * __ptr64>");
	SetCnet(0x0141232748, 1, "APtrArray<A3DSkinMesh * __ptr64>");
	SetCnet(0x0141228AA8, 1, "APtrArray<A3DSkinHitBox * __ptr64>");
	SetCnet(0x014122C038, 1, "APtrArray<A3DSkeletonHook * __ptr64>");
	SetCnet(0x01412321F8, 1, "APtrArray<A3DSkeleton * __ptr64>");
	SetCnet(0x0141232758, 1, "APtrArray<A3DRigidMesh * __ptr64>");
	SetCnet(0x014123DBE8, 1, "APtrArray<A3DRenderTarget * __ptr64>");
	SetCnet(0x0141232798, 1, "APtrArray<A3DMuscleMesh * __ptr64>");
	SetCnet(0x0141232768, 1, "APtrArray<A3DMorphSkinMesh * __ptr64>");
	SetCnet(0x0141232778, 1, "APtrArray<A3DMorphRigidMesh * __ptr64>");
	SetCnet(0x0141243090, 1, "APtrArray<A3DMorphMesh::CHANNEL * __ptr64>");
	SetCnet(0x014124CAC8, 1, "APtrArray<A3DModelPhysics::SKIN_SLOT * __ptr64>");
	SetCnet(0x014124CAD8, 1, "APtrArray<A3DModelPhysics::EMBED_ACTOR * __ptr64>");
	SetCnet(0x014124FEC0, 1, "APtrArray<A3DModelPhysSyncData::JOINT_DATA * __ptr64>");
	SetCnet(0x014124FEB0, 1, "APtrArray<A3DModelPhysSyncData::BONE_DATA * __ptr64>");
	SetCnet(0x014124FEF8, 1, "APtrArray<A3DModelPhysSyncData::ATTACHER_DATA * __ptr64>");
	SetCnet(0x014124FEE8, 1, "APtrArray<A3DModelPhysSyncData::ACTOR_DATA * __ptr64>");
	SetCnet(0x01412503A0, 1, "APtrArray<A3DModelPhysSync::ROTATION_BONE_INFO * __ptr64>");
	SetCnet(0x0141250350, 1, "APtrArray<A3DModelPhysSync::JOINT_IMP * __ptr64>");
	SetCnet(0x0141250380, 1, "APtrArray<A3DModelPhysSync::BONE_SCALE_CACHE_DATA * __ptr64>");
	SetCnet(0x0141250360, 1, "APtrArray<A3DModelPhysSync::ATTACHER_LINK * __ptr64>");
	SetCnet(0x0141250340, 1, "APtrArray<A3DModelPhysSync::ACTOR_IMP * __ptr64>");
	SetCnet(0x0141293670, 1, "APtrArray<A3DMirrorPlane * __ptr64>");
	SetCnet(0x0141241610, 1, "APtrArray<A3DMeshSorter::MESHNODE * __ptr64>");
	SetCnet(0x0141254798, 1, "APtrArray<A3DMeshBase * __ptr64>");
	SetCnet(0x014122FA00, 1, "APtrArray<A3DMaterial * __ptr64>");
	SetCnet(0x0141231B78, 1, "APtrArray<A3DLitModelRender::RENDERSLOT * __ptr64>");
	SetCnet(0x0141231B88, 1, "APtrArray<A3DLitModel * __ptr64>");
	SetCnet(0x014122B218, 1, "APtrArray<A3DLitMesh * __ptr64>");
	SetCnet(0x014122C028, 1, "APtrArray<A3DJoint * __ptr64>");
	SetCnet(0x0141228A78, 1, "APtrArray<A3DHanger * __ptr64>");
	SetCnet(0x0141291DA0, 1, "APtrArray<A3DGrassType * __ptr64>");
	SetCnet(0x0141231820, 1, "APtrArray<A3DFontMan::FONTTYPE * __ptr64>");
	SetCnet(0x014122FF78, 1, "APtrArray<A3DFont::TEXTURESLOT * __ptr64>");
	SetCnet(0x0141230148, 1, "APtrArray<A3DFont::CHARPROP * __ptr64>");
	SetCnet(0x01411737E8, 1, "APtrArray<A3DFont * __ptr64>");
	SetCnet(0x0141173870, 1, "APtrArray<A3DCursor * __ptr64>");
	SetCnet(0x014123DBF8, 1, "APtrArray<A3DCubeRenderTarget * __ptr64>");
	SetCnet(0x014122C018, 1, "APtrArray<A3DBone * __ptr64>");
	SetCnet(0x0141254110, 1, "APtrArray<A3DAdhereMesh * __ptr64>");
	SetCnet(0x014122D678, 1, "APtrArray<A2DSpriteTextures::TEXTURE_RECT * __ptr64>");
	SetCnet(0x014122D350, 1, "APtrArray<A2DSpriteItem * __ptr64>");
	SetCnet(0x0141289820, 6, "APhysXWindForceFieldObjectDesc");
	SetCnet(0x0141289858, 4, "APhysXWindForceFieldObjectDesc");
	SetCnet(0x01412857B0, 33, "APhysXWindForceFieldObject");
	SetCnet(0x0141289760, 6, "APhysXVortexForceFieldObjectDesc");
	SetCnet(0x0141289798, 4, "APhysXVortexForceFieldObjectDesc");
	SetCnet(0x0141289640, 6, "APhysXVacuumForceFieldObjectDesc");
	SetCnet(0x0141289678, 4, "APhysXVacuumForceFieldObjectDesc");
	SetCnet(0x01412892B0, 2, "APhysXUtility::COverlapDetector::Report");
	SetCnet(0x0141287160, 7, "APhysXUserCreationDeletionReport");
	SetCnet(0x01412502C0, 4, "APhysXUserBreakReport");
	SetCnet(0x0141287120, 2, "APhysXTriggerReport");
	SetCnet(0x0141283C08, 12, "APhysXTerrainQuadManager");
	SetCnet(0x01412883E8, 8, "APhysXTerrainPatchRBObjectDesc");
	SetCnet(0x0141288430, 4, "APhysXTerrainPatchRBObjectDesc");
	SetCnet(0x0141284AB0, 51, "APhysXTerrainPatchRBObject");
	SetCnet(0x0141288528, 4, "APhysXTerrainBlock");
	SetCnet(0x0141288550, 12, "APhysXTerrainBlock");
	SetCnet(0x0141283C70, 12, "APhysXTerrain");
	SetCnet(0x01412871E0, 4, "APhysXSubSimulationReport");
	SetCnet(0x0141288378, 8, "APhysXStaticRBObjectDesc");
	SetCnet(0x01412883C0, 4, "APhysXStaticRBObjectDesc");
	SetCnet(0x0141284770, 51, "APhysXStaticRBObject");
	SetCnet(0x0141286698, 11, "APhysXSphericalJointDesc");
	SetCnet(0x01412868F8, 1, "APhysXSphereSweepRBObjectHitReport");
	SetCnet(0x014124FB60, 14, "APhysXSphereShapeDesc");
	SetCnet(0x0141254650, 8, "APhysXSkeletonRBObjectDesc");
	SetCnet(0x0141254698, 4, "APhysXSkeletonRBObjectDesc");
	SetCnet(0x0141284C50, 51, "APhysXSkeletonRBObject");
	SetCnet(0x0141254618, 6, "APhysXSimpleMeshDesc");
	SetCnet(0x0141259C10, 8, "APhysXSimpleBreakableSkeletonRBObjectDesc");
	SetCnet(0x0141259C58, 4, "APhysXSimpleBreakableSkeletonRBObjectDesc");
	SetCnet(0x01412859F8, 51, "APhysXSimpleBreakableSkeletonRBObject");
	SetCnet(0x0141285B98, 11, "APhysXSimpleBreakableSkeletonRBObject");
	SetCnet(0x014124FAE8, 14, "APhysXShapeDesc");
	SetCnet(0x0141285E18, 4, "APhysXSetActorPoseSubSimulationReport");
	SetCnet(0x01411737F8, 4, "APhysXSerializerBase");
	SetCnet(0x014124FC38, 8, "APhysXRigidBodyObjectDesc");
	SetCnet(0x014124FC80, 4, "APhysXRigidBodyObjectDesc");
	SetCnet(0x0141284430, 51, "APhysXRigidBodyObject");
	SetCnet(0x0141286638, 11, "APhysXRevoluteJointDesc");
	SetCnet(0x014124FAB0, 1, "APhysXRefCountable");
	SetCnet(0x01412867F8, 4, "APhysXRBSubSimulationReport");
	SetCnet(0x01412859D0, 4, "APhysXRBHitModifier");
	SetCnet(0x014124FE10, 10, "APhysXRBAttacherDesc");
	SetCnet(0x014124FE68, 4, "APhysXRBAttacherDesc");
	SetCnet(0x0141285120, 33, "APhysXRBAttacher");
	SetCnet(0x01412865D8, 11, "APhysXPulleyJointDesc");
	SetCnet(0x01412864B8, 11, "APhysXPrismaticJointDesc");
	SetCnet(0x0141286458, 11, "APhysXPointOnLineJointDesc");
	SetCnet(0x01412863F8, 11, "APhysXPointInPlaneJointDesc");
	SetCnet(0x0141286DB0, 14, "APhysXPlaneShapeDesc");
	SetCnet(0x0141283B20, 4, "APhysXOutputStream");
	SetCnet(0x014125A040, 6, "APhysXOrientedParticleObjectDesc");
	SetCnet(0x014125A078, 4, "APhysXOrientedParticleObjectDesc");
	SetCnet(0x0141285468, 36, "APhysXOrientedParticleObject");
	SetCnet(0x01412502E8, 4, "APhysXObjectInstanceDesc");
	SetCnet(0x014124FBD8, 6, "APhysXObjectDesc");
	SetCnet(0x014124FC10, 4, "APhysXObjectDesc");
	SetCnet(0x014124C9A0, 10, "APhysXObjectConnectorDesc");
	SetCnet(0x0141289048, 8, "APhysXObjectConnector");
	SetCnet(0x0141284320, 33, "APhysXObject");
	SetCnet(0x014128A8B0, 23, "APhysXNxCharCtrler");
	SetCnet(0x014128A970, 23, "APhysXNxCCImp");
	SetCnet(0x0141286B30, 13, "APhysXMemoryWriteBuffer");
	SetCnet(0x0141286BA0, 13, "APhysXMemoryReadBuffer");
	SetCnet(0x0141173820, 5, "APhysXMaterialDesc");
	SetCnet(0x014128A010, 14, "APhysXLWCharCtrler");
	SetCnet(0x014128A098, 14, "APhysXLWCCImp");
	SetCnet(0x014124C9F8, 11, "APhysXJointDesc");
	SetCnet(0x0141289090, 8, "APhysXJoint");
	SetCnet(0x0141289A38, 23, "APhysXHostCCBase");
	SetCnet(0x0141286E28, 14, "APhysXHeightFieldShapeDesc");
	SetCnet(0x01412896A0, 6, "APhysXGravitationForceFieldObjectDesc");
	SetCnet(0x01412896D8, 4, "APhysXGravitationForceFieldObjectDesc");
	SetCnet(0x0141287558, 4, "APhysXGraphVertex");
	SetCnet(0x0141259BD8, 1, "APhysXGraph");
	SetCnet(0x0141259BE8, 4, "APhysXGraph");
	SetCnet(0x0141288458, 6, "APhysXForceFieldObjectDesc");
	SetCnet(0x0141288490, 4, "APhysXForceFieldObjectDesc");
	SetCnet(0x01412856A0, 33, "APhysXForceFieldObject");
	SetCnet(0x0141259FE0, 6, "APhysXFluidObjectDesc");
	SetCnet(0x014125A018, 4, "APhysXFluidObjectDesc");
	SetCnet(0x0141285340, 36, "APhysXFluidObject");
	SetCnet(0x014125A0A0, 10, "APhysXFluidEmitterAttacherDesc");
	SetCnet(0x014125A0F8, 4, "APhysXFluidEmitterAttacherDesc");
	SetCnet(0x0141285590, 33, "APhysXFluidEmitterAttacher");
	SetCnet(0x0141286750, 10, "APhysXFluidEmitterAttachRBConnectorDesc");
	SetCnet(0x0141289120, 8, "APhysXFluidEmitterAttachRBConnector");
	SetCnet(0x014124CA58, 11, "APhysXFixedJointDesc");
	SetCnet(0x0141286AC0, 13, "APhysXFileImageStream");
	SetCnet(0x01412897C0, 6, "APhysXExplosionForceFieldObjectDesc");
	SetCnet(0x01412897F8, 4, "APhysXExplosionForceFieldObjectDesc");
	SetCnet(0x014124FCA8, 8, "APhysXDynamicRBObjectDesc");
	SetCnet(0x014124FCF0, 4, "APhysXDynamicRBObjectDesc");
	SetCnet(0x0141284910, 51, "APhysXDynamicRBObject");
	SetCnet(0x014128A268, 28, "APhysXDynCharCtrler");
	SetCnet(0x014128A360, 28, "APhysXDynCCImp");
	SetCnet(0x0141288308, 8, "APhysXDummyRBObjectDesc");
	SetCnet(0x0141288350, 4, "APhysXDummyRBObjectDesc");
	SetCnet(0x01412845D0, 51, "APhysXDummyRBObject");
	SetCnet(0x0141286518, 11, "APhysXDistanceJointDesc");
	SetCnet(0x0141286578, 11, "APhysXD6JointDesc");
	SetCnet(0x0141286398, 11, "APhysXCylindricalJointDesc");
	SetCnet(0x01412871A0, 7, "APhysXCreationDeletionReport");
	SetCnet(0x0141286D38, 14, "APhysXConvexShapeDesc");
	SetCnet(0x0141287100, 3, "APhysXContactReport");
	SetCnet(0x0141287310, 4, "APhysXConstraintClothSubSimulationReport");
	SetCnet(0x014124FD18, 6, "APhysXCompoundObjectDesc");
	SetCnet(0x014124FD50, 4, "APhysXCompoundObjectDesc");
	SetCnet(0x0141284F00, 33, "APhysXCompoundObject");
	SetCnet(0x01412546C0, 6, "APhysXClothObjectDesc");
	SetCnet(0x01412546F8, 4, "APhysXClothObjectDesc");
	SetCnet(0x0141284DF0, 33, "APhysXClothObject");
	SetCnet(0x0141254070, 10, "APhysXClothAttacherDesc");
	SetCnet(0x01412540C8, 4, "APhysXClothAttacherDesc");
	SetCnet(0x0141285230, 33, "APhysXClothAttacher");
	SetCnet(0x01412866F8, 10, "APhysXClothAttachRBConnectorDesc");
	SetCnet(0x01412890D8, 8, "APhysXClothAttachRBConnector");
	SetCnet(0x0141288768, 11, "APhysXCharacterControllerManager");
	SetCnet(0x0141289AF8, 23, "APhysXCharacterController");
	SetCnet(0x01412887C8, 11, "APhysXCharCtrlerMgrImp");
	SetCnet(0x0141286CC0, 14, "APhysXCapsuleShapeDesc");
	SetCnet(0x0141289BC8, 23, "APhysXCCImp");
	SetCnet(0x014128AC08, 6, "APhysXCCHitReport");
	SetCnet(0x01412899C8, 13, "APhysXCCBase");
	SetCnet(0x0141289700, 6, "APhysXBuoyancyForceFieldObjectDesc");
	SetCnet(0x0141289738, 4, "APhysXBuoyancyForceFieldObjectDesc");
	SetCnet(0x0141259C80, 8, "APhysXBreakableSkeletonRBObjectDesc");
	SetCnet(0x0141259CC8, 4, "APhysXBreakableSkeletonRBObjectDesc");
	SetCnet(0x0141285BF8, 51, "APhysXBreakableSkeletonRBObject");
	SetCnet(0x0141285D98, 10, "APhysXBreakableSkeletonRBObject");
	SetCnet(0x01412842C8, 10, "APhysXBreakable");
	SetCnet(0x0141287138, 4, "APhysXBreakReport");
	SetCnet(0x0141259F68, 14, "APhysXBoxShapeDesc");
	SetCnet(0x0141289880, 6, "APhysXBossForceFieldObjectDesc");
	SetCnet(0x01412898B8, 4, "APhysXBossForceFieldObjectDesc");
	SetCnet(0x01412858C0, 33, "APhysXBossForceFieldObject");
	SetCnet(0x014124FD78, 10, "APhysXAttacherDesc");
	SetCnet(0x014124FDD0, 4, "APhysXAttacherDesc");
	SetCnet(0x0141285010, 33, "APhysXAttacher");
	SetCnet(0x0141283AD8, 8, "APhysXAllocator");
	SetCnet(0x0141285DF0, 4, "APhysXAddForceSubSimulationReport");
	SetCnet(0x014124FAC0, 4, "APhysXActorDesc");
	SetCnet(0x0141223B40, 1, "AMemoryMan");
	SetCnet(0x0141223B00, 1, "AMemVector<AMemPool::POOLSLOT>");
	SetCnet(0x0141223B20, 1, "AMemSmall");
	SetCnet(0x0141223B10, 1, "AMemPool");
	SetCnet(0x0141223B30, 1, "AMemLarge");
	SetCnet(0x0141227FC0, 16, "AMemFile");
	SetCnet(0x0141225FD0, 49, "AMSurfaceRenderer");
	SetCnet(0x0141226160, 15, "AMSurfaceRenderer");
	SetCnet(0x01412261E0, 5, "AMSurfaceRenderer");
	SetCnet(0x0141226210, 9, "AMSurfaceRenderer");
	SetCnet(0x0141226260, 5, "AMSurfaceRenderer");
	SetCnet(0x01412241C8, 1, "AMSoundStream");
	SetCnet(0x01411E2858, 4, "AMSoundFileCache");
	SetCnet(0x0141225430, 1, "AMSoundEngine");
	SetCnet(0x0141226428, 2, "AMSoundDevice");
	SetCnet(0x0141225248, 1, "AMSoundBufferMan");
	SetCnet(0x0141225768, 13, "AMSoundBuffer");
	SetCnet(0x0141225EF8, 1, "AMOggFile");
	SetCnet(0x0141225E30, 1, "AMMp3File");
	SetCnet(0x014128C368, 1, "AMEngine");
	SetCnet(0x0141226340, 1, "AMConfig");
	SetCnet(0x01412255D8, 2, "AM3DSoundDevice");
	SetCnet(0x0141225AD0, 13, "AM3DSoundBuffer");
	SetCnet(0x0141223B60, 1, "ALog");
	SetCnet(0x01411553A8, 1, "AList2<void * __ptr64,void * __ptr64>::c_NodePool");
	SetCnet(0x0141155380, 1, "AList2<void * __ptr64,void * __ptr64>");
	SetCnet(0x0141173860, 1, "AList2<tagMSG,tagMSG & __ptr64>");
	SetCnet(0x0141271190, 1, "AList2<s_LISTPOSITION * __ptr64,s_LISTPOSITION * __ptr64 & __ptr64>::c_NodePool");
	SetCnet(0x01412710A0, 1, "AList2<s_LISTPOSITION * __ptr64,s_LISTPOSITION * __ptr64 & __ptr64>");
	SetCnet(0x01411629D8, 1, "AList2<int,int>::c_NodePool");
	SetCnet(0x01411628D8, 1, "AList2<int,int>");
	SetCnet(0x01412494D8, 1, "AList2<TrackBoneVelocity::NODE,TrackBoneVelocity::NODE & __ptr64>::c_NodePool");
	SetCnet(0x0141249200, 1, "AList2<TrackBoneVelocity::NODE,TrackBoneVelocity::NODE & __ptr64>");
	SetCnet(0x01411629F8, 1, "AList2<GNET::GetPlayerBriefInfo,GNET::GetPlayerBriefInfo & __ptr64>::c_NodePool");
	SetCnet(0x0141162988, 1, "AList2<GNET::GetPlayerBriefInfo,GNET::GetPlayerBriefInfo & __ptr64>");
	SetCnet(0x0141278140, 1, "AList2<FWGlyphComposite::Ratio,FWGlyphComposite::Ratio & __ptr64>::c_NodePool");
	SetCnet(0x0141277F60, 1, "AList2<FWGlyphComposite::Ratio,FWGlyphComposite::Ratio & __ptr64>");
	SetCnet(0x01411C1DA0, 1, "AList2<ECMSG,ECMSG & __ptr64>::c_NodePool");
	SetCnet(0x01411C1D80, 1, "AList2<ECMSG,ECMSG & __ptr64>");
	SetCnet(0x0141269398, 1, "AList2<CWndManager,CWndManager & __ptr64>::c_NodePool");
	SetCnet(0x0141269368, 1, "AList2<CWndManager,CWndManager & __ptr64>");
	SetCnet(0x0141162A08, 1, "AList2<CECC2SCmdCache::presentInfo,CECC2SCmdCache::presentInfo & __ptr64>::c_NodePool");
	SetCnet(0x0141162998, 1, "AList2<CECC2SCmdCache::presentInfo,CECC2SCmdCache::presentInfo & __ptr64>");
	SetCnet(0x01411C1400, 1, "AList2<CECAttackEvent,CECAttackEvent const & __ptr64>::c_NodePool");
	SetCnet(0x01411C1148, 1, "AList2<CECAttackEvent,CECAttackEvent const & __ptr64>");
	SetCnet(0x014114CBC0, 1, "AList2<CDlgWebMyShop::PrepostInfo,CDlgWebMyShop::PrepostInfo & __ptr64>::c_NodePool");
	SetCnet(0x014114C848, 1, "AList2<CDlgWebMyShop::PrepostInfo,CDlgWebMyShop::PrepostInfo & __ptr64>");
	SetCnet(0x01410B3808, 1, "AList2<CDlgBShop::AuctionMessage,CDlgBShop::AuctionMessage & __ptr64>::c_NodePool");
	SetCnet(0x01410B34A0, 1, "AList2<CDlgBShop::AuctionMessage,CDlgBShop::AuctionMessage & __ptr64>");
	SetCnet(0x01411629E8, 1, "AList2<C2S::cmd_use_item,C2S::cmd_use_item & __ptr64>::c_NodePool");
	SetCnet(0x0141162978, 1, "AList2<C2S::cmd_use_item,C2S::cmd_use_item & __ptr64>");
	SetCnet(0x0141271990, 1, "AList2<AWString,AWString & __ptr64>::c_NodePool");
	SetCnet(0x0141271970, 1, "AList2<AWString,AWString & __ptr64>");
	SetCnet(0x0141274C08, 1, "AList2<APoint<int>,APoint<int> & __ptr64>::c_NodePool");
	SetCnet(0x0141274B30, 1, "AList2<APoint<int>,APoint<int> & __ptr64>");
	SetCnet(0x0141247A80, 1, "AList2<A3DTrn2StreamMan::STREAM_NODE,A3DTrn2StreamMan::STREAM_NODE & __ptr64>::c_NodePool");
	SetCnet(0x0141247940, 1, "AList2<A3DTrn2StreamMan::STREAM_NODE,A3DTrn2StreamMan::STREAM_NODE & __ptr64>");
	SetCnet(0x0141233068, 1, "AList2<A3DTrackMan::TRACKNODE,A3DTrackMan::TRACKNODE & __ptr64>::c_NodePool");
	SetCnet(0x0141232C98, 1, "AList2<A3DTrackMan::TRACKNODE,A3DTrackMan::TRACKNODE & __ptr64>");
	SetCnet(0x0141227C70, 1, "AIniFile");
	SetCnet(0x01412270B8, 15, "AFileUnicode");
	SetCnet(0x0141227550, 4, "AFilePackage::file");
	SetCnet(0x0141227500, 4, "AFilePackage::entry");
	SetCnet(0x0141227528, 4, "AFilePackage::directory");
	SetCnet(0x0141227598, 6, "AFilePackage");
	SetCnet(0x01412284D8, 6, "AFilePackGame");
	SetCnet(0x01412274C8, 6, "AFilePackBase");
	SetCnet(0x0141226E60, 15, "AFileImage");
	SetCnet(0x0141227138, 15, "AFile");
	SetCnet(0x01412503E8, 2, "AECMHitGroundReport");
	SetCnet(0x014124A308, 3, "ACycleCounter");
	SetCnet(0x0141224118, 1, "ACounter");
	SetCnet(0x0141099510, 1, "AArray<void * __ptr64,void * __ptr64>");
	SetCnet(0x01411AD4D0, 1, "AArray<unsigned short,unsigned short>");
	SetCnet(0x014122B4D0, 1, "AArray<unsigned short,unsigned short & __ptr64>");
	SetCnet(0x01411DA550, 1, "AArray<unsigned long,unsigned long>");
	SetCnet(0x0141254720, 1, "AArray<unsigned long,unsigned long & __ptr64>");
	SetCnet(0x01411B9478, 1, "AArray<unsigned int,unsigned int & __ptr64>");
	SetCnet(0x01411ABF88, 1, "AArray<unsigned char,unsigned char>");
	SetCnet(0x014122BE08, 1, "AArray<short,short & __ptr64>");
	SetCnet(0x014109A038, 1, "AArray<int,int>");
	SetCnet(0x0141233058, 1, "AArray<int,int & __ptr64>");
	SetCnet(0x0141228FB8, 1, "AArray<float,float>");
	SetCnet(0x01412938B0, 1, "AArray<float,float & __ptr64>");
	SetCnet(0x01412943B0, 1, "AArray<bool,bool>");
	SetCnet(0x0141250390, 1, "AArray<bool,bool const & __ptr64>");
	SetCnet(0x014114D598, 1, "AArray<__int64,__int64>");
	SetCnet(0x0141166A70, 1, "AArray<_D3DDISPLAYMODE,_D3DDISPLAYMODE const & __ptr64>");
	SetCnet(0x01411EFDD0, 1, "AArray<POINT_FLOAT,POINT_FLOAT & __ptr64>");
	SetCnet(0x0141228AB8, 1, "AArray<OBBBEVELS,OBBBEVELS & __ptr64>");
	SetCnet(0x01411DB4D0, 1, "AArray<MTL_TRNBLOCK,MTL_TRNBLOCK & __ptr64>");
	SetCnet(0x01410CCC78, 1, "AArray<ItemExtProperty,ItemExtProperty & __ptr64>");
	SetCnet(0x014124CBD8, 1, "AArray<HL_CONNECT,HL_CONNECT & __ptr64>");
	SetCnet(0x01411B9468, 1, "AArray<GOBLINSKILL,GOBLINSKILL & __ptr64>");
	SetCnet(0x0141270E80, 1, "AArray<FWRuntimeClass * __ptr64,FWRuntimeClass * __ptr64>");
	SetCnet(0x0141275A90, 1, "AArray<FWParam,FWParam & __ptr64>");
	SetCnet(0x0141274BE8, 1, "AArray<FWGlyph * __ptr64,FWGlyph * __ptr64>");
	SetCnet(0x01412766C8, 1, "AArray<FWFormulaElement * __ptr64,FWFormulaElement * __ptr64>");
	SetCnet(0x01411DB0F8, 1, "AArray<ECWDFILEDATAREF,ECWDFILEDATAREF & __ptr64>");
	SetCnet(0x01412925B8, 1, "AArray<ECManager * __ptr64,ECManager * __ptr64 & __ptr64>");
	SetCnet(0x01412729C0, 1, "AArray<CTriangle,CTriangle & __ptr64>");
	SetCnet(0x014125CA10, 1, "AArray<CHBasedCD::CHalfSpace,CHBasedCD::CHalfSpace const & __ptr64>");
	SetCnet(0x014125C828, 1, "AArray<CHBasedCD::CFace * __ptr64,CHBasedCD::CFace * __ptr64>");
	SetCnet(0x0141099928, 1, "AArray<CELTree::ELTREE,CELTree::ELTREE & __ptr64>");
	SetCnet(0x0141156450, 1, "AArray<CECScriptConditionParser::CElement * __ptr64,CECScriptConditionParser::CElement * __ptr64>");
	SetCnet(0x01411DAE68, 1, "AArray<CECSceneBlock::TREEINFO,CECSceneBlock::TREEINFO & __ptr64>");
	SetCnet(0x01411CA048, 1, "AArray<CECPateText::ITEM,CECPateText::ITEM & __ptr64>");
	SetCnet(0x01411C26F0, 1, "AArray<CECOrnamentMan::LDECMODEL,CECOrnamentMan::LDECMODEL & __ptr64>");
	SetCnet(0x01411C1BD8, 1, "AArray<CECMatterMan::MATTERMODEL,CECMatterMan::MATTERMODEL & __ptr64>");
	SetCnet(0x01411B9F48, 1, "AArray<CECIvtrPetEgg::PETSKILL,CECIvtrPetEgg::PETSKILL & __ptr64>");
	SetCnet(0x014116A628, 1, "AArray<CECIconDecal::ICON,CECIconDecal::ICON & __ptr64>");
	SetCnet(0x01411AD4E0, 1, "AArray<CECHostPlayer::TEAMINV,CECHostPlayer::TEAMINV & __ptr64>");
	SetCnet(0x01411AD500, 1, "AArray<CECHostPlayer::FORCE_INFO,CECHostPlayer::FORCE_INFO & __ptr64>");
	SetCnet(0x01411C1900, 1, "AArray<CECHomeObjMan::HOMEOBJMODEL,CECHomeObjMan::HOMEOBJMODEL & __ptr64>");
	SetCnet(0x0141175148, 1, "AArray<CECGameRun::HistoryProgConfig,CECGameRun::HistoryProgConfig>");
	SetCnet(0x014116A0B0, 1, "AArray<CECDealInventory::ITEMINFO,CECDealInventory::ITEMINFO & __ptr64>");
	SetCnet(0x014115B308, 1, "AArray<CECActionBase * __ptr64,CECActionBase * __ptr64 & __ptr64>");
	SetCnet(0x01411AE1B0, 1, "AArray<C2S::npc_trade_item,C2S::npc_trade_item & __ptr64>");
	SetCnet(0x01411AE1D0, 1, "AArray<C2S::npc_sell_item,C2S::npc_sell_item & __ptr64>");
	SetCnet(0x01411AE1C0, 1, "AArray<C2S::npc_faction_trade,C2S::npc_faction_trade & __ptr64>");
	SetCnet(0x01411AE1E0, 1, "AArray<C2S::npc_booth_item,C2S::npc_booth_item & __ptr64>");
	SetCnet(0x014122B1F0, 1, "AArray<AString,AString & __ptr64>");
	SetCnet(0x0141274BF8, 1, "AArray<APoint<int>,APoint<int> & __ptr64>");
	SetCnet(0x014124CAB8, 1, "AArray<APhysXObjectConnector * __ptr64,APhysXObjectConnector * __ptr64 & __ptr64>");
	SetCnet(0x0141225218, 1, "AArray<AMSoundBufferMan::AUTOBUFFER,AMSoundBufferMan::AUTOBUFFER & __ptr64>");
	SetCnet(0x0141225228, 1, "AArray<AMSoundBufferMan::AUTO3DGROUP,AMSoundBufferMan::AUTO3DGROUP & __ptr64>");
	SetCnet(0x01412284C8, 1, "AArray<AFilePackGame::NAMEBUFFER,AFilePackGame::NAMEBUFFER & __ptr64>");
	SetCnet(0x01412547A8, 1, "AArray<ACTOR_DESC * __ptr64,ACTOR_DESC * __ptr64 & __ptr64>");
	SetCnet(0x014124B038, 1, "AArray<ACTIONDYN_DATA,ACTIONDYN_DATA & __ptr64>");
	SetCnet(0x0141241EE0, 1, "AArray<A3DVECTOR4,A3DVECTOR4 & __ptr64>");
	SetCnet(0x014125C818, 1, "AArray<A3DVECTOR3,A3DVECTOR3 const & __ptr64>");
	SetCnet(0x014122B4C0, 1, "AArray<A3DVECTOR3,A3DVECTOR3 & __ptr64>");
	SetCnet(0x0141235828, 1, "AArray<A3DTrn2SubLoaderB::LAYER,A3DTrn2SubLoaderB::LAYER & __ptr64>");
	SetCnet(0x01412332E0, 1, "AArray<A3DTerrain2Mask::LAYER,A3DTerrain2Mask::LAYER & __ptr64>");
	SetCnet(0x0141236898, 1, "AArray<A3DTerrain2CullHC::BLKEDGE,A3DTerrain2CullHC::BLKEDGE & __ptr64>");
	SetCnet(0x0141230320, 1, "AArray<A3DTerrain2::SUBTERRAIN,A3DTerrain2::SUBTERRAIN & __ptr64>");
	SetCnet(0x0141233468, 1, "AArray<A3DTLVERTEX,A3DTLVERTEX const & __ptr64>");
	SetCnet(0x01412413A8, 1, "AArray<A3DSkinRenderWithEffect::MODIFIERITEM,A3DSkinRenderWithEffect::MODIFIERITEM & __ptr64>");
	SetCnet(0x01412410D8, 1, "AArray<A3DSkinRender::MODIFIERITEM,A3DSkinRender::MODIFIERITEM & __ptr64>");
	SetCnet(0x01412540F0, 1, "AArray<A3DSkinPhysSync::RBACTOR_LINK,A3DSkinPhysSync::RBACTOR_LINK & __ptr64>");
	SetCnet(0x014122FA10, 1, "AArray<A3DSkinMeshRef,A3DSkinMeshRef & __ptr64>");
	SetCnet(0x014123DC18, 1, "AArray<A3DRenderTargetMan::RT_SURFS,A3DRenderTargetMan::RT_SURFS & __ptr64>");
	SetCnet(0x0141241ED0, 1, "AArray<A3DOcclusionProxySW * __ptr64,A3DOcclusionProxySW * __ptr64 & __ptr64>");
	SetCnet(0x0141241B40, 1, "AArray<A3DOcclusionProxyHW * __ptr64,A3DOcclusionProxyHW * __ptr64 & __ptr64>");
	SetCnet(0x0141250370, 1, "AArray<A3DModelPhysSync::BONE_MAT,A3DModelPhysSync::BONE_MAT & __ptr64>");
	SetCnet(0x0141241EC0, 1, "AArray<A3DMipmapBuffer::MipmapRec * __ptr64,A3DMipmapBuffer::MipmapRec * __ptr64 & __ptr64>");
	SetCnet(0x014123EA30, 1, "AArray<A3DMeshCollector::_MESHINFO * __ptr64,A3DMeshCollector::_MESHINFO * __ptr64>");
	SetCnet(0x014109A048, 1, "AArray<A3DMATRIX4,A3DMATRIX4 & __ptr64>");
	SetCnet(0x014123E780, 1, "AArray<A3DLitMeshSharedData * __ptr64,A3DLitMeshSharedData * __ptr64 & __ptr64>");
	SetCnet(0x0141231E20, 1, "AArray<A3DLitMesh * __ptr64,A3DLitMesh * __ptr64 & __ptr64>");
	SetCnet(0x014122B4B0, 1, "AArray<A3DLMVERTEX_POS_NORMAL_UV_TANGENT,A3DLMVERTEX_POS_NORMAL_UV_TANGENT & __ptr64>");
	SetCnet(0x01411E9C30, 1, "AArray<A3DFrustum::PLANE,A3DFrustum::PLANE & __ptr64>");
	SetCnet(0x01412938C0, 1, "AArray<A3DDistantBoard * __ptr64,A3DDistantBoard * __ptr64 & __ptr64>");
	SetCnet(0x0141243500, 1, "AArray<A3DClothMeshImp::VERTEX_INFO,A3DClothMeshImp::VERTEX_INFO & __ptr64>");
	SetCnet(0x014122BE18, 1, "AArray<A3DBone::STATE,A3DBone::STATE & __ptr64>");
	SetCnet(0x014122FD70, 5, "A3DWireCollector");
	SetCnet(0x01412353B0, 1, "A3DWaterMeshBlock2");
	SetCnet(0x01412353E0, 1, "A3DWaterArea2");
	SetCnet(0x014124B0A8, 5, "A3DWalkRunUpDownDynData");
	SetCnet(0x014124B078, 5, "A3DWalkRunDynData");
	SetCnet(0x014123E3D8, 15, "A3DVolumeTexture");
	SetCnet(0x014122B7D0, 2, "A3DViewport");
	SetCnet(0x014123DE90, 5, "A3DVertexShader");
	SetCnet(0x014123DE80, 1, "A3DVertexDecl");
	SetCnet(0x01412416F8, 1, "A3DVertexCollector");
	SetCnet(0x0141232BC8, 7, "A3DVector3Track");
	SetCnet(0x0141235838, 2, "A3DTrn2SubLoaderB");
	SetCnet(0x0141247950, 1, "A3DTrn2StreamMan");
	SetCnet(0x0141247930, 1, "A3DTrn2RenderSlot");
	SetCnet(0x01412597F0, 54, "A3DTrailEx");
	SetCnet(0x0141258CA0, 54, "A3DTrail");
	SetCnet(0x0141232CA8, 1, "A3DTrackMan");
	SetCnet(0x0141232C08, 7, "A3DTrackData<float>");
	SetCnet(0x0141232B88, 7, "A3DTrackData<A3DVECTOR3>");
	SetCnet(0x0141232B08, 7, "A3DTrackData<A3DQUATERNION>");
	SetCnet(0x014122ACB0, 1, "A3DTextureMan");
	SetCnet(0x014122A440, 10, "A3DTexture");
	SetCnet(0x0141245238, 9, "A3DTerrainWater2SimpleRender");
	SetCnet(0x01412451F0, 8, "A3DTerrainWater2Render");
	SetCnet(0x01412454A8, 8, "A3DTerrainWater2NormalRender");
	SetCnet(0x01412454F0, 5, "A3DTerrainWater2NormalRender");
	SetCnet(0x0141231368, 1, "A3DTerrainWater2");
	SetCnet(0x0141291DB0, 1, "A3DTerrainOutline2");
	SetCnet(0x01412444F8, 1, "A3DTerrain2TexMerger");
	SetCnet(0x01412444E8, 1, "A3DTerrain2Render");
	SetCnet(0x01412332F0, 3, "A3DTerrain2Mask");
	SetCnet(0x0141235860, 10, "A3DTerrain2LoaderB");
	SetCnet(0x0141244700, 9, "A3DTerrain2LoaderA");
	SetCnet(0x01412357D8, 9, "A3DTerrain2Loader");
	SetCnet(0x0141246968, 1, "A3DTerrain2LOD");
	SetCnet(0x014123EEF8, 1, "A3DTerrain2Env");
	SetCnet(0x01412368A8, 6, "A3DTerrain2CullHC");
	SetCnet(0x0141233310, 3, "A3DTerrain2Block");
	SetCnet(0x0141230330, 8, "A3DTerrain2");
	SetCnet(0x0141231790, 5, "A3DSysCursor");
	SetCnet(0x014122DAA8, 1, "A3DSurfaceMan");
	SetCnet(0x014122E458, 2, "A3DSurface");
	SetCnet(0x0141246358, 13, "A3DSuppleMesh");
	SetCnet(0x0141247080, 24, "A3DSuperSpray");
	SetCnet(0x0141247D18, 3, "A3DSuperDecal");
	SetCnet(0x0141229088, 5, "A3DStream");
	SetCnet(0x014123EC20, 9, "A3DSpringJoint");
	SetCnet(0x0141235270, 24, "A3DSnow");
	SetCnet(0x0141234DF8, 7, "A3DSkySphere");
	SetCnet(0x01412471C8, 6, "A3DSky");
	SetCnet(0x0141232C88, 1, "A3DSklTrackSet");
	SetCnet(0x01412413B8, 15, "A3DSkinRenderWithEffect");
	SetCnet(0x01412410E8, 15, "A3DSkinRender");
	SetCnet(0x0141254788, 1, "A3DSkinPhysSyncDataMan");
	SetCnet(0x0141254730, 2, "A3DSkinPhysSyncData::ACTOR_DATA");
	SetCnet(0x0141254778, 1, "A3DSkinPhysSyncData");
	SetCnet(0x0141254120, 1, "A3DSkinPhysSync");
	SetCnet(0x0141236F68, 1, "A3DSkinModelMan");
	SetCnet(0x0141236A98, 7, "A3DSkinModelHanger");
	SetCnet(0x0141233570, 2, "A3DSkinModelActionCore");
	SetCnet(0x0141233588, 1, "A3DSkinModelAction");
	SetCnet(0x0141228AD8, 18, "A3DSkinModel");
	SetCnet(0x01412327A8, 1, "A3DSkinMeshMan");
	SetCnet(0x0141230A98, 17, "A3DSkinMesh");
	SetCnet(0x0141232208, 1, "A3DSkinMan");
	SetCnet(0x014122FA20, 2, "A3DSkin");
	SetCnet(0x01411C33C8, 5, "A3DSkillGfxMan");
	SetCnet(0x014109A890, 10, "A3DSkillGfxEvent");
	SetCnet(0x014122BFF0, 4, "A3DSkeletonHook");
	SetCnet(0x014125C428, 20, "A3DSkeletonEmitter");
	SetCnet(0x014128CCA0, 3, "A3DSkeletonBlend");
	SetCnet(0x014122C048, 16, "A3DSkeleton");
	SetCnet(0x0141247B20, 1, "A3DSimpleQuad");
	SetCnet(0x014124A228, 5, "A3DSharedStream");
	SetCnet(0x01412421A8, 10, "A3DShadowMap::A3DShadowMapTexture");
	SetCnet(0x014123E128, 1, "A3DShaderMan");
	SetCnet(0x0141243728, 11, "A3DShader");
	SetCnet(0x01412335A8, 1, "A3DSMActionChannel");
	SetCnet(0x014124B0D8, 5, "A3DRunTurnDynData");
	SetCnet(0x0141245A78, 14, "A3DRigidMesh");
	SetCnet(0x0141259258, 54, "A3DRibbon");
	SetCnet(0x014123DC08, 1, "A3DRenderTargetMan");
	SetCnet(0x0141233EA0, 5, "A3DRenderTarget");
	SetCnet(0x0141234C08, 24, "A3DRain");
	SetCnet(0x0141232B48, 7, "A3DQuaternionTrack");
	SetCnet(0x0141294008, 5, "A3DPostWarp");
	SetCnet(0x01412925F8, 5, "A3DPostSystem");
	SetCnet(0x01412940C8, 5, "A3DPostSunMoon");
	SetCnet(0x0141293010, 5, "A3DPostSilhouette");
	SetCnet(0x0141294158, 5, "A3DPostRadialBlurFast");
	SetCnet(0x0141294128, 5, "A3DPostRadialBlur");
	SetCnet(0x01412940F8, 5, "A3DPostMotionBlur");
	SetCnet(0x0141294098, 5, "A3DPostGodRay");
	SetCnet(0x0141294188, 5, "A3DPostFullGlow");
	SetCnet(0x01412941E8, 5, "A3DPostFlare");
	SetCnet(0x0141294068, 5, "A3DPostDof");
	SetCnet(0x01412941B8, 5, "A3DPostCC");
	SetCnet(0x0141294038, 5, "A3DPostBloom");
	SetCnet(0x01412938D8, 5, "A3DPostAA");
	SetCnet(0x0141293040, 5, "A3DPost");
	SetCnet(0x014125B5E8, 20, "A3DPointEmitter");
	SetCnet(0x014123DF90, 5, "A3DPixelShader");
	SetCnet(0x0141259D80, 8, "A3DPhysSimpleBreakableRBCreator");
	SetCnet(0x0141259CF0, 8, "A3DPhysRBCreator");
	SetCnet(0x014125BE60, 56, "A3DPhysPointEmitter");
	SetCnet(0x014125BC00, 1, "A3DPhysParticle");
	SetCnet(0x0141259D38, 8, "A3DPhysNoneBreakableRBCreator");
	SetCnet(0x014125A230, 5, "A3DPhysFluidSyncData");
	SetCnet(0x014125C548, 56, "A3DPhysFluidEmitter");
	SetCnet(0x014125BC10, 56, "A3DPhysEmitter");
	SetCnet(0x0141258EC0, 56, "A3DPhysElement");
	SetCnet(0x0141259DC8, 8, "A3DPhysBreakableRBCreator");
	SetCnet(0x0141259A30, 2, "A3DPhysActor");
	SetCnet(0x0141258950, 51, "A3DParticleSystemEx");
	SetCnet(0x0141234248, 24, "A3DParticleSystem");
	SetCnet(0x014125B140, 20, "A3DParticleEmitter");
	SetCnet(0x014124EE88, 51, "A3DParaboloid");
	SetCnet(0x0141248050, 24, "A3DPArray");
	SetCnet(0x0141292E60, 1, "A3DOutlineTextureCache");
	SetCnet(0x0141292E70, 1, "A3DOutlineTexture");
	SetCnet(0x01412367D0, 14, "A3DOrthoCamera");
	SetCnet(0x014125A1E0, 9, "A3DOrientFluidObjectDescCreator");
	SetCnet(0x0141241F48, 5, "A3DOcclusionProxySW");
	SetCnet(0x0141241BD8, 5, "A3DOcclusionProxyHW");
	SetCnet(0x0141241AB8, 5, "A3DOcclusionProxy");
	SetCnet(0x0141241EF0, 10, "A3DOcclusionManSW");
	SetCnet(0x0141241B50, 10, "A3DOcclusionManHW");
	SetCnet(0x0141241BA8, 5, "A3DOcclusionManHW");
	SetCnet(0x0141241AE8, 10, "A3DOcclusionMan");
	SetCnet(0x01411D23E8, 2, "A3DObject");
	SetCnet(0x014125A190, 9, "A3DNormalFluidObjectDescCreator");
	SetCnet(0x01412466D8, 13, "A3DMuscleMesh");
	SetCnet(0x014125B530, 20, "A3DMultiPlaneEmitter");
	SetCnet(0x0141240D78, 1, "A3DMoxMan");
	SetCnet(0x01412461D8, 18, "A3DMorphSkinMesh");
	SetCnet(0x0141246080, 15, "A3DMorphRigidMesh");
	SetCnet(0x01412430A0, 1, "A3DMorphMesh");
	SetCnet(0x014124CAF8, 1, "A3DModelPhysics");
	SetCnet(0x014124FED0, 2, "A3DModelPhysSyncData::ACTOR_DATA");
	SetCnet(0x014124FF28, 1, "A3DModelPhysSyncData");
	SetCnet(0x01412503B0, 1, "A3DModelPhysSync");
	SetCnet(0x014123FD38, 2, "A3DModel");
	SetCnet(0x0141241630, 1, "A3DMeshSorter");
	SetCnet(0x014123EA40, 1, "A3DMeshCollector");
	SetCnet(0x0141245158, 13, "A3DMeshBase");
	SetCnet(0x014122B990, 2, "A3DMesh");
	SetCnet(0x014122B800, 2, "A3DMaterial");
	SetCnet(0x014128CC88, 2, "A3DMatBlend");
	SetCnet(0x0141258548, 51, "A3DLtnTrail");
	SetCnet(0x0141231B98, 1, "A3DLitModelRender");
	SetCnet(0x014122B228, 2, "A3DLitModel");
	SetCnet(0x014122B200, 2, "A3DLitMesh");
	SetCnet(0x01412319A8, 1, "A3DLightMan");
	SetCnet(0x014122B7E8, 2, "A3DLight");
	SetCnet(0x014123EB30, 9, "A3DJoint");
	SetCnet(0x0141241048, 1, "A3DImageModelMan");
	SetCnet(0x0141247430, 1, "A3DHorizonCull");
	SetCnet(0x014128CCF0, 2, "A3DHermiteSpline");
	SetCnet(0x0141228B70, 7, "A3DHanger");
	SetCnet(0x0141242C70, 2, "A3DHLSLDataSrcInclude");
	SetCnet(0x0141242C88, 2, "A3DHLSLDataSrc");
	SetCnet(0x014122EDA8, 2, "A3DHLSLCore");
	SetCnet(0x014122EDC0, 1, "A3DHLSL::CONSTREGCONTEXT");
	SetCnet(0x014122EDD0, 2, "A3DHLSL");
	SetCnet(0x0141252E98, 16, "A3DHLPixelShaderA22");
	SetCnet(0x0141252C68, 16, "A3DHLPixelShader");
	SetCnet(0x01412581A8, 51, "A3DGridDecalEx");
	SetCnet(0x0141292BE8, 8, "A3DGrassRender");
	SetCnet(0x0141292BA0, 8, "A3DGrassHWInstanceRender");
	SetCnet(0x0141292D38, 8, "A3DGrassCollectRender");
	SetCnet(0x01412943C0, 5, "A3DGrassBlockHW");
	SetCnet(0x0141294380, 5, "A3DGrassBlock");
	SetCnet(0x0141246BA8, 2, "A3DGraphicsFX");
	SetCnet(0x014124A328, 3, "A3DGFXStatGroup");
	SetCnet(0x0141257FB0, 52, "A3DGFXSound");
	SetCnet(0x014124EB48, 51, "A3DGFXRing");
	SetCnet(0x0141246B90, 2, "A3DGFXPlayEvent");
	SetCnet(0x01412530B8, 1, "A3DGFXPhysDataMan");
	SetCnet(0x01412594B0, 51, "A3DGFXModelProxy");
	SetCnet(0x01412578F8, 51, "A3DGFXModel");
	SetCnet(0x014124ECE8, 51, "A3DGFXLtnBolt");
	SetCnet(0x0141257660, 57, "A3DGFXLightningEx");
	SetCnet(0x01412573C0, 57, "A3DGFXLightning");
	SetCnet(0x0141256AD8, 51, "A3DGFXLight");
	SetCnet(0x014124E980, 1, "A3DGFXKeyPointSet");
	SetCnet(0x01411E0078, 12, "A3DGFXKeyPointCtrlBase");
	SetCnet(0x014124A990, 8, "A3DGFXKeyPoint");
	SetCnet(0x0141253E28, 9, "A3DGFXInterfaceDefImpl2");
	SetCnet(0x014124A4A8, 9, "A3DGFXInterfaceDefImpl");
	SetCnet(0x014124A458, 9, "A3DGFXInterface");
	SetCnet(0x0141228BB0, 7, "A3DGFXHanger");
	SetCnet(0x014125AA80, 9, "A3DGFXFloatValueTrans");
	SetCnet(0x0141249AD0, 3, "A3DGFXEx");
	SetCnet(0x014124E9A8, 51, "A3DGFXElement");
	SetCnet(0x0141257C10, 51, "A3DGFXECModel");
	SetCnet(0x014124ACB0, 12, "A3DGFXCtrlScaleTrans");
	SetCnet(0x014124ADE8, 12, "A3DGFXCtrlScaleNoise");
	SetCnet(0x014124AD18, 12, "A3DGFXCtrlScaleChange");
	SetCnet(0x014124AAA8, 12, "A3DGFXCtrlRotAxis");
	SetCnet(0x014124AA40, 12, "A3DGFXCtrlRot");
	SetCnet(0x014124AB10, 12, "A3DGFXCtrlRevol");
	SetCnet(0x01411E00E0, 12, "A3DGFXCtrlNoiseBase");
	SetCnet(0x014124A9D8, 12, "A3DGFXCtrlMove");
	SetCnet(0x014124AE50, 12, "A3DGFXCtrlJitter");
	SetCnet(0x014124AEB8, 12, "A3DGFXCtrlCurveMove");
	SetCnet(0x014124AD80, 12, "A3DGFXCtrlColorNoise");
	SetCnet(0x014124ABE0, 12, "A3DGFXCtrlColorChange");
	SetCnet(0x014124AC48, 12, "A3DGFXCtrlClTrans");
	SetCnet(0x014124AB78, 12, "A3DGFXCtrlCentriMove");
	SetCnet(0x0141256FC8, 51, "A3DGFXContainer");
	SetCnet(0x014125AA30, 9, "A3DGFXAnimable");
	SetCnet(0x014122E668, 1, "A3DGDI");
	SetCnet(0x01411E9C40, 1, "A3DFrustum");
	SetCnet(0x01412330F0, 13, "A3DFrame");
	SetCnet(0x0141231830, 1, "A3DFontMan");
	SetCnet(0x014122FF88, 1, "A3DFont");
	SetCnet(0x0141232C48, 7, "A3DFloatTrack");
	SetCnet(0x014122E4F8, 5, "A3DFlatCollector");
	SetCnet(0x014122E3F8, 1, "A3DEnvironment");
	SetCnet(0x014122C4F0, 1, "A3DEngine");
	SetCnet(0x014125B488, 20, "A3DEllipsoidEmitter");
	SetCnet(0x014122F498, 10, "A3DEffect");
	SetCnet(0x0141293878, 6, "A3DDistantObjectRender");
	SetCnet(0x0141256CA0, 51, "A3DDecalEx");
	SetCnet(0x0141247C30, 3, "A3DDecal");
	SetCnet(0x014125B3E0, 20, "A3DCylinderEmitter");
	SetCnet(0x01412435A8, 18, "A3DCustomMeshImp");
	SetCnet(0x014125B338, 20, "A3DCurveEmitter");
	SetCnet(0x0141231760, 5, "A3DCursor");
	SetCnet(0x014123E648, 10, "A3DCubeTexture");
	SetCnet(0x01412475B0, 5, "A3DCoverageMap");
	SetCnet(0x01412316D8, 16, "A3DCoordinate");
	SetCnet(0x014123EBD0, 9, "A3DControlledJoint");
	SetCnet(0x014123EDE8, 1, "A3DControl");
	SetCnet(0x014124C190, 2, "A3DCombinedAction");
	SetCnet(0x014124B048, 5, "A3DCombActDynData");
	SetCnet(0x0141243510, 13, "A3DClothMeshImp");
	SetCnet(0x0141229010, 14, "A3DCameraBase");
	SetCnet(0x014122D5D8, 14, "A3DCamera");
	SetCnet(0x014123D7C0, 120, "A3DCBReleaseResRecorder");
	SetCnet(0x0141239DF8, 131, "A3DCBRecorder9");
	SetCnet(0x014123A218, 11, "A3DCBPlayer9");
	SetCnet(0x014125B290, 20, "A3DBoxEmitter");
	SetCnet(0x0141299978, 1, "A3DBoneMatrixControllerEx");
	SetCnet(0x014122BDE8, 1, "A3DBoneMatrixController");
	SetCnet(0x014122BDD8, 1, "A3DBoneController");
	SetCnet(0x014122BDF8, 1, "A3DBoneBodyTurnController");
	SetCnet(0x014122BE28, 2, "A3DBone");
	SetCnet(0x0141247E80, 2, "A3DBillBoard");
	SetCnet(0x014123EC70, 9, "A3DAxisSpringJoint");
	SetCnet(0x0141096328, 18, "A3DAutonomousAgent");
	SetCnet(0x0141168500, 19, "A3DAutoFish");
	SetCnet(0x0141168820, 19, "A3DAutoFirefly");
	SetCnet(0x01411686E0, 19, "A3DAutoEagle");
	SetCnet(0x01411685A0, 19, "A3DAutoDoltishFish");
	SetCnet(0x01411688C0, 19, "A3DAutoCrow");
	SetCnet(0x0141168780, 19, "A3DAutoButterfly");
	SetCnet(0x0141168640, 19, "A3DAutoBriskFish");
	SetCnet(0x0141168460, 3, "A3DAutoBehaviourWander");
	SetCnet(0x0141168480, 3, "A3DAutoBehaviourHover");
	SetCnet(0x01410963D0, 3, "A3DAutoBehaviourFleeAndBack");
	SetCnet(0x01411684E0, 3, "A3DAutoBehaviourFlee");
	SetCnet(0x01411684A0, 3, "A3DAutoBehaviourBoid");
	SetCnet(0x01411684C0, 3, "A3DAutoBehaviourArrival");
	SetCnet(0x014125B1E8, 20, "A3DAreaEmitter");
	SetCnet(0x0141255DE8, 20, "A3DAnimatable_PSConstVector4");
	SetCnet(0x0141255C98, 20, "A3DAnimatable_PSConstVector3");
	SetCnet(0x0141255B48, 20, "A3DAnimatable_PSConstVector2");
	SetCnet(0x01412558A8, 20, "A3DAnimatable_PSConstInt");
	SetCnet(0x01412559F8, 20, "A3DAnimatable_PSConstFloat");
	SetCnet(0x0141255F38, 20, "A3DAnimatable_PSConstColor");
	SetCnet(0x01412565C8, 20, "A3DAnimatable_ApplyNoneVector4");
	SetCnet(0x0141256478, 20, "A3DAnimatable_ApplyNoneVector3");
	SetCnet(0x0141256328, 20, "A3DAnimatable_ApplyNoneVector2");
	SetCnet(0x0141256088, 20, "A3DAnimatable_ApplyNoneInt");
	SetCnet(0x01412561D8, 20, "A3DAnimatable_ApplyNoneFloat");
	SetCnet(0x0141256718, 20, "A3DAnimatable_ApplyNoneColor");
	SetCnet(0x0141255D40, 20, "A3DAnimatableImpl<1,A3DAnimatableVector4Adapter>");
	SetCnet(0x0141255BF0, 20, "A3DAnimatableImpl<1,A3DAnimatableVector3Adapter>");
	SetCnet(0x0141255AA0, 20, "A3DAnimatableImpl<1,A3DAnimatableVector2Adapter>");
	SetCnet(0x0141255800, 20, "A3DAnimatableImpl<1,A3DAnimatableIntAdapter>");
	SetCnet(0x0141255950, 20, "A3DAnimatableImpl<1,A3DAnimatableFloatAdapter>");
	SetCnet(0x0141255E90, 20, "A3DAnimatableImpl<1,A3DAnimatableColorAdapter>");
	SetCnet(0x0141256520, 20, "A3DAnimatableImpl<0,A3DAnimatableVector4Adapter>");
	SetCnet(0x01412563D0, 20, "A3DAnimatableImpl<0,A3DAnimatableVector3Adapter>");
	SetCnet(0x0141256280, 20, "A3DAnimatableImpl<0,A3DAnimatableVector2Adapter>");
	SetCnet(0x0141255FE0, 20, "A3DAnimatableImpl<0,A3DAnimatableIntAdapter>");
	SetCnet(0x0141256130, 20, "A3DAnimatableImpl<0,A3DAnimatableFloatAdapter>");
	SetCnet(0x0141256670, 20, "A3DAnimatableImpl<0,A3DAnimatableColorAdapter>");
	SetCnet(0x014123EB80, 9, "A3DAnimJoint");
	SetCnet(0x0141270A68, 18, "A3DAlterableSkinModel");
	SetCnet(0x014125A438, 2, "A3DAdhereMesh");
	SetCnet(0x0141246AE8, 1, "A3DAbsTrackMaker");
	SetCnet(0x014122D688, 2, "A2DSpriteTextures");
	SetCnet(0x0141240A48, 1, "A2DSpriteTexMan");
	SetCnet(0x014122D360, 2, "A2DSprite");
	SetCnet(0x0141269C88, 1, "A2DDotLineMan");
	SetCnet(0x0141270930, 1, "A2DDotLine");
#else //WIN32
	SetCnet(0xFFFFFFFF, 0, "nop");
	SetCnet(0x011211A4, 18, "A3DAutonomousAgent");
	SetCnet(0x01121204, 3, "A3DAutoBehaviourFleeAndBack");
	SetCnet(0x01121234, 4, "CECSceneThreadObj");
	SetCnet(0x01121248, 1, "CECBezierPoint");
	SetCnet(0x01121250, 1, "CECBezierSeg");
	SetCnet(0x01121258, 4, "CECBezier");
	SetCnet(0x0112126C, 1, "CECBezierWalker");
	SetCnet(0x01121274, 1, "CHBasedCD::CHalfSpace");
	SetCnet(0x011212EC, 29, "CECBrushMan");
	SetCnet(0x01123B28, 3, "CBrushProvider");
	SetCnet(0x01123B38, 3, "CELBrushBuilding");
	SetCnet(0x01123B50, 1, "CELCloudManager");
	SetCnet(0x01123B84, 1, "AArray<void *,void *>");
	SetCnet(0x01123B8C, 1, "APtrArray<CELTree *>");
	SetCnet(0x01123B94, 1, "APtrArray<CStaticModelObject *>");
	SetCnet(0x01123CAC, 1, "APtrArray<CELPrecinct::MARK *>");
	SetCnet(0x01123CB4, 1, "APtrArray<AString *>");
	SetCnet(0x01123CBC, 1, "CELPrecinct");
	SetCnet(0x01123CC4, 1, "CELPrecinctSet");
	SetCnet(0x01123D54, 1, "CELRegion");
	SetCnet(0x01123D5C, 1, "CELTransportBox");
	SetCnet(0x01123D64, 1, "CELRegionSet");
	SetCnet(0x01123D90, 1, "AArray<CELTree::ELTREE,CELTree::ELTREE &>");
	SetCnet(0x01123D98, 1, "CELTree");
	SetCnet(0x01124400, 1, "AArray<int,int>");
	SetCnet(0x01124408, 1, "AArray<A3DMATRIX4,A3DMATRIX4 &>");
	SetCnet(0x01124410, 1, "CExpression");
	SetCnet(0x01124418, 1, "CFaceAnimation");
	SetCnet(0x01124420, 1, "CFaceBone");
	SetCnet(0x01124428, 1, "CFaceBoneController");
	SetCnet(0x0112466C, 7, "CGfxMoveBase");
	SetCnet(0x0112468C, 7, "CGfxLinearMove");
	SetCnet(0x011246AC, 7, "CGfxParabolicMove");
	SetCnet(0x011246CC, 7, "CGfxMissileMove");
	SetCnet(0x011246EC, 7, "CGfxMeteoricMove");
	SetCnet(0x0112470C, 7, "CGfxHelixMove");
	SetCnet(0x0112472C, 7, "CGfxCurvedMove");
	SetCnet(0x0112474C, 7, "CGfxAccMove");
	SetCnet(0x0112476C, 7, "CGfxOnTargetMove");
	SetCnet(0x0112478C, 7, "CGfxLinkMove");
	SetCnet(0x011247AC, 7, "CGfxRandMove");
	SetCnet(0x011247CC, 10, "A3DSkillGfxEvent");
	SetCnet(0x01124BE8, 2, "std::exception");
	SetCnet(0x01124BF4, 2, "std::bad_cast");
	SetCnet(0x01124D20, 15, "std::basic_filebuf<char,std::char_traits<char> >");
	SetCnet(0x01124D60, 1, "std::basic_ofstream<char,std::char_traits<char> >");
	SetCnet(0x01124DC4, 15, "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >");
	SetCnet(0x01124E04, 1, "std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >");
	SetCnet(0x011254E0, 1, "GNET::Octets");
	SetCnet(0x011254E8, 1, "GNET::Marshal::OctetsStream");
	SetCnet(0x01125740, 7, "EditBoxItemBase");
	SetCnet(0x01125760, 7, "PlayerscoreEditBoxItem");
	SetCnet(0x01125780, 7, "WorldPosEditBoxItem");
	SetCnet(0x011257A0, 7, "PlayerPosEditBoxItem");
	SetCnet(0x011257C0, 7, "HomeItemEditBoxItem");
	SetCnet(0x011257E0, 7, "CommonHomeItemEditBoxItem");
	SetCnet(0x01125800, 7, "SimulatorEditBoxItem");
	SetCnet(0x01125820, 7, "DriftBottleEditBoxItem");
	SetCnet(0x01125840, 7, "GuildBattleHistoryEditBoxItem");
	SetCnet(0x01125860, 7, "OpenDialogEditBoxItem");
	SetCnet(0x011258C8, 1, "AUI_ImageGrid");
	SetCnet(0x011258F4, 41, "CDlgActive");
	SetCnet(0x01125A18, 41, "CDlgActiveList");
	SetCnet(0x01125B58, 2, "IECTaskTrigger");
	SetCnet(0x01125B64, 41, "CDlgActiveListItem");
	SetCnet(0x01125C0C, 2, "ActiveTaskTrigger");
	SetCnet(0x01125CE0, 41, "CDlgActiveMain");
	SetCnet(0x01125DF8, 3, "CECPendingLogoutFull");
	SetCnet(0x01125E20, 41, "CDlgActiveStay");
	SetCnet(0x01125F4C, 41, "CDlgAnimationEsc");
	SetCnet(0x0112600C, 41, "CDlgAnimationTalk");
	SetCnet(0x0112615C, 41, "CDlgActiveTaskIntro");
	SetCnet(0x011262BC, 41, "CDlgActiveTaskIntroList");
	SetCnet(0x01126398, 41, "CDlgActiveTaskIntroListItem");
	SetCnet(0x011265C8, 41, "CDlgAnniversary2020");
	SetCnet(0x01126894, 41, "CDlgAnniversary2020Entrance");
	SetCnet(0x01126968, 41, "CDlgAnniversary2020ProgGfx");
	SetCnet(0x01126A28, 41, "CDlgAnniversary2020RewardEvent");
	SetCnet(0x01126B44, 41, "CDlgAnniversary2020SigninEvent");
	SetCnet(0x01126BFC, 41, "CDlgAnniversary2020TaskEvent");
	SetCnet(0x01126D48, 41, "CDlgAppreciateFlyAndPetMain");
	SetCnet(0x01126E14, 50, "CDlgAppreciateSeriseObj");
	SetCnet(0x01126FC8, 41, "CDlgFlyPetSubBase");
	SetCnet(0x01127070, 41, "CDlgAppreciateFlySub");
	SetCnet(0x01127118, 41, "CDlgAppreciateRidePetSub");
	SetCnet(0x011271C0, 41, "CDlgAppreciateViewPetSub");
	SetCnet(0x01127268, 8, "CECCoolDownTimer<>");
	SetCnet(0x011272C0, 6, "std::_Func_base<void>");
	SetCnet(0x011272DC, 6, "std::_Func_impl<<lambda_df84efe6ed8aaec3947fee42077e50bc>,std::allocator<int>,void>");
	SetCnet(0x01127308, 41, "CDlgAppreciateFlyDiff");
	SetCnet(0x011274EC, 41, "CDlgAppreciateFlyInfo");
	SetCnet(0x011276EC, 41, "CDlgAppreciateFlyBagList");
	SetCnet(0x01127820, 41, "CDlgAppreciateMsgFirst");
	SetCnet(0x011279D0, 41, "CDlgAppreciatePetList");
	SetCnet(0x01127B28, 50, "CDlgAppreciatePetPlaneSearch");
	SetCnet(0x01127C10, 41, "CDlgAppreciateRidePetInfo");
	SetCnet(0x01127D24, 41, "CDlgAppreciateViewPetInfo");
	SetCnet(0x01127E04, 41, "CDlgCollectionAwardHint");
	SetCnet(0x01127EDC, 41, "CDlgCollectionCarnivalMain");
	SetCnet(0x01127F94, 41, "CDlgCollectionCoverParts");
	SetCnet(0x0112819C, 41, "CDlgCollectionSeriesAward");
	SetCnet(0x01128308, 41, "CDlgCollectionTotalAward");
	SetCnet(0x011283E4, 41, "CDlgCollectionTotalButton");
	SetCnet(0x011284B4, 1, "CCommonDataEventListener");
	SetCnet(0x011284CC, 2, "IDlgHSVBase");
	SetCnet(0x011284D8, 41, "CDlgPaletteHSVBase");
	SetCnet(0x01128580, 2, "CDlgPaletteHSVBase");
	SetCnet(0x01128658, 3, "GNET::Marshal");
	SetCnet(0x01128668, 3, "GNET::CompactUINT");
	SetCnet(0x01128678, 10, "GNET::Protocol");
	SetCnet(0x011286A4, 6, "GNET::GRoleInventory");
	SetCnet(0x011286C0, 6, "GNET::RpcDataVector<GNET::GRoleInventory>");
	SetCnet(0x011286DC, 6, "GNET::RoleInfo");
	SetCnet(0x011286F8, 10, "GNET::KeyReestablish");
	SetCnet(0x01128C34, 3, "GNET::STLContainer<std::vector<GNET::GRoleInventory,std::allocator<GNET::GRoleInventory> > >");
	SetCnet(0x01128CB4, 1, "DataPathMan");
	SetCnet(0x01128F84, 4, "Mouse");
	SetCnet(0x01128FB4, 4, "Process");
	SetCnet(0x0112900C, 3, "StackInfoCollection::CallerStackInfo");
	SetCnet(0x0112901C, 4, "StackInfoCollection");
	SetCnet(0x01129050, 2, "CECMessageBoxHandleBase");
	SetCnet(0x0112905C, 41, "CDlgAcrossServerMatchMain");
	SetCnet(0x01129104, 44, "CDlgActivityItem");
	SetCnet(0x011291B8, 41, "CDlgAcrossServerMatch");
	SetCnet(0x01129260, 41, "CDlgAcrossServerMatchRet");
	SetCnet(0x01129308, 41, "CDlgAcrossServerInvite");
	SetCnet(0x011293B0, 41, "CDlgAcrossInviteResault");
	SetCnet(0x01129458, 10, "GNET::CrossMatchActTime");
	SetCnet(0x011294A4, 2, "`public: void __thiscall CDlgAcrossServerMatch::OnCommand_Cancel(0xchar const *)'::`2'::ExitMatch");
	SetCnet(0x0112961C, 2, "`public: void __thiscall CDlgAcrossServerMatchRet::OnCommand_Quit(0xchar const *)'::`2'::SecondEnsure");
	SetCnet(0x01129784, 41, "CDlgActivity");
	SetCnet(0x011299A4, 41, "CDlgAdvertisement");
	SetCnet(0x01129B50, 39, "CDlgAgreement");
	SetCnet(0x01129C60, 45, "CDlgApprenticing");
	SetCnet(0x01129DBC, 45, "CDlgApprenticingApplyList");
	SetCnet(0x01129EC8, 41, "CDlgApprenticingLeaveWords");
	SetCnet(0x01129F7C, 41, "CDlgArenaBattleGFXCountDown");
	SetCnet(0x0112A034, 41, "CDlgArenaBattlePoint");
	SetCnet(0x0112A0DC, 2, "IconLayoutVerticalRightToLeft");
	SetCnet(0x0112A160, 41, "CDlgArenaBattleResult");
	SetCnet(0x0112A3B8, 41, "CDlgArenaChooseMatch");
	SetCnet(0x0112A48C, 2, "`public: void __thiscall CDlgArenaChooseMatch::OnCommandBtnQueue(0xchar const *)'::`8'::PersonMatchHandler");
	SetCnet(0x0112A4A8, 41, "CDlgArenaEnemyFakeTeamMate");
	SetCnet(0x0112A5BC, 41, "CDlgArenaEnterTag");
	SetCnet(0x0112A6E8, 2, "`public: void __thiscall CDlgArenaEnterTag::OnCommandBtnCancel(0xchar const *)'::`2'::EnterTagHandler");
	SetCnet(0x0112A710, 41, "CDlgArenaInputTeamName");
	SetCnet(0x0112A7D0, 2, "`public: void __thiscall CDlgArenaInputTeamName::OnCommandBtnCreateTeam(0xchar const *)'::`2'::CreateTeamHandler");
	SetCnet(0x0112A7DC, 2, "ArenaCreateTeamMessageBoxHandler");
	SetCnet(0x0112A7F8, 41, "CDlgArenaSelfTeamInfo");
	SetCnet(0x0112A93C, 2, "`public: void __thiscall CDlgArenaSelfTeamInfo::OnCommandBtnLeaveTeam(0xchar const *)'::`4'::LeaveTeamHandler");
	SetCnet(0x0112A948, 2, "`public: void __thiscall CDlgArenaSelfTeamInfo::OnCommandBtnKickOut(0xchar const *)'::`2'::KickOutTeamHandler");
	SetCnet(0x0112A9A8, 41, "CDlgArenaLeave");
	SetCnet(0x0112AA5C, 2, "`public: void __thiscall CDlgArenaLeave::OnCommandBtnLeave(0xchar const *)'::`4'::ArenaLeaveHandler");
	SetCnet(0x0112AA70, 41, "CDlgArenaMatchingTag");
	SetCnet(0x0112AB18, 10, "GNET::ArenaMatchCancelNotify");
	SetCnet(0x0112ABA8, 41, "CDlgArenaMyFakeTeamMain");
	SetCnet(0x0112AC50, 2, "IconLayoutVertical");
	SetCnet(0x0112AC5C, 2, "IconLayoutBig");
	SetCnet(0x0112ACB0, 41, "CDlgArenaMyFakeTeamMate");
	SetCnet(0x0112ADBC, 41, "CDlgArenaOptionName");
	SetCnet(0x0112AE80, 41, "CDlgArenaOtherTeamInfo");
	SetCnet(0x0112AF44, 41, "CDlgArenaPersonRankList");
	SetCnet(0x0112B03C, 41, "CDlgArenaQuickTeam");
	SetCnet(0x0112B100, 41, "CDlgArenaQuickTeamSub");
	SetCnet(0x0112B1C4, 1, "APtrArray<AUISubDialog *>");
	SetCnet(0x0112B1CC, 1, "APtrArray<AUIDialog *>");
	SetCnet(0x0112B1D4, 41, "CDlgArenaQuickTeamSubList");
	SetCnet(0x0112B288, 41, "CDlgArenaTeamDetail");
	SetCnet(0x0112B338, 41, "CDlgArenaTeamRankList");
	SetCnet(0x0112B428, 41, "CDlgArrangeTeam");
	SetCnet(0x0112B6FC, 41, "CDlgAskHelpToGM");
	SetCnet(0x0112B864, 41, "CDlgAskHelpToGM2");
	SetCnet(0x0112B90C, 1, "ReportItemsFilter");
	SetCnet(0x0112B96C, 41, "CDlgAstrolabe");
	SetCnet(0x0112BC00, 2, "`public: void __thiscall CDlgAstrolabe::CheckMoneyLocked(0xbool)'::`2'::AstrolabeLockedMoneyMessageBoxHandler");
	SetCnet(0x0112BC14, 41, "CDlgAstrolabeIncPointValue");
	SetCnet(0x0112BD04, 41, "CDlgAstrolabeRandomAddOn");
	SetCnet(0x0112BE0C, 3, "CECUIHelper::ObjectArrayInitCallback");
	SetCnet(0x0112BE1C, 41, "CDlgAstrolabeSwallow");
	SetCnet(0x0112BEE8, 3, "CECUIHelper::DefaultObjectArrayInitCallback<AUIObject>");
	SetCnet(0x0112BFE8, 47, "CDlgAuctionBase");
	SetCnet(0x0112C0A8, 6, "GNET::GAuctionItem");
	SetCnet(0x0112C2E4, 47, "CDlgAuctionBuyList");
	SetCnet(0x0112C3A4, 6, "GNET::GAuctionDetail");
	SetCnet(0x0112C554, 47, "CDlgAuctionList");
	SetCnet(0x0112C6B4, 47, "CDlgAuctionSellList");
	SetCnet(0x0112C774, 5, "CECShortcutMgr::ClickShortcut");
	SetCnet(0x0112C7A4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgAuctionSellList>");
	SetCnet(0x0112C834, 42, "CDlgAutoCloseBase");
	SetCnet(0x0112C8E8, 41, "CDlgAutoHelp");
	SetCnet(0x0112C9D0, 41, "CDlgAutoHPMP");
	SetCnet(0x0112CA94, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgAutoHPMP>");
	SetCnet(0x0112CAF4, 41, "CDlgAutoLock");
	SetCnet(0x0112CD14, 6, "std::_Func_impl<<lambda_588430986266b8973b8272cc8092013a>,std::allocator<int>,void>");
	SetCnet(0x0112CD40, 41, "CDlgAutoMove");
	SetCnet(0x0112CE9C, 41, "CDlgAutoNewGuide");
	SetCnet(0x0112D014, 41, "CDlgAutoPolicy");
	SetCnet(0x0112D1F4, 41, "CDlgAutoTask");
	SetCnet(0x0112D334, 41, "CDlgAward");
	SetCnet(0x0112D3DC, 2, "`public: void __thiscall CDlgAward::OnCommand_confirm(0xchar const *)'::`14'::ChooseAwardNPCMessageBoxHandler");
	SetCnet(0x0112D3E8, 2, "`public: void __thiscall CDlgAward::OnCommand_confirm(0xchar const *)'::`23'::SpendContributionMessageBoxHandler");
	SetCnet(0x0112D3F4, 2, "`public: void __thiscall CDlgAward::OnCommand_confirm(0xchar const *)'::`30'::ChooseAwardMessageBoxHandler");
	SetCnet(0x0112D44C, 41, "CDlgAwardSubItem");
	SetCnet(0x0112D534, 41, "CDlgBackHelp");
	SetCnet(0x0112D644, 41, "CDlgBackOthers");
	SetCnet(0x0112D7C8, 41, "CDlgBackSelf");
	SetCnet(0x0112D960, 6, "CDlgBarrage::BarrageItem");
	SetCnet(0x0112D97C, 41, "CDlgBarrage");
	SetCnet(0x0112DA34, 6, "NormalBarrageItem");
	SetCnet(0x0112DA60, 41, "CDlgBarrageSend");
	SetCnet(0x0112DB60, 41, "CDlgBase");
	SetCnet(0x0112DC08, 41, "CDlgDynamicControl");
	SetCnet(0x0112DD6C, 41, "CDlgBattleRoyaleMap");
	SetCnet(0x0112DE58, 41, "CDlgBBS");
	SetCnet(0x0112E110, 41, "CDlgBibleRefine");
	SetCnet(0x0112E1EC, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgBibleRefine>");
	SetCnet(0x0112E268, 2, "`public: void __thiscall CDlgBibleRefine::OnCommandRefine(0xchar const *)'::`10'::CECBibleBindMessageBoxHandler");
	SetCnet(0x0112E29C, 3, "CECItemPropertyZoomer");
	SetCnet(0x0112E2AC, 3, "CECItemPropertyDefaultZoomer");
	SetCnet(0x0112E2C4, 41, "CDlgBibleRefineBase");
	SetCnet(0x0112E384, 42, "CDlgBibleRefineFail");
	SetCnet(0x0112E438, 41, "CDlgBibleRefinePreviewSub");
	SetCnet(0x0112E4FC, 42, "CDlgBibleRefineProgress");
	SetCnet(0x0112E5BC, 42, "CDlgBibleRefineSuccess");
	SetCnet(0x0112E678, 41, "CDlgBibleRefineTrans");
	SetCnet(0x0112E748, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgBibleRefineTrans>");
	SetCnet(0x0112E7A4, 2, "`public: void __thiscall CDlgBibleRefineTrans::OnCommandTrans(0xchar const *)'::`13'::CECBibleBindMessageBoxHandler");
	SetCnet(0x0112E7CC, 42, "CDlgBlackList");
	SetCnet(0x0112E8E4, 43, "CDlgBooth");
	SetCnet(0x0112E994, 43, "CDlgBoothSelf");
	SetCnet(0x0112EA44, 41, "CDlgBoothSet");
	SetCnet(0x0112EB54, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgBooth>");
	SetCnet(0x0112ED40, 41, "CDlgBossRushMain");
	SetCnet(0x0112EDE8, 41, "CDlgBossRushStart");
	SetCnet(0x0112EE90, 41, "CDlgBossRushAward");
	SetCnet(0x0112EFEC, 41, "CDlgBroadCast");
	SetCnet(0x0112F21C, 1, "AList2<CDlgBShop::AuctionMessage,CDlgBShop::AuctionMessage &>");
	SetCnet(0x0112F224, 41, "CDlgBShop");
	SetCnet(0x0112F494, 1, "AList2<CDlgBShop::AuctionMessage,CDlgBShop::AuctionMessage &>::c_NodePool");
	SetCnet(0x0112F4A4, 41, "CDlgBuddyState");
	SetCnet(0x0112F580, 5, "CECBuyCommand");
	SetCnet(0x0112F598, 5, "CECShopBuyCommand");
	SetCnet(0x0112F5B0, 5, "CECRandShopBuyCommand");
	SetCnet(0x0112F5C8, 41, "CDlgBuyConfirm");
	SetCnet(0x0112F734, 41, "CDlgBuyItemSearch");
	SetCnet(0x0112F7DC, 41, "CDlgBuyItemSubList");
	SetCnet(0x0112F884, 41, "CDlgBuyItemSub");
	SetCnet(0x0112FA68, 41, "CDlgCamera");
	SetCnet(0x0112FBF4, 41, "CDlgCampMain");
	SetCnet(0x0112FCBC, 2, "`void __cdecl NPCServCampJoinQuit(0xint,int,int,int,bool)'::`2'::CampJoinQuitMsgHandler");
	SetCnet(0x0112FCF0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgCampChange>");
	SetCnet(0x0112FE54, 41, "CDlgCampHelpBase");
	SetCnet(0x0112FF70, 2, "CCommonDataEventInterface");
	SetCnet(0x0112FF7C, 41, "CDlgCampKillRank");
	SetCnet(0x01130024, 2, "CDlgCampKillRank");
	SetCnet(0x0113003C, 6, "GNET::CampRankData");
	SetCnet(0x01130058, 6, "GNET::RpcDataVector<GNET::CampRankData>");
	SetCnet(0x01130074, 41, "CDlgCampRank");
	SetCnet(0x011301AC, 3, "GNET::STLContainer<std::vector<GNET::CampRankData,std::allocator<GNET::CampRankData> > >");
	SetCnet(0x011301C4, 41, "CDlgCampResult");
	SetCnet(0x011302BC, 41, "CDlgCampStatistic");
	SetCnet(0x011303C0, 43, "CDlgCampTokenCommon");
	SetCnet(0x01130470, 3, "CDlgCampToken::CECUpgradeTimer");
	SetCnet(0x01130480, 3, "CDlgCampToken::BezierDlgObjMovement");
	SetCnet(0x01130490, 44, "CDlgCampToken");
	SetCnet(0x01130544, 3, "CDlgCampTokenTree::MovementAlongTreeNode");
	SetCnet(0x01130554, 43, "CDlgCampTokenTree");
	SetCnet(0x01130730, 3, "`public: void __thiscall CDlgCampTokenTree::UpdateOpenNode(0xunsigned char,unsigned char)'::`4'::CECUpdateProbTimer");
	SetCnet(0x01130758, 2, "`public: void __thiscall CDlgCampTokenTree::OnCommandActive(0xchar const *)'::`2'::ActiveNewNodeMsgHandler");
	SetCnet(0x01130764, 3, "`public: void __thiscall CDlgCampTokenTree::OnCommandUpgrade(0xchar const *)'::`5'::CECEnableBtnTimer");
	SetCnet(0x01130774, 2, "RollbackTreeMsgHandler");
	SetCnet(0x0113078C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgCampTokenTree>");
	SetCnet(0x01130800, 41, "CDlgCampTree");
	SetCnet(0x011308A8, 2, "CDlgCampTree");
	SetCnet(0x01130934, 41, "CDlgCarrierOpSimple");
	SetCnet(0x011309DC, 41, "CDlgCarrierOp");
	SetCnet(0x01130AD0, 41, "CDlgCarrierUp");
	SetCnet(0x01130B98, 41, "CDlgCarrierUpSimple");
	SetCnet(0x01130CC4, 41, "CDlgChangeSkirt");
	SetCnet(0x01130E98, 41, "CDlgChannelChat");
	SetCnet(0x01130F40, 6, "GNET::GChatMember");
	SetCnet(0x01130F5C, 6, "GNET::RpcDataVector<GNET::GChatMember>");
	SetCnet(0x01130F78, 6, "GNET::GRoomDetail");
	SetCnet(0x01131094, 3, "GNET::STLContainer<std::vector<GNET::GChatMember,std::allocator<GNET::GChatMember> > >");
	SetCnet(0x011310AC, 41, "CDlgChannelCreate");
	SetCnet(0x011311C4, 41, "CDlgChannelJoin");
	SetCnet(0x0113126C, 6, "GNET::GChatRoom");
	SetCnet(0x01131374, 41, "CDlgChannelOption");
	SetCnet(0x01131454, 41, "CDlgChannelPW");
	SetCnet(0x0113150C, 41, "CDlgCharacter");
	SetCnet(0x01131AE8, 1, "GNET::TankBattlePlayerScoreInfo");
	SetCnet(0x01131B04, 41, "CDlgChariotEnter");
	SetCnet(0x01131BAC, 41, "CDlgChariotInfo");
	SetCnet(0x01131FB0, 41, "CDlgChat");
	SetCnet(0x01132278, 2, "CrossServerCryMessageBoxHandler");
	SetCnet(0x01132284, 2, "`public: void __thiscall CDlgChat::OnCommand_speak(0xchar const *)'::`96'::SendNorthLandData");
	SetCnet(0x01132290, 2, "`public: void __thiscall CDlgChat::OnCommand_speak(0xchar const *)'::`151'::SendAllianceChatData");
	SetCnet(0x0113246C, 2, "`protected: void __thiscall CDlgChat::DoSendCountryMessageInMsgBox(0xint,int,bool,wchar_t const *,bool)'::`2'::DoSendCountryMsgMessageBoxHandler");
	SetCnet(0x01132524, 41, "CDlgChronicle");
	SetCnet(0x01132664, 41, "CDlgChronicleSub");
	SetCnet(0x01132794, 41, "CDlgCollectionAwardShow");
	SetCnet(0x0113285C, 41, "CDlgCollectionBg");
	SetCnet(0x01132ABC, 41, "CDlgCollectionClothesCtrl");
	SetCnet(0x01132BC4, 41, "CDlgCollectionClothesDetail");
	SetCnet(0x01132D64, 41, "CDlgCollectionClothesDye");
	SetCnet(0x01132F64, 41, "CDlgCollectionClothesInv");
	SetCnet(0x01133028, 41, "CDlgCollectionClothesMain");
	SetCnet(0x01133128, 42, "CDlgCollectionClothesPalette");
	SetCnet(0x011331E8, 41, "CDlgCollectionClothesSub");
	SetCnet(0x011332A0, 41, "CDlgCollectionClothesSubAll");
	SetCnet(0x01133368, 41, "CDlgCollectionCover");
	SetCnet(0x01133460, 41, "CDlgCollectionListBox");
	SetCnet(0x01133520, 41, "CDlgCollectionMain");
	SetCnet(0x011335F8, 41, "CDlgCollectionMessage");
	SetCnet(0x011336F4, 41, "CDlgCollectionMessageBox");
	SetCnet(0x011337CC, 41, "CDlgCollectionSearch");
	SetCnet(0x0113387C, 4, "CECObserver<CECComboSkillState>");
	SetCnet(0x01133890, 41, "CDlgComboShortCutBar");
	SetCnet(0x01133938, 4, "CDlgComboShortCutBar");
	SetCnet(0x011339A0, 41, "CDlgCommerateBookContents");
	SetCnet(0x01133A48, 41, "CDlgCommerateBookContentsSub");
	SetCnet(0x01133C60, 42, "CDlgCommerateBookCover");
	SetCnet(0x01133D2C, 42, "CDlgCommerateBookMain");
	SetCnet(0x01133DD8, 41, "CDlgCommerateBookModel");
	SetCnet(0x01133E80, 41, "CDlgCommerateBookBtn");
	SetCnet(0x01134984, 41, "CDlgComplexTitle");
	SetCnet(0x01134AA0, 41, "CDlgCongregate");
	SetCnet(0x01134B64, 41, "CDlgConsole");
	SetCnet(0x01134C2C, 41, "CDlgConsoleVariable");
	SetCnet(0x01134D64, 41, "CDlgConsoleVariableSubListItem");
	SetCnet(0x01134EDC, 41, "CDlgConsoleVariableSubList");
	SetCnet(0x01134F90, 41, "CDlgCountDown");
	SetCnet(0x01135064, 41, "CDlgCountryMap");
	SetCnet(0x0113510C, 41, "CDlgCountryMove");
	SetCnet(0x011356F8, 41, "CDlgCountryMapSub");
	SetCnet(0x011357FC, 41, "CDlgCountryReward");
	SetCnet(0x011358C8, 41, "CDlgCountryScore");
	SetCnet(0x01135A38, 1, "CSequenceImageAnimator");
	SetCnet(0x01135A40, 41, "CDlgCountryWarMap");
	SetCnet(0x01135B50, 2, "PosConvertorCountryWar");
	SetCnet(0x01135C3C, 41, "CDlgCouple");
	SetCnet(0x01135EDC, 42, "CDlgCoupleAward");
	SetCnet(0x01135FB8, 42, "CDlgCoupon");
	SetCnet(0x011361AC, 42, "CDlgCreateRace2020");
	SetCnet(0x01136258, 42, "CDlgCreate2020");
	SetCnet(0x0113639C, 3, "`public: void __thiscall CDlgCreate2020::OnCommand_SelectProfession(0xchar const *)'::`28'::CECProfDisplayTimer");
	SetCnet(0x01136494, 3, "`public: void __thiscall CDlgCreate2020::StartScreenEffect(0xint)'::`2'::CECCreateSwitchSceneTimer");
	SetCnet(0x011364A4, 41, "CDlgCrossServerCryMsg");
	SetCnet(0x01136578, 43, "CDlgCustomize");
	SetCnet(0x01136638, 43, "CDlgCustomizeBase");
	SetCnet(0x01136830, 43, "CDlgCustomizeEye");
	SetCnet(0x011368E0, 43, "CDlgCustomizeEye2");
	SetCnet(0x01136FA8, 43, "CDlgCustomizeFace");
	SetCnet(0x01137058, 43, "CDlgCustomizeFace2");
	SetCnet(0x0113757C, 43, "CDlgCustomizeHair");
	SetCnet(0x01137880, 43, "CDlgCustomizeNoseMouth");
	SetCnet(0x01137930, 43, "CDlgCustomizeNoseMouth2");
	SetCnet(0x01137E88, 43, "CDlgCustomizePaint");
	SetCnet(0x011380B0, 43, "CDlgCustomizePre");
	SetCnet(0x011382A4, 43, "CDlgCustomizeStature");
	SetCnet(0x011383E4, 41, "CDlgCutoffStudent");
	SetCnet(0x011384B8, 41, "CDlgCWindow");
	SetCnet(0x01138638, 41, "CDlgDallianceState");
	SetCnet(0x01138774, 41, "CDlgDamageRep");
	SetCnet(0x01138828, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgDamageRep>");
	SetCnet(0x01138884, 41, "CDlgDebugCmd");
	SetCnet(0x01138964, 41, "CDlgGMDelMsgReason");
	SetCnet(0x01138A44, 41, "CDlgDivination");
	SetCnet(0x01138AEC, 41, "CDlgDivinationDetail");
	SetCnet(0x01138B94, 3, "`public: void __thiscall CDlgDivination::OnCommand_Divination(0xchar const *)'::`5'::ShowDetail");
	SetCnet(0x01138C80, 41, "CDlgDomainCondition");
	SetCnet(0x01138D4C, 41, "CDlgDoubleExp");
	SetCnet(0x01138E24, 41, "CDlgDoubleExpS");
	SetCnet(0x01138EF0, 41, "CDlgDownloadSpeed");
	SetCnet(0x01138FC0, 2, "CECInvokeNumberHandleBase");
	SetCnet(0x01138FCC, 42, "CDlgDragDrop");
	SetCnet(0x01139078, 2, "CECServantPackOpt");
	SetCnet(0x011393E8, 41, "CDlgThrowDriftBottle");
	SetCnet(0x01139490, 41, "CDlgCaptureDriftBottle");
	SetCnet(0x01139538, 41, "CDlgCaptureProgress");
	SetCnet(0x011395E0, 41, "CDlgDriftBottleHistory");
	SetCnet(0x01139688, 41, "CDlgDriftBottleMsg");
	SetCnet(0x01139764, 3, "`void __cdecl ShowHostWeapon(0xint)'::`2'::ShowWeapon");
	SetCnet(0x011397A8, 2, "`public: void __thiscall CDlgCaptureDriftBottle::OnCommand_Broadcast(0xchar const *)'::`2'::BroadcastBottleInfo");
	SetCnet(0x011397C8, 3, "`public: void __thiscall CDlgCaptureProgress::OnEventKeyDowm(0xunsigned int,long,AUIObject *)'::`20'::DelayClose");
	SetCnet(0x011397FC, 41, "CDlgEarthBagRank");
	SetCnet(0x01139914, 41, "CDlgEasyProduce");
	SetCnet(0x011399C4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEasyProduce>");
	SetCnet(0x01139ACC, 41, "CDlgELFEquipRemove");
	SetCnet(0x01139B88, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFEquipRemove>");
	SetCnet(0x01139C54, 41, "CDlgELFGenius");
	SetCnet(0x01139DCC, 41, "CDlgELFGeniusReset");
	SetCnet(0x01139E74, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFGeniusReset>");
	SetCnet(0x01139F2C, 41, "CDlgELFInExp");
	SetCnet(0x0113A01C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFInExp>");
	SetCnet(0x0113A194, 41, "CDlgELFLearn");
	SetCnet(0x0113A258, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFLearn>");
	SetCnet(0x0113A3AC, 41, "CDlgELFProp");
	SetCnet(0x0113A474, 8, "ELFPropClickShortcut");
	SetCnet(0x0113A6AC, 41, "CDlgELFRefine");
	SetCnet(0x0113A75C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFRefine>");
	SetCnet(0x0113A844, 41, "CDlgELFRefineTrans");
	SetCnet(0x0113A8EC, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFRefineTrans>");
	SetCnet(0x0113A9C4, 41, "CDlgELFRetrain");
	SetCnet(0x0113AA6C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFRetrain>");
	SetCnet(0x0113AAEC, 41, "CDlgELFSkillTree");
	SetCnet(0x0113AC24, 41, "CDlgELFToPill");
	SetCnet(0x0113ACCC, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFToPill>");
	SetCnet(0x0113AD24, 41, "CDlgELFTransaction");
	SetCnet(0x0113AEE4, 41, "CDlgELFXiDian");
	SetCnet(0x0113AF8C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgELFXiDian>");
	SetCnet(0x0113B004, 41, "CDlgEnemyOptionFunc");
	SetCnet(0x0113B0D0, 2, "`public: void __thiscall CDlgEnemyOptionFunc::OnCommandDelEnemy(0xchar const *)'::`7'::DelEnmeyHandler");
	SetCnet(0x0113B15C, 44, "CDlgEngrave");
	SetCnet(0x0113B210, 48, "CECIvtrEquipAddonDesc");
	SetCnet(0x0113B2EC, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEngrave>");
	SetCnet(0x0113B350, 1, "AArray<ItemExtProperty,ItemExtProperty &>");
	SetCnet(0x0113B358, 41, "CDlgEngravePreview");
	SetCnet(0x0113B52C, 41, "CDlgEPEquip");
	SetCnet(0x0113B6C4, 41, "CDlgEquipBind");
	SetCnet(0x0113B76C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipBind>");
	SetCnet(0x0113B86C, 41, "CDlgEquipDestroy");
	SetCnet(0x0113B914, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipDestroy>");
	SetCnet(0x0113B9BC, 41, "CDlgEquipDye");
	SetCnet(0x0113BA84, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipDye>");
	SetCnet(0x0113BB0C, 41, "CDlgEquipMark");
	SetCnet(0x0113BBC0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipMark>");
	SetCnet(0x0113BCD4, 4, "CECBuyCommandObserver");
	SetCnet(0x0113BCE8, 44, "CDlgEquipRefine");
	SetCnet(0x0113BD9C, 7, "CDlgEquipRefine");
	SetCnet(0x0113BDBC, 3, "CECShopSearchPolicyBase");
	SetCnet(0x0113BDCC, 3, "CECShopSearchValidPolicy");
	SetCnet(0x0113BDDC, 3, "CECShopSearchIDPolicy");
	SetCnet(0x0113BDEC, 3, "CECShopSearchLevelPolicy");
	SetCnet(0x0113BDFC, 3, "CECShopSearchCompositePolicy");
	SetCnet(0x0113BE18, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipRefine>");
	SetCnet(0x0113BE54, 2, "`public: void __thiscall CDlgEquipRefine::OnCommandConfirm(0xchar const *)'::`18'::RefineHandler");
	SetCnet(0x0113BF1C, 41, "CDlgEquipSlot");
	SetCnet(0x0113BFC4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipSlot>");
	SetCnet(0x0113C014, 2, "CECLazyButtonClickObserver");
	SetCnet(0x0113C020, 41, "CDlgEquipSlotNew");
	SetCnet(0x0113C0C8, 2, "CDlgEquipSlotNew");
	SetCnet(0x0113C0F8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipSlotNew>");
	SetCnet(0x0113C190, 41, "CDlgEquipSoulBase");
	SetCnet(0x0113C24C, 41, "CDlgEquipSoulDetect");
	SetCnet(0x0113C410, 2, "`public: void __thiscall CDlgEquipSoulDetect::OnCommandDetect(0xchar const *)'::`5'::EquipSoulDetectMessageBoxHandler");
	SetCnet(0x0113C41C, 2, "`public: void __thiscall CDlgEquipSoulDetect::OnCommandLock(0xchar const *)'::`2'::LockOrUnLockHandler");
	SetCnet(0x0113C428, 2, "`public: void __thiscall CDlgEquipSoulDetect::LockOrUnlockQiHun(0xbool,int)'::`2'::EquipSoulDetectMoneyMessageBoxHandler");
	SetCnet(0x0113C44C, 41, "CDlgEquipSoulRefresh");
	SetCnet(0x0113C5E0, 2, "`public: void __thiscall CDlgEquipSoulRefresh::OnCommand_LockItem(0xchar const *)'::`2'::LockOrUnLockHandler");
	SetCnet(0x0113C5EC, 2, "`public: void __thiscall CDlgEquipSoulRefresh::LockOrUnlockQiHun(0xbool,int)'::`2'::EquipSoulRefreshMoneyMessageBoxHandler");
	SetCnet(0x0113C63C, 41, "CDlgEquipSoulResolve");
	SetCnet(0x0113C720, 41, "CDlgEquipSoulSet");
	SetCnet(0x0113C988, 41, "CDlgEquipSoulSwallow");
	SetCnet(0x0113CAC8, 2, "`public: void __thiscall CDlgEquipSoulSwallow::OnCommand_SwallowAll(0xchar const *)'::`5'::SwallowAllHandler");
	SetCnet(0x0113CAD4, 2, "`public: void __thiscall CDlgEquipSoulSwallow::OnCommand_LockItem(0xchar const *)'::`2'::LockOrUnLockHandler");
	SetCnet(0x0113CB18, 41, "CDlgEquipSoulTransfer");
	SetCnet(0x0113CC28, 2, "`public: void __thiscall CDlgEquipSoulTransfer::OnCommand_Transfer(0xchar const *)'::`13'::TransferHandler");
	SetCnet(0x0113CC34, 2, "`public: void __thiscall CDlgEquipSoulTransfer::OnCommand_Lock(0xchar const *)'::`2'::LockOrUnLockHandler");
	SetCnet(0x0113CC40, 2, "`public: void __thiscall CDlgEquipSoulTransfer::LockOrUnlockQiHun(0xbool,int)'::`2'::EquipSoulTransferMoneyMessageBoxHandler");
	SetCnet(0x0113CCCC, 41, "CDlgEquipUndestroy");
	SetCnet(0x0113CD74, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgEquipUndestroy>");
	SetCnet(0x0113CDA0, 47, "CDlgEquipUp");
	SetCnet(0x0113CE60, 15, "CECEquipUpInheritProperty");
	SetCnet(0x0113CEA0, 15, "CECEquipUpInheritRefine");
	SetCnet(0x0113CEE0, 15, "CECEquipUpInheritHole");
	SetCnet(0x0113CF20, 15, "CECEquipUpInheritStone");
	SetCnet(0x0113CF60, 15, "CECEquipUpInheritStoneHole");
	SetCnet(0x0113CFA0, 15, "CECEquipUpInheritEngrave");
	SetCnet(0x0113CFE0, 15, "CECEquipUpInheritAddons");
	SetCnet(0x0113D180, 2, "`public: void __thiscall CDlgEquipUp::OnCommand_Confirm(0xchar const *)'::`14'::TipsHandler");
	SetCnet(0x0113D194, 41, "CDlgEquipUpEnsure");
	SetCnet(0x0113D294, 41, "CDlgExclusiveAward");
	SetCnet(0x0113D3AC, 41, "CDlgExit");
	SetCnet(0x0113D4C4, 1, "CPWMessageTranslate");
	SetCnet(0x0113D4DC, 2, "CExplorerMan");
	SetCnet(0x0113D4E8, 11, "CBSCallbackImpl");
	SetCnet(0x0113D518, 50, "CDlgExplorer");
	SetCnet(0x0113D5E4, 1, "CDlgExplorer");
	SetCnet(0x0113D70C, 41, "CDlgFaceLift");
	SetCnet(0x0113D7B4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFaceLift>");
	SetCnet(0x0113D7E8, 43, "CDlgFaceName");
	SetCnet(0x0113D8FC, 41, "CDlgFactionApplyPlayer");
	SetCnet(0x0113DA0C, 41, "CDlgFactionAwardShow");
	SetCnet(0x0113DB00, 41, "CDlgFactionBase");
	SetCnet(0x0113DC94, 1, "std::basic_fstream<char,std::char_traits<char> >");
	SetCnet(0x0113DCAC, 41, "CDlgFactionBoard");
	SetCnet(0x0113DEA8, 41, "CDlgFactionRecruitSendApply");
	SetCnet(0x0113E004, 41, "CDlgFactionFarm");
	SetCnet(0x0113E164, 41, "CDlgFactionHelpBase");
	SetCnet(0x0113E3D4, 42, "CDlgFactionHistoryBase");
	SetCnet(0x0113E480, 42, "CDlgFactionStorageHis");
	SetCnet(0x0113E52C, 42, "CDlgFactionDevideHis");
	SetCnet(0x0113E6D4, 41, "CDlgFactionPetFeed");
	SetCnet(0x0113E77C, 2, "`public: void __thiscall CDlgFactionPetFeed::OnCommand_Feed(0xchar const *)'::`8'::PetFeedConfirmBox");
	SetCnet(0x0113E788, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFactionPetFeed>");
	SetCnet(0x0113E808, 41, "CDlgFactionPetGuess");
	SetCnet(0x0113E910, 41, "CDlgFactionPetMain");
	SetCnet(0x0113EA04, 2, "`public: void __thiscall CDlgFactionPetMain::OnCommand_Walk(0xchar const *)'::`4'::PetWalkConfirmBox");
	SetCnet(0x0113EA24, 2, "`public: void __thiscall CDlgFactionPetMain::OnCommand_Bless(0xchar const *)'::`7'::PetBlessConfirmBox");
	SetCnet(0x0113EA30, 2, "`public: void __thiscall CDlgFactionPetMain::OnCommand_Change(0xchar const *)'::`4'::PetChangeConfirmBox");
	SetCnet(0x0113EA4C, 4, "CECObserver<CECFactionPVPModel>");
	SetCnet(0x0113EA60, 41, "CDlgFactionPVPRank");
	SetCnet(0x0113EB08, 4, "CDlgFactionPVPRank");
	SetCnet(0x0113EC30, 41, "CDlgFactionPVPStatus");
	SetCnet(0x0113ECD8, 4, "CDlgFactionPVPStatus");
	SetCnet(0x0113ED30, 41, "CDlgFactionRecruit");
	SetCnet(0x0113EE20, 41, "CDlgFactionRecruitApply");
	SetCnet(0x0113EF2C, 41, "CDlgFactionRepareRecharge");
	SetCnet(0x0113F08C, 41, "CDlgFactionshareDiyList");
	SetCnet(0x0113F20C, 41, "CDlgFactionShareMaster");
	SetCnet(0x0113F2EC, 2, "`public: void __thiscall CDlgFactionShareMaster::Command_ConfrimDivede(0xchar const *)'::`2'::ConfirmDivideBox");
	SetCnet(0x0113F324, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFactionShareMaster>");
	SetCnet(0x0113F358, 2, "`private: void __thiscall CDlgFactionShareMaster::ChangePage(0xint)'::`7'::AskChangePageBox");
	SetCnet(0x0113F364, 2, "`public: void __thiscall CDlgFactionShareMaster::OnDivideInfoProtocol(0xGNET::Protocol *)'::`7'::AskCreatePageBox");
	SetCnet(0x0113F388, 41, "CDlgFactionShareSetting");
	SetCnet(0x0113F430, 41, "CDlgFactionShareJob");
	SetCnet(0x0113F4D8, 41, "CDlgFactionShareTeamDIY");
	SetCnet(0x0113F70C, 41, "CDlgFactionShop");
	SetCnet(0x0113F7B4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFactionShop>");
	SetCnet(0x0113F808, 41, "CDlgFactionShopConfirm");
	SetCnet(0x0113F94C, 41, "CDlgFactionStorage");
	SetCnet(0x0113F9F4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFactionStorage>");
	SetCnet(0x0113FA30, 2, "`public: void __thiscall CDlgFactionStorage::OnProtocol(0xGNET::Protocol *)'::`5'::AskOpenFactionStorage");
	SetCnet(0x0113FA64, 41, "CDlgFactionTalentTree");
	SetCnet(0x0113FB6C, 41, "CDlgFactionTarget");
	SetCnet(0x0113FC14, 41, "CDlgFactionTargeFinish");
	SetCnet(0x0113FCF8, 41, "CDlgFactionTargetSubDia");
	SetCnet(0x0113FDE0, 41, "CDlgFactionTargetSubList");
	SetCnet(0x0113FE98, 4, "CECObserver<CECFashionShop>");
	SetCnet(0x0113FEAC, 4, "CECObserver<CECShoppingCart>");
	SetCnet(0x0113FEC0, 41, "CDlgFashionShop");
	SetCnet(0x0113FF68, 4, "CDlgFashionShop");
	SetCnet(0x0113FF7C, 4, "CDlgFashionShop");
	SetCnet(0x0113FF90, 3, "CECFashionShop::CECSelectedFashionLooper");
	SetCnet(0x011401D0, 3, "CDlgFashionShopItemFitter");
	SetCnet(0x011401F0, 41, "CDlgFashionShopItem");
	SetCnet(0x01140348, 3, "CDlgFashionShopItemPriceCalculator");
	SetCnet(0x01140368, 3, "CDlgFashionShopItemAddToShopCart");
	SetCnet(0x011403C4, 3, "CDlgFashionShopItemDiscountChecker");
	SetCnet(0x011403D4, 3, "CDlgFashionShopItemStatusGetter");
	SetCnet(0x011403E4, 3, "CDlgFashionShopItemGiftChecker");
	SetCnet(0x011403F4, 3, "CDlgFashionShopItemFlashSaleChecker");
	SetCnet(0x01140404, 3, "CDlgFashionShopItemHintCalculator");
	SetCnet(0x0114042C, 41, "CDlgFashionSplit");
	SetCnet(0x011404D4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFashionSplit>");
	SetCnet(0x011404F8, 2, "`public: void __thiscall CDlgFashionSplit::OnCommandConfirm(0xchar const *)'::`10'::SplitFashionMessageBoxHandler");
	SetCnet(0x01140528, 41, "CDlgFindPlayer");
	SetCnet(0x011405E8, 41, "CDlgFindServer");
	SetCnet(0x0114071C, 42, "CDlgFingerGuessing");
	SetCnet(0x0114084C, 41, "CDlgFireworks2");
	SetCnet(0x011408F4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFireworks2>");
	SetCnet(0x01140938, 41, "CDlgFirstRechargeGiftEntry");
	SetCnet(0x011409E0, 41, "CDlgFirstRechargeGiftMain");
	SetCnet(0x01140AE0, 41, "CDlgFittingRoom");
	SetCnet(0x01140B88, 5, "FittingRoomClickShortcut");
	SetCnet(0x01140BBC, 41, "CDlgFixPosTransmit");
	SetCnet(0x01140CC4, 41, "CDlgFlySwordImprove");
	SetCnet(0x01140D6C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFlySwordImprove>");
	SetCnet(0x01140E10, 41, "CDlgForce");
	SetCnet(0x01140F94, 41, "CDlgForceActivity");
	SetCnet(0x0114105C, 41, "CDlgForceActivityIcon");
	SetCnet(0x0114113C, 42, "CDlgForceNPC");
	SetCnet(0x01141208, 2, "`public: virtual void __thiscall CDlgForceNPC::OnMessageBox(0xAUIDialog *,int)'::`11'::ForceJoinMessageBoxHandler");
	SetCnet(0x01141254, 41, "CDlgFortressBuild");
	SetCnet(0x01141334, 41, "CDlgFortressBuildHelp");
	SetCnet(0x01141494, 41, "CDlgFortressBuildSub");
	SetCnet(0x011416DC, 41, "CDlgFortressBuildSubList");
	SetCnet(0x011417A0, 41, "CDlgFortressContrib");
	SetCnet(0x01141870, 41, "CDlgFortressExchange");
	SetCnet(0x011419C4, 41, "CDlgFortressInfo");
	SetCnet(0x01141C04, 41, "CDlgFortressMaterial");
	SetCnet(0x01141CC4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgFortressMaterial>");
	SetCnet(0x01141D0C, 41, "CDlgFortressMini");
	SetCnet(0x01141DB4, 2, "`public: void __thiscall CDlgFortressMini::OnCommandBtnLeave(0xchar const *)'::`2'::LeavelFortress");
	SetCnet(0x01141DD0, 41, "CDlgFortressStatus");
	SetCnet(0x01141EF0, 41, "CDlgFortressWar");
	SetCnet(0x01142020, 41, "CDlgFortressWarList");
	SetCnet(0x011420E4, 41, "CDlgFreshManQuestion");
	SetCnet(0x011421F8, 41, "CDlgFreshManQuestionTips");
	SetCnet(0x011422B0, 41, "CDlgFriendChat");
	SetCnet(0x0114239C, 41, "CDlgFriendColor");
	SetCnet(0x011424B0, 41, "CDlgFriendEnemyList");
	SetCnet(0x01142578, 2, "`public: void __thiscall CDlgFriendEnemyList::OnCommandDeleteEnemy(0xchar const *)'::`7'::DelEnmeyHandler");
	SetCnet(0x0114258C, 41, "CDlgFriendGroup");
	SetCnet(0x01142648, 41, "CDlgFriendHistory");
	SetCnet(0x01142758, 41, "CDlgFriendList");
	SetCnet(0x011428B0, 41, "CDlgFriendListBase");
	SetCnet(0x011429A0, 41, "CDlgFriendOptionGroup");
	SetCnet(0x01142AA8, 2, "`public: void __thiscall CDlgFriendOptionName::OnCommandInvite(0xchar const *)'::`8'::CECSecondConfirm");
	SetCnet(0x01142AC0, 41, "CDlgFriendOptionNormal");
	SetCnet(0x01142B84, 41, "CDlgFriendRequest");
	SetCnet(0x01142C54, 42, "CDlgFullScreenBase");
	SetCnet(0x01142D18, 41, "CDlgFullScreenVideo");
	SetCnet(0x01142DD8, 46, "CDlgFullScreenWithPlayer");
	SetCnet(0x01142E9C, 41, "CDlgGatherMine");
	SetCnet(0x01142FE4, 41, "CDlgGeneralCard");
	SetCnet(0x01143188, 5, "GeneralCardStorageClickShortcut");
	SetCnet(0x01143368, 3, "`public: void __thiscall CDlgGeneralCard::PlayInjectDiHunEffect(0xint)'::`7'::HideEffect");
	SetCnet(0x011435AC, 2, "RandMallShoppingObserver");
	SetCnet(0x011435B8, 41, "CDlgGeneralCardBuySetting");
	SetCnet(0x01143660, 41, "CDlgGeneralCardBuy");
	SetCnet(0x01143708, 2, "CDlgGeneralCardBuy");
	SetCnet(0x01143714, 41, "CDlgGeneralCardBuyActive");
	SetCnet(0x01143944, 5, "`public: void __thiscall CDlgGeneralCardBuy::OnCommandBuy(0xchar const *)'::`20'::CECPokerShopBuyCommand");
	SetCnet(0x011439F4, 42, "CDlgGenCardCollection");
	SetCnet(0x01143BB4, 41, "CDlgGenCardExchange");
	SetCnet(0x01143C78, 2, "`public: void __thiscall CDlgGenCardExchange::OnCommandExchange(0xchar const *)'::`10'::ExchangeCardHandler");
	SetCnet(0x01143C94, 42, "CDlgGeneralCardProduce");
	SetCnet(0x01143D40, 2, "`public: void __thiscall CDlgGeneralCardProduce::OnCommand_Produce(0xchar const *)'::`35'::SecondEnsureMsg");
	SetCnet(0x01143D6C, 41, "CDlgGenCardRespawn");
	SetCnet(0x01143E1C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgGenCardRespawn>");
	SetCnet(0x01143EFC, 41, "CDlgGiftCard");
	SetCnet(0x01143FC4, 41, "CDlgGivingFor");
	SetCnet(0x01144214, 41, "CDlgGMConsole");
	SetCnet(0x011444AC, 41, "CDlgGMConsoleForbid");
	SetCnet(0x01144554, 2, "CGMCommandKickOutRole_Consume");
	SetCnet(0x011447F4, 41, "CDlgGMCountTime");
	SetCnet(0x011448A8, 41, "CDlgGMCreateWar");
	SetCnet(0x01144950, 2, "CECTimePauseMessageBoxHandler");
	SetCnet(0x01144A48, 2, "`public: void __thiscall CDlgGMCreateWar::OnCommand_CreateWar(0xchar const *)'::`16'::CECCreateWarMessageBoxHandler");
	SetCnet(0x01144A90, 2, "`public: void __thiscall CDlgGMCreateWar::OnCommand_DeleteWar(0xchar const *)'::`8'::CECDeleteWarMessageBoxHandler");
	SetCnet(0x01144AF0, 41, "CDlgGMFinishMsg");
	SetCnet(0x01144BA8, 41, "CDlgGMMessage");
	SetCnet(0x01144C68, 41, "CDlgGMParam");
	SetCnet(0x01144D90, 41, "CDlgGMPrepareRoom");
	SetCnet(0x01144E38, 2, "LDBattle::CECCreateOffWarMessageBoxHandler");
	SetCnet(0x01144E44, 2, "LDBattle::CECRemovePrepareRoomMessageBoxHandler");
	SetCnet(0x01144F44, 43, "CDlgGMQueryItem");
	SetCnet(0x011450D4, 41, "CDlgGMStartWar");
	SetCnet(0x01145184, 41, "CDlgGMStatement");
	SetCnet(0x01145240, 41, "CDlgGMViewWarChoose");
	SetCnet(0x01145348, 41, "CDlgGMViewWarMain");
	SetCnet(0x0114543C, 41, "CDlgGMViewWarMate");
	SetCnet(0x011454EC, 41, "CDlgGMViewWarTeamMain");
	SetCnet(0x011455F0, 41, "CDlgGMViewTeamPoint");
	SetCnet(0x0114570C, 41, "CDlgGoldAccount");
	SetCnet(0x01145800, 41, "CDlgGoldInquire");
	SetCnet(0x01145984, 41, "CDlgGoldPassword");
	SetCnet(0x01145A58, 41, "CDlgGoldTrade");
	SetCnet(0x01145C44, 43, "CDlgGraduates");
	SetCnet(0x01145D70, 41, "CDlgGrowthTarget");
	SetCnet(0x01145E18, 41, "CDlgGrowthTargetSub");
	SetCnet(0x01145EC0, 41, "CDlgGrowthTargetSubList");
	SetCnet(0x01145F68, 44, "CDlgGrowthTargetSub2");
	SetCnet(0x0114601C, 41, "CDlgSystemTeach");
	SetCnet(0x011460C4, 41, "CDlgGrowthAward");
	SetCnet(0x0114616C, 41, "CDlgGrowthComplete");
	SetCnet(0x01146530, 41, "CDlgGuardianBeastArrangeWork");
	SetCnet(0x011465D8, 45, "BeastItem");
	SetCnet(0x01146728, 41, "CDlgGuardianBeastBag");
	SetCnet(0x011467D0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgGuardianBeastBag>");
	SetCnet(0x01146818, 6, "GNET::HomeGuardMonsterMagicAttributeData");
	SetCnet(0x01146834, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterMagicAttributeData>");
	SetCnet(0x01146850, 6, "GNET::HomeGuardMonsterBattleData");
	SetCnet(0x0114686C, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterBattleData>");
	SetCnet(0x01146888, 6, "GNET::GHomeBatteleRecordData");
	SetCnet(0x011468A4, 41, "CDlgGuardianBeastFight");
	SetCnet(0x0114694C, 41, "CDlgGuardianBeastFightInfo");
	SetCnet(0x01146A44, 3, "`public: void __thiscall CDlgGuardianBeastFight::DisplayResault(0xvoid)'::`2'::ShowFalse");
	SetCnet(0x01146AF4, 3, "`public: void __thiscall CDlgGuardianBeastFightInfo::SetData(0xGNET::GHomeBatteleRecordData *)'::`5'::ShowFalse");
	SetCnet(0x01146B04, 3, "`public: void __thiscall CDlgGuardianBeastFightInfo::UpdateBeastInfo(0xint)'::`60'::FinalScore");
	SetCnet(0x01146B58, 3, "`public: void __thiscall CDlgGuardianBeastFightInfo::DisplayFinalScore(0xvoid)'::`2'::CloseDlg");
	SetCnet(0x01146B68, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterBattleData,std::allocator<GNET::HomeGuardMonsterBattleData> > >");
	SetCnet(0x01146B78, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterMagicAttributeData,std::allocator<GNET::HomeGuardMonsterMagicAttributeData> > >");
	SetCnet(0x01146BAC, 41, "CDlgGuardianBeastFightSetting");
	SetCnet(0x01146E2C, 41, "CDlgGuradianBeastHatch");
	SetCnet(0x01146ED4, 41, "CDlgGuardianBeastRecharge");
	SetCnet(0x01146F88, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgGuradianBeastHatch>");
	SetCnet(0x01146FD8, 3, "`protected: virtual void __thiscall CDlgGuradianBeastHatch::OnTick(0xvoid)'::`5'::NextAction");
	SetCnet(0x01146FE8, 3, "`public: void __thiscall CDlgGuradianBeastHatch::HatchBegin(0xvoid)'::`4'::NextAction");
	SetCnet(0x01147020, 3, "`public: void __thiscall CDlgGuradianBeastHatch::HatchOver(0xvoid)'::`4'::NextAction");
	SetCnet(0x01147044, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgGuardianBeastRecharge>");
	SetCnet(0x011470A0, 41, "CDlgGuardianBeastMain");
	SetCnet(0x01147148, 45, "CGuardianBeastItem");
	SetCnet(0x01147558, 41, "CDlgGuradianBeastScoreReward");
	SetCnet(0x01147600, 41, "CDlgGuradianBeastWinReward");
	SetCnet(0x011476C8, 41, "CDlgGuardianBeastWorkSelect");
	SetCnet(0x01147770, 41, "CDlgGuardianbeastRank");
	SetCnet(0x01147818, 41, "CDlgGuildBattleAccept");
	SetCnet(0x011478D0, 41, "CDlgGuildBattleAcceptSub");
	SetCnet(0x011479A0, 41, "CDlgGuildBattleAcceptSubList");
	SetCnet(0x01147A50, 41, "CDlgGuildBattleAcceptWord");
	SetCnet(0x01147B04, 2, "`public: void __thiscall CDlgGuildBattleAcceptWord::OnCommandBtnAccept(0xchar const *)'::`11'::CECFactionHandler");
	SetCnet(0x01147B18, 41, "CDlgGuildBattleAlliance");
	SetCnet(0x01147BD8, 41, "CDlgGuildBattleBase");
	SetCnet(0x01147D08, 41, "CDlgGuildBattleDeclare");
	SetCnet(0x01147E58, 2, "`public: void __thiscall CDlgGuildBattleDeclare::OnCommand_Declare(0xchar const *)'::`28'::CECFactionHandler");
	SetCnet(0x01147E64, 2, "`public: virtual void __thiscall `public: void __thiscall CDlgGuildBattleDeclare::OnCommand_Declare(0xchar const *)'::`28'::CECFactionHandler::OnMessageBox(0xbool)'::`5'::GuildBattleDecl");
	SetCnet(0x0114809C, 41, "CDlgGuildBattleHistory");
	SetCnet(0x0114814C, 41, "CDlgGuildBattleHistoryData");
	SetCnet(0x01148318, 41, "CDlgGuildBattleHistorySub");
	SetCnet(0x011483C0, 41, "CDlgGuildBattleHistorySubList");
	SetCnet(0x01148470, 41, "CDlgGuildBattleInvite");
	SetCnet(0x0114852C, 41, "CDlgGuildBattleStatistic");
	SetCnet(0x011485EC, 41, "CDlgGuildCreate");
	SetCnet(0x01148694, 2, "`public: void __thiscall CDlgGuildCreate::OnCommand_confirm(0xchar const *)'::`2'::GuildCreateMoneyMessageBoxHandler");
	SetCnet(0x011486B0, 41, "CDlgGuildDiplomacyApply");
	SetCnet(0x011487B0, 41, "CDlgGuildDiplomacyMan");
	SetCnet(0x011489A4, 41, "CDlgGuildMan");
	SetCnet(0x01148D5C, 52, "CDlgGuildMap");
	SetCnet(0x01148E74, 52, "CDlgGuildMapBase");
	SetCnet(0x01149064, 41, "CDlgGuildMapStatus");
	SetCnet(0x01149190, 52, "CDlgGuildMapSub1");
	SetCnet(0x01149264, 52, "CDlgGuildMapSub2");
	SetCnet(0x01149338, 80, "CDlgGuildMapSub4");
	SetCnet(0x0114947C, 52, "CDlgGuildMapSubBase");
	SetCnet(0x01149588, 41, "CDlgGuildMapTravel");
	SetCnet(0x0114964C, 41, "CDlgGuildpower6");
	SetCnet(0x01149730, 41, "CDlgGuildpowerhelpMain");
	SetCnet(0x01149838, 41, "CDlgGuildpowerhelpsub01");
	SetCnet(0x01149960, 41, "CDlgGuildpowerhelpsub02");
	SetCnet(0x01149A20, 41, "CDlgGuildpowerhelpsub0201");
	SetCnet(0x01149AD8, 41, "CDlgGuildpowerhelpsub0202");
	SetCnet(0x01149B98, 41, "CDlgGuildpowerhelpsub0203");
	SetCnet(0x01149C50, 41, "CDlgGuildpowerhelpsub0204");
	SetCnet(0x01149D30, 41, "CDlgGuildpowerhelpsub03");
	SetCnet(0x01149DF0, 41, "CDlgGuildpowerhelpsub04");
	SetCnet(0x01149EA8, 41, "CDlgGuildpowerhelpsub05");
	SetCnet(0x01149F60, 41, "CDlgGuildpowerhelpsub0501");
	SetCnet(0x0114A018, 41, "CDlgGuildpowerhelpsub0502");
	SetCnet(0x0114A0E4, 41, "CDlgGuildpowerhelpsub0503");
	SetCnet(0x0114A19C, 41, "CDlgGuildpowerhelpsub0504");
	SetCnet(0x0114A254, 41, "CDlgGuildpowerhelpsub0505");
	SetCnet(0x0114A30C, 41, "CDlgGuildpowerhelpsub06");
	SetCnet(0x0114A3C4, 41, "CDlgGuildpowerhelpsub07");
	SetCnet(0x0114A47C, 41, "CDlgGuildpowerhelpsub08");
	SetCnet(0x0114A52C, 41, "CDlgGuildRecord");
	SetCnet(0x0114A60C, 41, "CDlgGuildpower1");
	SetCnet(0x0114A7DC, 41, "CDlgGuildpower2");
	SetCnet(0x0114A950, 41, "CDlgGuildpower3");
	SetCnet(0x0114AA14, 41, "CDlgGuildpower4");
	SetCnet(0x0114AAF8, 41, "CDlgGuildpower5");
	SetCnet(0x0114AC4C, 41, "CDlgGuildpowerMain");
	SetCnet(0x0114AD64, 1, "APtrArray<CECBuildingModel *>");
	SetCnet(0x0114AD6C, 41, "CDlgHandBookGrassSub");
	SetCnet(0x0114AEB8, 41, "CDlgHandBookSurfaceSub");
	SetCnet(0x0114AF8C, 41, "CDlgHandBookTextureSub");
	SetCnet(0x0114B050, 1, "AStack<void *,void *>");
	SetCnet(0x0114B058, 41, "CDlgHelp");
	SetCnet(0x0114B168, 1, "APtrStack<_AUITREEVIEW_ITEM *>");
	SetCnet(0x0114B1A4, 41, "CDlgHeroBook");
	SetCnet(0x0114B2D4, 41, "CDlgHeroDetail");
	SetCnet(0x0114B498, 41, "CDlgHighPolyCustomizeBodyMain");
	SetCnet(0x0114B614, 41, "CDlgHighPolyCustomizeDefaultMain");
	SetCnet(0x0114B6BC, 41, "CDlgHighPolyCustomizeDefaultSubFace");
	SetCnet(0x0114B764, 41, "CDlgHighPolyCustomizeDefaultSubBody");
	SetCnet(0x0114B82C, 41, "CDlgHighPolyCustomizeFaceMain");
	SetCnet(0x0114B958, 41, "CDlgHighPolyCustomizeFaceName");
	SetCnet(0x0114BA08, 41, "CDlgHighPolyCustomizeMain");
	SetCnet(0x0114BAF4, 41, "CDlgHighPolyCustomizeMenu");
	SetCnet(0x0114BBBC, 41, "CDlgHighPolyCustomizePre");
	SetCnet(0x0114BC64, 41, "CDlgHighPolyCustomizePreMain");
	SetCnet(0x0114BD40, 41, "CDlgHighPolyCustomizeSlider");
	SetCnet(0x0114BE68, 41, "CDlgHighPolyCustomizeSubmit");
	SetCnet(0x0114BF18, 41, "CDlgHistoryStage");
	SetCnet(0x0114BFC8, 41, "CDlgHistoryStage1");
	SetCnet(0x0114C080, 41, "CDlgHistoryStage2");
	SetCnet(0x0114C14C, 41, "CDlgHomeAppreciate");
	SetCnet(0x0114C420, 41, "CDlgHomeBag");
	SetCnet(0x0114C4CC, 41, "CDlgHomeBuildingNameHint");
	SetCnet(0x0114C57C, 41, "CDlgHomeChangeResource");
	SetCnet(0x0114C674, 41, "CDlgHomeEditFunctionBuilding");
	SetCnet(0x0114C738, 41, "CDlgHomeEditSubBase");
	SetCnet(0x0114C7E0, 41, "CDlgHomeEditGrassSub");
	SetCnet(0x0114C8AC, 2, "`protected: void __thiscall CDlgHomeEditGrassSub::OnCommandBtnClearSurface(0xchar const *)'::`2'::DelChooseHandler");
	SetCnet(0x0114C8CC, 41, "CDlgHomeEditorItem");
	SetCnet(0x0114C998, 2, "`public: void __thiscall CDlgHomeEditorItem::OnCommandDelChooseItem(0xchar const *)'::`2'::DelChooseHandler");
	SetCnet(0x0114C9A4, 2, "`public: void __thiscall CDlgHomeEditorItem::OnCommandResetAllItem(0xchar const *)'::`2'::DelChooseHandler");
	SetCnet(0x0114C9B8, 41, "CDlgHomeEditSurface");
	SetCnet(0x0114CB20, 41, "CDlgHomeEditSurfaceSub");
	SetCnet(0x0114CBE8, 2, "`protected: void __thiscall CDlgHomeEditSurfaceSub::OnCommandBtnClearSurface(0xchar const *)'::`2'::DelChooseHandler");
	SetCnet(0x0114CC18, 41, "CDlgHomeEditTerrianSub");
	SetCnet(0x0114CCEC, 2, "`protected: void __thiscall CDlgHomeEditTerrianSub::OnCommandBtnDelTer(0xchar const *)'::`2'::DelChooseHandler");
	SetCnet(0x0114CD00, 41, "CDlgHomeEquipment");
	SetCnet(0x0114CE7C, 41, "CDlgHomeEquipOptionFunc");
	SetCnet(0x0114CF2C, 41, "CDlgHomeFarm");
	SetCnet(0x0114D130, 2, "`public: void __thiscall CDlgHomeFarm::OnCommandBtnUpGrade(0xchar const *)'::`8'::FarmUpgradeMessageBoxHandler");
	SetCnet(0x0114D14C, 41, "CDlgHomeFarmChooseToPlantList");
	SetCnet(0x0114D224, 41, "CDlgHomeFoodChooseSub");
	SetCnet(0x0114D318, 41, "CDlgHomeFoodChooseSubList");
	SetCnet(0x0114D3F0, 41, "CDlgHomeFoodRipe");
	SetCnet(0x0114D4A0, 2, "`public: void __thiscall CDlgHomeFoodRipe::OnCommandBtnGetFood(0xchar const *)'::`5'::EnsureGetFood");
	SetCnet(0x0114D4BC, 41, "CDlgHomeHandBookBase");
	SetCnet(0x0114D5C8, 41, "CDlgHomeHandBookSkinList");
	SetCnet(0x0114D68C, 41, "CDlgHomeHandBookSkinSub");
	SetCnet(0x0114D748, 41, "CDlgHomeItemLink");
	SetCnet(0x0114D808, 41, "CDlgHomeKickoutPlayer");
	SetCnet(0x0114D8D0, 41, "CDlgHomeMain");
	SetCnet(0x0114DA50, 41, "CDlgHomeMainInfo");
	SetCnet(0x0114DB74, 41, "CDlgHomeMapEditBase");
	SetCnet(0x0114DCC0, 2, "`public: void __thiscall CDlgHomeMapEditBase::OnCommandCancel(0xchar const *)'::`2'::DelEnmeyHandler");
	SetCnet(0x0114DD1C, 41, "CDlgHomeMirrorRanklist");
	SetCnet(0x0114DE40, 41, "CDlgHomeMirrorUpload");
	SetCnet(0x0114DEFC, 41, "CDlgHomeObjOp");
	SetCnet(0x0114DFE0, 41, "CDlgHomeOpHint");
	SetCnet(0x0114E090, 41, "CDlgHomePetHandBook");
	SetCnet(0x0114E14C, 41, "CDlgHomeProduceFood");
	SetCnet(0x0114E230, 2, "`public: void __thiscall CDlgHomeProduceFood::OnCommandBtnCancelPlant(0xchar const *)'::`2'::CancelPlantHandler");
	SetCnet(0x0114E244, 41, "CDlgHomeRedPackageFriend");
	SetCnet(0x0114E2F4, 41, "CDlgHomeResourceProduce");
	SetCnet(0x0114E424, 2, "`public: void __thiscall CDlgHomeResourceProduce::OnCommandBtnUpGrade(0xchar const *)'::`8'::HomeResourceProduceLevelupMessageBoxHandler");
	SetCnet(0x0114E438, 41, "CDlgHomeSetCleanMoneyRatio");
	SetCnet(0x0114E4F0, 2, "`void __cdecl HostOrSpouseAddClean(0xint,float)'::`2'::AddCleanMessageBoxHandler");
	SetCnet(0x0114E504, 41, "CDlgHomeSetting");
	SetCnet(0x0114E614, 41, "CDlgHomeSkinMain");
	SetCnet(0x0114E6BC, 41, "CDlgHomeSkinSublist");
	SetCnet(0x0114E764, 41, "CDlgHomeSkinSublistItem");
	SetCnet(0x0114E8B8, 41, "CDlgHomeSurfaceHandBook");
	SetCnet(0x0114E960, 41, "CDlgHomeSurfaceHint");
	SetCnet(0x0114EA24, 41, "CDlgHomeTaskAccept");
	SetCnet(0x0114EBD8, 41, "CDlgHomeWorkShop");
	SetCnet(0x0114EDB4, 2, "HomeWorkshopMessageBoxHandler");
	SetCnet(0x0114EDC0, 2, "`public: void __thiscall CDlgHomeWorkShop::OnCommandBtnBeginProduce(0xchar const *)'::`17'::HomeWorkshopDelegateMessageBoxHandler");
	SetCnet(0x0114EDDC, 41, "CDlgHomeWorkShopAllDelegateList");
	SetCnet(0x0114EEE4, 41, "CDlgHomeWorkShopLevelUp");
	SetCnet(0x0114EFE8, 2, "`public: void __thiscall CDlgHomeWorkShopLevelUp::OnCommandBtnLevelUp(0xchar const *)'::`7'::HomeWorkshopLevelupMessageBoxHandler");
	SetCnet(0x0114EFF4, 2, "`public: void __thiscall CDlgHomeWorkShopLevelUp::ChooseTalent(0xint)'::`2'::ChooseTalentMessageBoxHandler");
	SetCnet(0x0114F008, 41, "CDlgHomeWorkShopOwnDelegateConfirm");
	SetCnet(0x0114F0C4, 41, "CDlgHomeWorkShopOwnDelegateList");
	SetCnet(0x0114F184, 2, "`public: void __thiscall CDlgHomeWorkShopOwnDelegateList::OnCommandBtnRemove(0xchar const *)'::`2'::RemoveDelegateHandler");
	SetCnet(0x0114F1A0, 41, "CDlgHomeWorkShopOwnDelegateSub");
	SetCnet(0x0114F248, 41, "CDlgHomeWorkShopOwnDelegateSubList");
	SetCnet(0x0114F320, 41, "CDlgHomeWorkShopPurchase");
	SetCnet(0x0114F3D8, 2, "`public: void __thiscall CDlgHomeWorkShopPurchase::OnCommandBtnBeginProduce(0xchar const *)'::`4'::HomeWorkshopPurchaseMessageBoxHandler");
	SetCnet(0x0114F3EC, 41, "CDlgHomeWorkShopPurchaseLevelUp");
	SetCnet(0x0114F494, 2, "`public: void __thiscall CDlgHomeWorkShopPurchaseLevelUp::OnCommandBtnLevelUp(0xchar const *)'::`2'::HomeWorkshopPurchaseLevelupMessageBoxHandler");
	SetCnet(0x0114F4A8, 41, "CDlgHomeWorkShopTalentChoose");
	SetCnet(0x0114F550, 2, "`public: void __thiscall CDlgHomeWorkShopTalentChoose::OnCommandBtnChooseTalent(0xchar const *)'::`22'::RenewHandler");
	SetCnet(0x0114F574, 41, "CDlgHomeWorldMap");
	SetCnet(0x0114F688, 2, "`public: void __thiscall CDlgHomeWorldMap::OnEventLButtonDownBuyLand(0xunsigned int,long,AUIObject *)'::`2'::CECHomeMapBuyLandHandler");
	SetCnet(0x0114F72C, 41, "CDlgHost");
	SetCnet(0x0114F7D4, 41, "CDlgShieldEnergy");
	SetCnet(0x0114F87C, 2, "IconStateEventBase");
	SetCnet(0x0114F888, 2, "IconStateEvent_464");
	SetCnet(0x0114FBB8, 3, "IconStateDefault");
	SetCnet(0x0114FBDC, 3, "IconStateDefault_New");
	SetCnet(0x0114FBEC, 3, "IconStateBigIcon2IntegersRange");
	SetCnet(0x0114FBFC, 3, "IconStateBigIcon2IntegersRange_New");
	SetCnet(0x0114FC0C, 3, "IconStateBigIcon1Integer");
	SetCnet(0x0114FC1C, 3, "IconStateBigIcon1Integer_New");
	SetCnet(0x0114FCF4, 41, "CDlgHostELF");
	SetCnet(0x0114FECC, 41, "CDlgHostPet");
	SetCnet(0x0114FFD0, 2, "CECPlayerEquipItemsDrawer");
	SetCnet(0x0114FFDC, 41, "CDlgHPCExtraFunction");
	SetCnet(0x011504DC, 41, "CDlgHPCGenderName");
	SetCnet(0x01150584, 41, "CDlgHPCConfirm");
	SetCnet(0x01150678, 41, "CDlgHPCMakeupBrow");
	SetCnet(0x01150720, 2, "CDlgHPCMakeupBrow");
	SetCnet(0x0115072C, 41, "CDlgHPCMakeupEyeshadow");
	SetCnet(0x011507D4, 2, "CDlgHPCMakeupEyeshadow");
	SetCnet(0x011507E0, 41, "CDlgHPCMakeupEyeline");
	SetCnet(0x01150888, 2, "CDlgHPCMakeupEyeline");
	SetCnet(0x01150894, 41, "CDlgHPCMakeupEyelash");
	SetCnet(0x0115093C, 2, "CDlgHPCMakeupEyelash");
	SetCnet(0x01150948, 41, "CDlgHPCMakeupPupil");
	SetCnet(0x011509F0, 2, "CDlgHPCMakeupPupil");
	SetCnet(0x01150A18, 41, "CDlgHPCMakeupBlusher");
	SetCnet(0x01150AC0, 2, "CDlgHPCMakeupBlusher");
	SetCnet(0x01150AD4, 41, "CDlgHPCMakeupHair");
	SetCnet(0x01150B7C, 2, "CDlgHPCMakeupHair");
	SetCnet(0x01150B88, 41, "CDlgHPCMakeupLip");
	SetCnet(0x01150C30, 2, "CDlgHPCMakeupLip");
	SetCnet(0x01150C44, 41, "CDlgHPCMakeupMain");
	SetCnet(0x01150FB8, 41, "CDlgHPCMakeupSkin");
	SetCnet(0x01151060, 2, "CDlgHPCMakeupSkin");
	SetCnet(0x01151090, 41, "CDlgHPCMakeupTattoo");
	SetCnet(0x01151174, 43, "CDlgHPCMakeupTextures");
	SetCnet(0x011512C8, 41, "CDlgHpOtherMonster");
	SetCnet(0x011513AC, 41, "CDlgHPPortrait");
	SetCnet(0x01151464, 41, "CDlgHPSystem");
	SetCnet(0x0115156C, 41, "CDlgHuaZhaoActivity");
	SetCnet(0x01151614, 2, "CECHuaZhaoTaskTrigger");
	SetCnet(0x01151734, 41, "CDlgIceThunderBall");
	SetCnet(0x01151924, 41, "CDlgIdentify");
	SetCnet(0x011519CC, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgIdentify>");
	SetCnet(0x011519F0, 2, "`public: void __thiscall CDlgIdentify::OnCommand_start(0xchar const *)'::`7'::IdentifyMessageBoxHandler");
	SetCnet(0x01151A0C, 3, "CDlgIdentifyItemMain::CECCloseDlgTimer");
	SetCnet(0x01151A1C, 41, "CDlgIdentifyItemMain");
	SetCnet(0x01151AD0, 3, "`public: void __thiscall CDlgIdentifyItemMain::OnCommandIdentify(0xchar const *)'::`7'::CECAward");
	SetCnet(0x01151B54, 41, "CDlgInfo");
	SetCnet(0x01151D7C, 1, "ListboxItemsFilter");
	SetCnet(0x01151DB4, 41, "CDlgInputName");
	SetCnet(0x01151EEC, 41, "CDlgInputNO");
	SetCnet(0x01151F94, 41, "CDlgInputNO3");
	SetCnet(0x0115203C, 41, "CDlgFactionInputNO");
	SetCnet(0x01152168, 41, "CDlgInstall");
	SetCnet(0x01152218, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgInstall>");
	SetCnet(0x01152268, 2, "`public: void __thiscall CDlgInstall::OnCommandStart(0xchar const *)'::`4'::InstallMoneyMessageBoxHandler");
	SetCnet(0x01152298, 41, "CDlgInstanceManual");
	SetCnet(0x01152414, 41, "CDlgInstanceManualDetail");
	SetCnet(0x011524BC, 41, "CDlgMonsterSkillList");
	SetCnet(0x01152564, 41, "CDlgMonsterSkillInfo");
	SetCnet(0x01152714, 6, "GNET::BottleReply");
	SetCnet(0x01152730, 6, "GNET::RpcDataVector<GNET::BottleReply>");
	SetCnet(0x0115274C, 6, "GNET::GDriftBottle");
	SetCnet(0x01152768, 41, "CDlgInstanceMessageBoard");
	SetCnet(0x01152810, 44, "CDlgMessageItem");
	SetCnet(0x011528C4, 6, "GNET::BookBottleReply");
	SetCnet(0x01152948, 6, "GNET::RpcDataVector<GNET::BookBottleReply>");
	SetCnet(0x011529C4, 3, "GNET::STLContainer<std::vector<GNET::BookBottleReply,std::allocator<GNET::BookBottleReply> > >");
	SetCnet(0x011529D4, 3, "GNET::STLContainer<std::vector<GNET::BottleReply,std::allocator<GNET::BottleReply> > >");
	SetCnet(0x011529EC, 41, "CDlgInstanceStage");
	SetCnet(0x01152B20, 41, "CDlgInstanceStageSwitch");
	SetCnet(0x01152C84, 41, "CDlgInventory");
	SetCnet(0x01152E54, 2, "FastRepairMessageBoxHandler");
	SetCnet(0x01152E60, 2, "CDlgInventoryMessageBoxHandler");
	SetCnet(0x01152E6C, 5, "InventoryClickShortcut");
	SetCnet(0x01153068, 2, "`public: void __thiscall CDlgInventory::OnEventLButtonDown(0xunsigned int,long,AUIObject *)'::`44'::RepairMessageBoxHandler");
	SetCnet(0x01153074, 2, "`public: void __thiscall CDlgInventory::OnEventLButtonDown(0xunsigned int,long,AUIObject *)'::`40'::CostHandler");
	SetCnet(0x01153108, 42, "CDlgInventoryDetail");
	SetCnet(0x011531C4, 41, "CDlgInvisibleList");
	SetCnet(0x01153280, 41, "CDlgItemBubble");
	SetCnet(0x01153344, 41, "CDlgItemDesc");
	SetCnet(0x0115347C, 41, "CDlgKingAuction");
	SetCnet(0x0115354C, 41, "CDlgKingCommand");
	SetCnet(0x01153660, 41, "CDlgKingElection");
	SetCnet(0x01153708, 41, "CDlgKingResult");
	SetCnet(0x011537EC, 41, "CDlgLeaveWords");
	SetCnet(0x01153894, 46, "CDlgLevel2UpgradeShow");
	SetCnet(0x01153C38, 46, "CDlgLevel2UpgradeShowDeity");
	SetCnet(0x01153D34, 3, "`public: void __thiscall CDlgLevel2UpgradeShowDeity::PlayLevelUpGfx(0xvoid)'::`2'::CloseDlg");
	SetCnet(0x01153D44, 3, "`public: void __thiscall CDlgLevel2UpgradeShowDeity::PlayLevelUpGfx(0xvoid)'::`5'::NextStep");
	SetCnet(0x01153F98, 41, "CDlgLoanMain");
	SetCnet(0x01154040, 44, "CDlgLoanConfigItem");
	SetCnet(0x011540F4, 41, "CDlgLoanList");
	SetCnet(0x0115419C, 44, "CDlgLoanListItem");
	SetCnet(0x01154250, 41, "CDlgLoanPayment");
	SetCnet(0x011542F8, 15, "CECLoanEquipUpInheritStoneHole");
	SetCnet(0x01154338, 15, "CECLoanEquipUpInheritHole");
	SetCnet(0x01154378, 47, "CDlgLoanEquipUp");
	SetCnet(0x01154438, 41, "CDlgLoanEquipUpEnsure");
	SetCnet(0x0115464C, 2, "`public: void __thiscall CDlgLoanMain::OnCommand_DownPayment(0xchar const *)'::`44'::SecondSure");
	SetCnet(0x011546E8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgLoanPayment>");
	SetCnet(0x01154770, 2, "GiveUpTipsHandler");
	SetCnet(0x0115477C, 2, "`public: void __thiscall CDlgLoanEquipUp::OnCommand_Confirm(0xchar const *)'::`14'::TipsHandler");
	SetCnet(0x011547D0, 41, "CDlgLogin");
	SetCnet(0x01154A8C, 41, "CDlgLoginButton");
	SetCnet(0x01154BA8, 41, "CDlgLoginErr");
	SetCnet(0x01154D80, 50, "CDlgLoginOther");
	SetCnet(0x01154E4C, 1, "CDlgLoginOther");
	SetCnet(0x01154EAC, 41, "CDlgLoginPage");
	SetCnet(0x01154F54, 41, "CDlgLoginPage2");
	SetCnet(0x01155080, 4, "CECObserver<CECLoginQueue>");
	SetCnet(0x01155094, 41, "CDlgLoginQueue");
	SetCnet(0x0115513C, 4, "CDlgLoginQueue");
	SetCnet(0x011551D8, 41, "CDlgLoginServerList");
	SetCnet(0x01155394, 41, "CDlgLotteryBatchSetting");
	SetCnet(0x011554A4, 41, "CDlgLotteryBatchSettingSub");
	SetCnet(0x01155558, 41, "CDlgLotteryBatchSettingSubList");
	SetCnet(0x01155600, 41, "CDlgLotterySub");
	SetCnet(0x011556B8, 41, "CDlgLotterySubList");
	SetCnet(0x01155768, 41, "CDlgLotteryHintCostItem");
	SetCnet(0x011558E4, 41, "CDlgLotteryMain");
	SetCnet(0x01155AB4, 3, "`public: void __thiscall CDlgLotteryMain::SetBoxInfo(0xvoid)'::`2'::UpdataUI");
	SetCnet(0x01155AC4, 3, "`public: void __thiscall CDlgLotteryMain::SetBoxInfo(0xvoid)'::`2'::UpdataUI1");
	SetCnet(0x01155AD4, 3, "`public: void __thiscall CDlgLotteryMain::SetBoxInfo(0xstd::vector<CECLotteryMain::CardInfo,std::allocator<CECLotteryMain::CardInfo> >,bool)'::`2'::UpdataUI");
	SetCnet(0x01155AF8, 3, "`public: void __thiscall CDlgLotteryMain::SetSomeCardInfo(0xint,CECLotteryMain::CardInfo,bool)'::`27'::UpdataUI");
	SetCnet(0x01155B08, 3, "`public: void __thiscall CDlgLotteryMain::SetSomeCardInfo(0xCECLotteryMain::CardInfo)'::`2'::UpdataUI");
	SetCnet(0x01155BE4, 41, "CDlgMailList");
	SetCnet(0x01155C8C, 6, "GNET::GMailHeader");
	SetCnet(0x01155CA8, 6, "GNET::RpcDataVector<GNET::GMailHeader>");
	SetCnet(0x01155DA8, 3, "GNET::STLContainer<std::vector<GNET::GMailHeader,std::allocator<GNET::GMailHeader> > >");
	SetCnet(0x01155DDC, 41, "CDlgMailOption");
	SetCnet(0x01155F1C, 41, "CDlgMailRead");
	SetCnet(0x01155FC4, 6, "GNET::GMail");
	SetCnet(0x01156174, 41, "CDlgMailToFriends");
	SetCnet(0x011562AC, 7, "IOnlineReminder");
	SetCnet(0x011562CC, 7, "CMailtoFriendReminder");
	SetCnet(0x011562EC, 7, "CActivityReminder");
	SetCnet(0x0115630C, 41, "CDlgOnlineRemind");
	SetCnet(0x011564C4, 41, "CDlgMailWrite");
	SetCnet(0x0115656C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgMailWrite>");
	SetCnet(0x0115659C, 2, "`public: void __thiscall CDlgMailWrite::OnCommandSend(0xchar const *)'::`2'::SendMailMessageBoxHandler");
	SetCnet(0x011565A8, 3, "CECCloseDlgTimer");
	SetCnet(0x011565B8, 41, "CDlgMaSpringWine");
	SetCnet(0x0115694C, 41, "CDlgMaterialRefine");
	SetCnet(0x011569F4, 41, "CDlgMaterialRefineConfirm");
	SetCnet(0x01156AB4, 2, "`public: void __thiscall CDlgMaterialRefine::convertGoldToSilverTip(0xvoid)'::`2'::ConvertGold2SilverMessageBoxHandle");
	SetCnet(0x01156AEC, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgMaterialRefine>");
	SetCnet(0x01156B80, 42, "CDlgMentor");
	SetCnet(0x01156C2C, 42, "CDlgMentorStudentInstance");
	SetCnet(0x01156E64, 45, "CDlgMentoring");
	SetCnet(0x01156F24, 45, "CDlgMentoringApplyList");
	SetCnet(0x01156FE4, 41, "CDlgMentoringLeaveWords");
	SetCnet(0x0115709C, 42, "CDlgMentorRank");
	SetCnet(0x011571EC, 42, "CDlgMentorStudnetAward");
	SetCnet(0x011572FC, 41, "CDlgMentorStudentGet");
	SetCnet(0x011573B4, 44, "CDlgMentorStudentSearchBase");
	SetCnet(0x01157474, 3, "`public: void __thiscall CDlgMentorStudentSearchBase::OnCommandRefreshRecruitList(0xchar const *)'::`5'::CECDisableRefreshTimer");
	SetCnet(0x011574B4, 41, "CDlgMeridians");
	SetCnet(0x01157948, 41, "CDlgMeridiansImpact");
	SetCnet(0x01157BB8, 41, "CDlgMessageBox");
	SetCnet(0x01157C88, 41, "CDlgMiniGameScore");
	SetCnet(0x01157D30, 8, "CardEvent");
	SetCnet(0x01157D54, 8, "CardEventIdle");
	SetCnet(0x01157D78, 8, "CardEventChoosing");
	SetCnet(0x01157D9C, 8, "CardEventSelect");
	SetCnet(0x01157DC0, 8, "CardEventDisappear");
	SetCnet(0x01157F44, 4, "CECObserver<CECPlayerLevelRankRealmChangeCheck>");
	SetCnet(0x01157F58, 41, "CDlgMiniMap");
	SetCnet(0x01158000, 4, "CDlgMiniMap");
	SetCnet(0x011585D4, 41, "CDlgMinimizeBar");
	SetCnet(0x01158750, 41, "CDlgMNFactionBattleFieldInfo");
	SetCnet(0x01158820, 41, "CDlgMNFactionBattleFieldMap");
	SetCnet(0x011588C8, 3, "CECUIHelper::DefaultObjectArrayInitCallback<AUIImagePicture>");
	SetCnet(0x01158998, 41, "CDlgMNFactionBattleResult");
	SetCnet(0x01158A70, 41, "CDlgMNFactionChooseBattle");
	SetCnet(0x01158B68, 41, "CDlgMNFactionHelp");
	SetCnet(0x01158C18, 41, "CDlgMNFactionRank");
	SetCnet(0x01158CF4, 41, "CDlgMNFactionResourcePointDegree");
	SetCnet(0x01158DB0, 41, "CDlgMNFactionTransmit");
	SetCnet(0x01158E80, 41, "CDlgMNFactionWarApply");
	SetCnet(0x01158F40, 41, "CDlgMNFactionWarApplyResult");
	SetCnet(0x01159008, 41, "CDlgMNFactionWorldMap");
	SetCnet(0x01159124, 41, "CDlgMNFActionWorldMapDetail");
	SetCnet(0x01159298, 41, "CDlgMonsterFlag");
	SetCnet(0x011593D4, 41, "CDlgMonsterSpirit");
	SetCnet(0x011594D8, 41, "CDlgMysteriousShop");
	SetCnet(0x01159580, 41, "CDlgMysteriousShopBuyConfirm");
	SetCnet(0x0115975C, 5, "CDlgNameLink::LinkCommand");
	SetCnet(0x01159774, 5, "CDlgNameLink::MoveToLinkCommand");
	SetCnet(0x0115978C, 5, "CDlgNameLink::OpenHomeAppreciateLinkCommand");
	SetCnet(0x011597A4, 5, "CDlgNameLink::TaskEventLinkCommand");
	SetCnet(0x011597BC, 5, "CDlgNameLink::OpenTreasureMapLinkCommand");
	SetCnet(0x01159858, 3, "CardAnimationBase");
	SetCnet(0x01159868, 3, "CardAnimation");
	SetCnet(0x01159878, 3, "CardGfxAnimation");
	SetCnet(0x01159888, 41, "CDlgNewLottery");
	SetCnet(0x01159930, 41, "CDlgNewLotteryRewards");
	SetCnet(0x011599D8, 41, "CDlgNewLotterySetting");
	SetCnet(0x01159A80, 41, "CDlgNewLotteryTips");
	SetCnet(0x01159EF4, 41, "CDlgNewPopMsg");
	SetCnet(0x01159FEC, 41, "CDlgNewserverEvent01");
	SetCnet(0x0115A14C, 2, "CDlgNewserverEvent02::CTaskTrigger");
	SetCnet(0x0115A158, 41, "CDlgNewserverEvent02");
	SetCnet(0x0115A620, 41, "CDlgNewserverEvent02view");
	SetCnet(0x0115A9D4, 41, "CDlgNewserverEvent03");
	SetCnet(0x0115AD0C, 41, "CDlgNewserverEvent04");
	SetCnet(0x0115AED4, 41, "CDlgNewserverEvent05");
	SetCnet(0x0115B160, 41, "CDlgNewserverMain");
	SetCnet(0x0115B2C8, 41, "CDlgNPC");
	SetCnet(0x0115B3FC, 2, "`public: bool __thiscall CDlgNPC::PopupCorrespondingServiceDialog(0xint,int,void *)'::`112'::NPCGiveTaskMessageBoxHandler");
	SetCnet(0x0115B408, 2, "`public: bool __thiscall CDlgNPC::PopupCorrespondingServiceDialog(0xint,int,void *)'[::N]::NPCComplteTaskMessageBoxHandler");
	SetCnet(0x0115B5F8, 2, "`protected: void __thiscall CDlgNPC::SelectListItem(0xint)'::`467'::ClearChangeCampCDMsgHandler");
	SetCnet(0x0115B72C, 41, "CDlgNPCTalk");
	SetCnet(0x0115B9EC, 41, "CDlgOfflineBattlePanel");
	SetCnet(0x0115BA94, 41, "CDlgOfflineBattleTiny");
	SetCnet(0x0115BBB4, 2, "`public: void __thiscall CDlgOfflineBattleTiny::OnCommand_Leave(0xchar const *)'::`2'::ArenaLeaveHandler");
	SetCnet(0x0115BBDC, 41, "CDlgOfflineBattleShut");
	SetCnet(0x0115BC9C, 41, "CDlgOfflineShopCreate");
	SetCnet(0x0115BD44, 41, "CDlgOfflineShopType");
	SetCnet(0x0115BDEC, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgOfflineShopCreate>");
	SetCnet(0x0115BE20, 6, "CShopItemSearcher");
	SetCnet(0x0115BE3C, 43, "CDlgShopSearchBase");
	SetCnet(0x0115BEEC, 8, "CUIActionDelegate");
	SetCnet(0x0115BF10, 8, "CViewShopItem");
	SetCnet(0x0115BF34, 8, "CViewQueryItem");
	SetCnet(0x0115BF58, 43, "CDlgOfflineShopItemsList");
	SetCnet(0x0115C0C0, 3, "WikiEntity");
	SetCnet(0x0115C0D0, 3, "WikiSearcher::SearchCommand");
	SetCnet(0x0115C0E0, 4, "WikiSearcher::ContentProvider");
	SetCnet(0x0115C0F4, 3, "ShopDataProvider::Entity");
	SetCnet(0x0115C104, 4, "ShopDataProvider");
	SetCnet(0x0115C118, 43, "CDlgOfflineShopList");
	SetCnet(0x0115C238, 41, "CDlgOfflineShopSelfSetting");
	SetCnet(0x0115C2E0, 8, "OfflineShopClickShortcut");
	SetCnet(0x0115C348, 41, "CDlgOfflinShopSelfSettingLog");
	SetCnet(0x0115C4A0, 42, "CDlgOfflineShopStore");
	SetCnet(0x0115C56C, 1, "COnlineAwardCtrl");
	SetCnet(0x0115C574, 41, "CDlgOnlineAward");
	SetCnet(0x0115C650, 2, "CECOnlineAwardMessageBoxHandler");
	SetCnet(0x0115C6E4, 41, "CDlgOptimizeBase");
	SetCnet(0x0115C7F0, 41, "CDlgOptimizeFunc");
	SetCnet(0x0115C9CC, 41, "CDlgOptimizeMem");
	SetCnet(0x0115CC48, 41, "CDlgOptimizeOS");
	SetCnet(0x0115CD58, 43, "CDlgPalette");
	SetCnet(0x0115CE54, 44, "CDlgPalette2");
	SetCnet(0x0115CF44, 42, "CDlgPaletteBase");
	SetCnet(0x0115CFF0, 43, "CDlgPaletteFashion");
	SetCnet(0x0115D10C, 41, "CDlgParkRankList");
	SetCnet(0x0115D218, 5, "CECPasswordInfoBase");
	SetCnet(0x0115D230, 41, "CDlgPasswordConfirm");
	SetCnet(0x0115D2D8, 5, "CECMinePassword");
	SetCnet(0x0115D32C, 41, "CDlgPengPengEnter");
	SetCnet(0x0115D3EC, 41, "CDlgPengPengRank");
	SetCnet(0x0115D534, 41, "CDlgPetDetail");
	SetCnet(0x0115D81C, 41, "CDlgPetDye");
	SetCnet(0x0115D8C4, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgPetDye>");
	SetCnet(0x0115D96C, 41, "CDlgPetEvolution");
	SetCnet(0x0115DBE0, 2, "`public: void __thiscall CDlgPetEvolution::OnCommand_Skin(0xchar const *)'::`9'::PetSkinBuyMsgHandler");
	SetCnet(0x0115DC1C, 41, "CDlgPetEvoAnim");
	SetCnet(0x0115DCD4, 41, "CDlgPetFittingRoom");
	SetCnet(0x0115DD8C, 41, "CDlgPetHandBookSub");
	SetCnet(0x0115DE34, 41, "CDlgPetHandBookSubList");
	SetCnet(0x0115DF5C, 41, "CDlgPetHatch");
	SetCnet(0x0115E004, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgPetHatch>");
	SetCnet(0x0115E028, 2, "`public: void __thiscall CDlgPetHatch::OnCommandConfirm(0xchar const *)'::`2'::PetHatchConfirmMessageBoxHandler");
	SetCnet(0x0115E0C4, 41, "CDlgPetList");
	SetCnet(0x0115E2E4, 41, "CDlgPetNature");
	SetCnet(0x0115E424, 41, "CDlgPetRec");
	SetCnet(0x0115E4CC, 2, "RestorePetMoneyMessageBoxHandler");
	SetCnet(0x0115E55C, 41, "CDlgPetRename");
	SetCnet(0x0115E694, 41, "CDlgPetRetrain");
	SetCnet(0x0115E744, 41, "CDlgPKSetting");
	SetCnet(0x0115E96C, 41, "CDlgPlayerFightScore");
	SetCnet(0x0115EA44, 7, "CDlgModifyNamePolicy");
	SetCnet(0x0115EA64, 41, "CDlgModifyName");
	SetCnet(0x0115EB0C, 7, "CDlgPlayerRenamePolicy");
	SetCnet(0x0115EB2C, 7, "CDlgFactionRenamePolicy");
	SetCnet(0x0115EB80, 41, "CDlgPopMsg");
	SetCnet(0x0115ECCC, 44, "CDlgPQ");
	SetCnet(0x0115EE94, 41, "CDlgPray");
	SetCnet(0x0115EFB4, 41, "CDlgPreviewPetRebuild");
	SetCnet(0x0115F128, 41, "CDlgPreviewProduce");
	SetCnet(0x0115F25C, 44, "CDlgPridictableEngrave");
	SetCnet(0x0115F324, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgPridictableEngrave>");
	SetCnet(0x0115F358, 41, "CDlgProclaim");
	SetCnet(0x0115F484, 42, "CDlgProduce");
	SetCnet(0x0115F530, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgProduce>");
	SetCnet(0x0115F574, 2, "`public: void __thiscall CDlgProduce::OnCommand_begin(0xchar const *)'::`17'::ProduceMoneyMessageBoxHandler");
	SetCnet(0x0115F594, 2, "`private: void __thiscall CDlgProduce::BulkProduce(0xunsigned int,unsigned int,int)'::`5'::BatchProduce_BoxHander");
	SetCnet(0x0115F5A0, 2, "`private: void __thiscall CDlgProduce::BulkProduce(0xunsigned int,unsigned int,int)'::`7'::ReProduceBoxHander");
	SetCnet(0x0115F5AC, 2, "`private: void __thiscall CDlgProduce::BulkCompose(0xunsigned int,unsigned int,int *,int *,int)'::`5'::BatchProduce_BoxHander");
	SetCnet(0x0115F5B8, 2, "`private: void __thiscall CDlgProduce::BulkCompose(0xunsigned int,unsigned int,int *,int *,int)'::`7'::ReProduceBoxHander");
	SetCnet(0x0115F5D8, 2, "`public: void __thiscall CDlgProduce::UpgradeEquipment(0xchar)'::`2'::UpgradeEquipmentMoneyMessageBoxHandler");
	SetCnet(0x0115F5F4, 41, "CDlgProduceLibrary");
	SetCnet(0x0115F6B0, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgProduceLibrary>");
	SetCnet(0x0115F708, 2, "`public: void __thiscall CDlgProduceLibrary::BeginProduce(0xvoid)'::`4'::LibProduceMessageBox");
	SetCnet(0x0115F714, 2, "`public: void __thiscall CDlgProduceLibrary::OnCommandProduce(0xchar const *)'::`2'::ProduceLibraryMessageBoxHandler");
	SetCnet(0x0115F758, 41, "CDlgProduceLibRelationship");
	SetCnet(0x0115F800, 41, "CDlgRelationshipSubCostList");
	SetCnet(0x0115F8A8, 41, "CDlgRelationshipSubProductList");
	SetCnet(0x0115F950, 41, "CDlgRelationshipSubCost");
	SetCnet(0x0115F9F8, 41, "CDlgRelationshipSubProduct");
	SetCnet(0x0115FB20, 41, "CDlgProfView");
	SetCnet(0x0115FCB8, 42, "CDlgPureColorFashionTip");
	SetCnet(0x0115FE34, 2, "CECSceneServiceNPC::SceneServiceNPCProcessor");
	SetCnet(0x0115FE40, 4, "CECObserver<CECSceneServiceNPC>");
	SetCnet(0x0115FE54, 41, "CDlgQShop");
	SetCnet(0x0115FEFC, 4, "CDlgQShop");
	SetCnet(0x0116012C, 2, "`public: CECSceneNPCID __thiscall CDlgQShop::FindSelectSShopNPC(0xvoid)const '::`2'::SceneServiceNPCFinder");
	SetCnet(0x011601E0, 41, "CDlgQShopBuy");
	SetCnet(0x01160288, 2, "`public: void __thiscall CDlgQShopBuy::OnCommandConfirm(0xchar const *)'::`10'::QShopBuyMsgHandler");
	SetCnet(0x01160324, 41, "CDlgQShopItem");
	SetCnet(0x01160410, 41, "CDlgQuestion");
	SetCnet(0x011604E0, 41, "CDlgQuestionnaireEntrance");
	SetCnet(0x01160588, 41, "CDlgQuestionnaire");
	SetCnet(0x01160660, 41, "CDlgQuestionTask");
	SetCnet(0x01160720, 41, "CDlgQuickAction");
	SetCnet(0x011608A8, 2, "`public: void __thiscall CDlgQuickAction::OnCommand_InviteGroup(0xchar const *)'::`5'::CECSecondConfirm");
	SetCnet(0x01160954, 41, "CDlgQuickBar");
	SetCnet(0x01160AF8, 1, "ItemDataExtractorQuickbar");
	SetCnet(0x01160B94, 41, "CDlgQuickBarPet");
	SetCnet(0x01160CC0, 7, "CECShopBuyCommandObserver");
	SetCnet(0x01160CE0, 44, "CDlgQuickBuyBase");
	SetCnet(0x01160D94, 7, "CDlgQuickBuyBase");
	SetCnet(0x01160DB4, 3, "CECShopSearchPricePolicy");
	SetCnet(0x01160DC4, 3, "CECShopSearchPackSpacePolicy");
	SetCnet(0x01160E14, 44, "CDlgQuickBuyPop");
	SetCnet(0x01160EC8, 7, "CDlgQuickBuyPop");
	SetCnet(0x01160F08, 41, "CDlgQuickPay");
	SetCnet(0x01161058, 41, "CDlgRandomMap");
	SetCnet(0x01161100, 2, "PosConvertorRandomWar");
	SetCnet(0x0116116C, 41, "CDlgRandomSoftKeyboard");
	SetCnet(0x011612BC, 41, "CDlgRandProp");
	SetCnet(0x01161370, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgRandProp>");
	SetCnet(0x01161394, 2, "RandPropMoneyMessageBoxHandler");
	SetCnet(0x01161430, 41, "CDlgRecallActivityCode");
	SetCnet(0x011614D8, 41, "CDlgRecallActivityMain");
	SetCnet(0x01161580, 44, "CDlgActivityRewardItem");
	SetCnet(0x01161634, 42, "CDlgRecallInviterAward");
	SetCnet(0x011616E0, 41, "CDlgRecallerReward");
	SetCnet(0x01161788, 43, "CDlgRecallActivityEntrance");
	SetCnet(0x01161A70, 41, "CDlgRedBookMain");
	SetCnet(0x01161B18, 41, "CDlgRedBookRankList");
	SetCnet(0x01161BC0, 41, "CDlgRedBookEntrance");
	SetCnet(0x01161DD0, 2, "`void __cdecl SendEatCmd(0xCECIvtrItem *,int)'::`2'::SendEatCmdMsgHandler");
	SetCnet(0x01161DEC, 2, "`void __cdecl SendAwardCmd(0xint,int)'::`24'::SendAwardCmdMsgHandler");
	SetCnet(0x01161DF8, 1, "`public: void __thiscall CDlgRedBookMain::OnCommandCurAward(0xchar const *)'::`10'::GetAwardAfterMove");
	SetCnet(0x01161E18, 3, "`public: void __thiscall CDlgRedBookMain::ShowOpenVipAwardGfx(0xbool)'::`2'::CECHideGfx");
	SetCnet(0x01161F8C, 41, "CDlgRedBookBox");
	SetCnet(0x011620CC, 41, "CDlgRedPacket");
	SetCnet(0x011621A0, 41, "CDlgRedPacketEdit");
	SetCnet(0x0116226C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgRedPacketEdit>");
	SetCnet(0x01162320, 41, "CDlgRedPacketGfx");
	SetCnet(0x011623D0, 41, "CDlgRedPacketMessage");
	SetCnet(0x01162490, 41, "CDlgRedPacketResult");
	SetCnet(0x01162548, 41, "CDlgRedSpark");
	SetCnet(0x01162724, 41, "CDlgRefineTrans");
	SetCnet(0x011627CC, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgRefineTrans>");
	SetCnet(0x01162814, 2, "`public: void __thiscall CDlgRefineTrans::OnCommandConfirm(0xchar const *)'::`20'::RefineTransHandler");
	SetCnet(0x011628B4, 41, "CDlgReincarnation");
	SetCnet(0x011629BC, 41, "CDlgReincarnationBook");
	SetCnet(0x01162ADC, 41, "CDlgReincarnationRewrite");
	SetCnet(0x01162BF4, 41, "CDlgFullScreenEffectShow");
	SetCnet(0x01162CA4, 41, "CDlgReportToGM");
	SetCnet(0x01162DCC, 41, "CDlgResetProp");
	SetCnet(0x01162E74, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgResetProp>");
	SetCnet(0x01162EB4, 41, "CDlgReturnReward");
	SetCnet(0x01162F64, 41, "CDlgRevive");
	SetCnet(0x01163014, 2, "CDlgReviveMessageBoxHandler");
	SetCnet(0x01163030, 41, "CDlgRuneEquip");
	SetCnet(0x01163204, 41, "CDlgRuneForge");
	SetCnet(0x011632F4, 41, "CDlgRuneMain");
	SetCnet(0x0116339C, 44, "CDlgSkillItem");
	SetCnet(0x01163484, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgRuneMain>");
	SetCnet(0x011635FC, 43, "CDlgScreenPositionBase");
	SetCnet(0x011636C8, 41, "CDlgScriptHelp");
	SetCnet(0x011637B8, 41, "CDlgScriptHelpHistory");
	SetCnet(0x01163878, 41, "CDlgScriptTip");
	SetCnet(0x01163954, 3, "CDlgSelect::HintDlgShow");
	SetCnet(0x01163964, 41, "CDlgSelect");
	SetCnet(0x01163A0C, 3, "HintDlgUsbKey");
	SetCnet(0x01163A28, 3, "HintDlgTooMoreCharacter");
	SetCnet(0x01163B90, 41, "CDlgSelectTransmitMap");
	SetCnet(0x01163C9C, 41, "CDlgServantLesson");
	SetCnet(0x01163D44, 41, "CDlgServantGrowing");
	SetCnet(0x01163DEC, 41, "CDlgServantInputName");
	SetCnet(0x01163E94, 41, "CDlgServantGfx");
	SetCnet(0x01163F3C, 41, "CDlgServantNewDay");
	SetCnet(0x01163FE4, 41, "CDlgServantLessonPool");
	SetCnet(0x0116408C, 41, "CDlgServantWakeUpResult");
	SetCnet(0x011641C0, 2, "`public: void __thiscall CDlgServantGrowing::OnCommand_Arrage(0xchar const *)'::`5'::CECSencondEnsure");
	SetCnet(0x0116428C, 3, "`public: void __thiscall CDlgServantGrowing::ShowArrangeLessonGfx(0xbool,int)'::`7'::CECHideGfx02");
	SetCnet(0x011642CC, 3, "`public: void __thiscall CDlgServantGrowing::ShowForgeGfx(0xint,int,int)'::`2'::CECRefreshPage");
	SetCnet(0x01164300, 3, "`public: void __thiscall CDlgServantGrowing::ShowForgeResult(0xvoid)'::`2'::CECClearForgeInfo");
	SetCnet(0x01164500, 3, "`public: void __thiscall CDlgServantInputName::OnServerNotifyBegResault(0xint)'::`2'::CECHideObject");
	SetCnet(0x01164540, 3, "CECWakeUpTimer");
	SetCnet(0x01164660, 41, "CDlgServantMain");
	SetCnet(0x01164708, 41, "CDlgServantSubAward");
	SetCnet(0x011647B0, 41, "CDlgServantAward");
	SetCnet(0x01164A5C, 41, "CDlgServantAdult");
	SetCnet(0x01164CA4, 3, "`public: void __thiscall CDlgServantAdult::ShowUpgradeGfx(0xint)'::`5'::HideGfxTimer");
	SetCnet(0x01164CBC, 41, "CDlgServantLevelUp");
	SetCnet(0x01164DEC, 2, "`public: void __thiscall CDlgServantLevelUp::OnCommandSubmit(0xchar const *)'::`7'::CECMoneyTips");
	SetCnet(0x01164E08, 41, "CDlgServantQuickBar");
	SetCnet(0x01164F60, 41, "CDlgServantQuickBarSettings");
	SetCnet(0x011650D4, 41, "CDlgServantSubBag");
	SetCnet(0x0116517C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgServantSubBag>");
	SetCnet(0x011651BC, 41, "CDlgServantSubState");
	SetCnet(0x011652CC, 41, "CDlgServantSubStory");
	SetCnet(0x01165388, 41, "CDlgSetPW");
	SetCnet(0x01165448, 45, "CDlgSetting");
	SetCnet(0x01165584, 45, "CDlgSettingGame");
	SetCnet(0x01165714, 45, "CDlgSettingQuickKey");
	SetCnet(0x01165830, 41, "CDlgSettingScriptHelp");
	SetCnet(0x011658F0, 45, "CDlgSettingSystem");
	SetCnet(0x01165B6C, 45, "CDlgSettingVideo");
	SetCnet(0x01165CE4, 2, "`public: void __thiscall CDlgSettingVideo::OnCommandResetPos(0xchar const *)'::`2'::ResetDialogPos");
	SetCnet(0x01165D7C, 41, "CDlgShop");
	SetCnet(0x01165E48, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgShop>");
	SetCnet(0x01165ED0, 2, "`public: void __thiscall CDlgShop::OnCommand_buy(0xchar const *)'::`12'::BuyItemsFromNPCMessageBoxHandler");
	SetCnet(0x01165F58, 4, "CECObserver<CECShoppingController>");
	SetCnet(0x01165F6C, 41, "CDlgShopCart");
	SetCnet(0x01166014, 4, "CDlgShopCart");
	SetCnet(0x01166028, 4, "CDlgShopCart");
	SetCnet(0x0116603C, 5, "CECShopCartBuyCommand");
	SetCnet(0x01166088, 41, "CDlgShopCartSub");
	SetCnet(0x0116614C, 42, "CDlgShopCartSubList");
	SetCnet(0x01166278, 41, "CDlgSignIn");
	SetCnet(0x01166408, 5, "CECCustomizePolicy");
	SetCnet(0x01166420, 4, "CDlgSimpleCostItemServicePolicy::ProtocolParameterReadyPolicy");
	SetCnet(0x01166434, 7, "CDlgSimpleCostItemServicePolicy");
	SetCnet(0x01166454, 41, "CDlgSimpleCostItemService");
	SetCnet(0x011664FC, 4, "CDlgSimpleCostItemService");
	SetCnet(0x01166510, 7, "CDlgChangeGenderPolicy");
	SetCnet(0x01166530, 5, "CDlgChangeGenderPolicy");
	SetCnet(0x01166564, 41, "CDlgSimpleDynSkill");
	SetCnet(0x01166648, 41, "CDlgSimulatorAstrolabe");
	SetCnet(0x011668E0, 41, "CDlgSimulatorCTMain");
	SetCnet(0x01166988, 42, "CDlgSimulatorCTOpts");
	SetCnet(0x01166A34, 41, "CDlgSimulatorCTLevelDetail");
	SetCnet(0x01166ADC, 43, "CDlgSimulatorCTTreeDetail");
	SetCnet(0x01166C5C, 44, "CDlgItemEquipRefine");
	SetCnet(0x01166D10, 44, "CDlgItemEquipStone");
	SetCnet(0x01166DC4, 44, "CDlgItemEquipEngrave");
	SetCnet(0x01166E78, 41, "CDlgSimulatorClassify");
	SetCnet(0x01167108, 41, "CDlgSimulatorEquipList");
	SetCnet(0x011671B0, 41, "CDlgSimulatorStoneList");
	SetCnet(0x01167258, 44, "CDlgStoneItem");
	SetCnet(0x0116730C, 41, "CDlgSimulatorEngrave");
	SetCnet(0x011673B4, 41, "CDlgSimulatorRandomProps");
	SetCnet(0x011675AC, 41, "CDlgSimulatorEquipmentDetail");
	SetCnet(0x01167654, 41, "CDlgSimulatorCampTokenDetail");
	SetCnet(0x01167804, 41, "CDlgSimulatorGeneralCardDetail");
	SetCnet(0x011678AC, 42, "CDlgSimulatorGeneralCardList");
	SetCnet(0x01167958, 41, "CDlgSimulatorSoulSetting");
	SetCnet(0x01167AA8, 41, "CDlgSimulatorHelp");
	SetCnet(0x01167B94, 41, "CDlgSimulatorMain");
	SetCnet(0x01167C3C, 41, "CDlgCharacterSimulator");
	SetCnet(0x011681F8, 41, "CDlgSimulatorProduceLine");
	SetCnet(0x011682A0, 44, "CDlgItemProduce");
	SetCnet(0x01168354, 41, "CDlgSimulatorMaterialAcquireMethod");
	SetCnet(0x011685A8, 41, "CDlgSimulatorRuneList");
	SetCnet(0x01168650, 44, "CDlgItemRune");
	SetCnet(0x01168778, 41, "CDlgSimulatorSoul");
	SetCnet(0x01168820, 41, "CDlgSimulatorStorage");
	SetCnet(0x011688C8, 44, "CDlgStorageItem");
	SetCnet(0x01168B1C, 44, "CDlgItemSuit");
	SetCnet(0x01168BD0, 41, "CDlgSimulatorSuitList");
	SetCnet(0x01168C78, 41, "CDlgSimulatorCompare");
	SetCnet(0x01168D20, 41, "CDlgSimulatorSuits");
	SetCnet(0x01168E44, 2, "`public: void __thiscall CDlgSimulatorSuitList::OnCommand_Delete(0xchar const *)'::`10'::DeleteFileW");
	SetCnet(0x01168FD8, 41, "CDlgSkillAction");
	SetCnet(0x01169130, 41, "CDlgSkillConfig");
	SetCnet(0x01169210, 2, "`public: void __thiscall CDlgSkillConfig::OnCommandBtnDel(0xchar const *)'::`2'::DelHandler");
	SetCnet(0x01169248, 41, "CDlgSkillEdit");
	SetCnet(0x01169340, 41, "CDlgSkillEffect");
	SetCnet(0x01169464, 41, "CDlgSkillSubAction");
	SetCnet(0x01169634, 4, "CECObserver<CECHostSkillModel>");
	SetCnet(0x01169648, 41, "CDlgSkillSubList");
	SetCnet(0x011696F0, 4, "CDlgSkillSubList");
	SetCnet(0x01169794, 8, "GNET::element_skill_array<std::pair<unsigned int,int> >");
	SetCnet(0x011697B8, 8, "element_skill_id_level_array");
	SetCnet(0x011697DC, 41, "CDlgSkillSubListItem");
	SetCnet(0x01169894, 2, "CECSkillUpGradeSkillHandler");
	SetCnet(0x011698A0, 2, "`public: virtual void __thiscall CECSkillUpGradeSkillHandler::OnMessageBox(0xbool)'::`5'::UpgradeSkillMessageBoxHandler");
	SetCnet(0x0116996C, 41, "CDlgSkillSubOther");
	SetCnet(0x01169BB4, 41, "CDlgSkillSubTree");
	SetCnet(0x01169D44, 41, "CDlgSkillTree");
	SetCnet(0x01169DFC, 41, "CDlgSlideSkill");
	SetCnet(0x01169EB4, 41, "CDlgSlotMachine");
	SetCnet(0x0116A018, 3, "`protected: void __thiscall CDlgSlotMachine::ShowGameResult(0xvoid)'::`2'::CECSlotMachineTimer");
	SetCnet(0x0116A038, 41, "CDlgSoloTowerChallengeAward");
	SetCnet(0x0116A198, 41, "CDlgSoloTowerChallengeConfirm");
	SetCnet(0x0116A250, 41, "CDlgSoloTowerChallengeRankLocal");
	SetCnet(0x0116A2F8, 41, "CDlgSoloTowerChallengeRankGlobal");
	SetCnet(0x0116A410, 41, "CDlgSoloTowerChallengeScoreCost");
	SetCnet(0x0116A4E8, 41, "CDlgSoloTowerChallengeSelectLayer");
	SetCnet(0x0116A59C, 3, "CECUIHelper::DefaultObjectArrayInitCallback<AUIStillImageButton>");
	SetCnet(0x0116A5D8, 41, "CDlgSoloTowerChallengeState");
	SetCnet(0x0116A75C, 41, "CDlgSplit");
	SetCnet(0x0116A804, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgSplit>");
	SetCnet(0x0116A828, 2, "`public: void __thiscall CDlgSplit::OnCommand_begin(0xchar const *)'::`5'::SplitMessageBoxHandler");
	SetCnet(0x0116A83C, 41, "CDlgSpouseEnterHome");
	SetCnet(0x0116A8EC, 41, "CDlgSpouseLoveTree");
	SetCnet(0x0116A99C, 41, "CDlgSpouseLoveTreeChoose");
	SetCnet(0x0116AA54, 41, "CDlgSpouseParadeBook");
	SetCnet(0x0116AB18, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgSpouseParadeBook>");
	SetCnet(0x0116ABC8, 41, "CDlgSpringFestival2021Main");
	SetCnet(0x0116AC70, 41, "CDlgSpringFestival2021Notice");
	SetCnet(0x0116AD18, 41, "CDlgSpringFestival2021Button");
	SetCnet(0x0116B054, 41, "CDlgStatueActionSelect");
	SetCnet(0x0116B0FC, 2, "`public: void __thiscall CDlgStatueActionSelect::OnCommand_Submit(0xchar const *)'::`7'::StatueActionSelectMessageBoxHandler");
	SetCnet(0x0116B108, 41, "CDlgStatuePlayerProperty");
	SetCnet(0x0116B234, 41, "CDlgStoneChange");
	SetCnet(0x0116B2FC, 8, "InstallClickShortcut");
	SetCnet(0x0116B3BC, 41, "CDlgStoneReplace");
	SetCnet(0x0116B470, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgStoneReplace>");
	SetCnet(0x0116B4B4, 2, "`public: void __thiscall CDlgStoneReplace::CheckReplaceMoney(0xvoid)'::`2'::StoneReplaceMoneyMessageBoxHandler");
	SetCnet(0x0116B4D0, 41, "CDlgStoneTransfer");
	SetCnet(0x0116B584, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgStoneTransfer>");
	SetCnet(0x0116B5D0, 2, "`public: void __thiscall CDlgStoneTransfer::CheckTransferMoney(0xvoid)'::`2'::StoneTransferMoneyMessageBoxHandler");
	SetCnet(0x0116B5E4, 41, "CDlgStopNPCVoice");
	SetCnet(0x0116B71C, 2, "CECHostPlayer::PackSorter");
	SetCnet(0x0116B728, 41, "CDlgStorage");
	SetCnet(0x0116B840, 5, "GeneralCardClickShortcut");
	SetCnet(0x0116B858, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgStorage>");
	SetCnet(0x0116B89C, 3, "FashionOrderComponent");
	SetCnet(0x0116B8AC, 3, "FashionGenderOrderComponent");
	SetCnet(0x0116B8BC, 3, "FashionProfessionOrderComponent");
	SetCnet(0x0116B8CC, 3, "FashionWeaponOrderComponent");
	SetCnet(0x0116B8DC, 3, "FashionPartOrderComponent");
	SetCnet(0x0116B8EC, 3, "FashionWeaponTypeOrderComponent");
	SetCnet(0x0116B8FC, 3, "FashionEquipLocationOrderComponent");
	SetCnet(0x0116B90C, 3, "FashionSuiteOrderComponent");
	SetCnet(0x0116B91C, 2, "FashionPackSorterFrameWork");
	SetCnet(0x0116B928, 2, "FashionPackSorterPreferFashionPart");
	SetCnet(0x0116B934, 2, "FashionPackSorterPreferSuite");
	SetCnet(0x0116B964, 2, "`public: void __thiscall CDlgStorage::OnCommand_Ensure(0xchar const *)'::`9'::SecondEnsureMsg");
	SetCnet(0x0116B978, 41, "CDlgStorageChangePW");
	SetCnet(0x0116BA38, 41, "CDlgStoragePW");
	SetCnet(0x0116BB00, 41, "CDlgStoryBookMain");
	SetCnet(0x0116BBA8, 41, "CDlgStoryBookList");
	SetCnet(0x0116BC50, 41, "CDlgStoryBookInfo");
	SetCnet(0x0116BCF8, 41, "CDlgStoryBookEntry");
	SetCnet(0x0116BE50, 42, "CDlgStudent");
	SetCnet(0x0116BF7C, 41, "CDlgSubDialogList");
	SetCnet(0x0116C078, 41, "CDlgSubList");
	SetCnet(0x0116C130, 2, "CECSummerActivityTaskTrigger");
	SetCnet(0x0116C140, 41, "CDlgSummerActivity_2021");
	SetCnet(0x0116C328, 41, "CDlgSysModule");
	SetCnet(0x0116C3D0, 5, "SysModClickShortcut");
	SetCnet(0x0116C430, 41, "CDlgSystem");
	SetCnet(0x0116C5CC, 4, "CECShowNewSkillHelper");
	SetCnet(0x0116C620, 41, "CDlgSystem2");
	SetCnet(0x0116C6C8, 41, "CDlgSystem4");
	SetCnet(0x0116C770, 41, "CDlgSystem6");
	SetCnet(0x0116C818, 4, "CDlgSystem6");
	SetCnet(0x0116C9E4, 41, "CDlgSystem3");
	SetCnet(0x0116CB28, 41, "CDlgTarget");
	SetCnet(0x0116CBD0, 41, "CDlgTargetOfTarget");
	SetCnet(0x0116CD0C, 16, "CDlgTargetShowPlayerPolicy");
	SetCnet(0x0116CD50, 16, "CDlgTargetShowPlayerAsPlayerPolicy");
	SetCnet(0x0116CD94, 16, "CDlgTargetShowNPCAsPlayerPolicy");
	SetCnet(0x0116CEEC, 41, "CDlgTargetItem");
	SetCnet(0x0116D014, 41, "CDlgTask");
	SetCnet(0x0116D304, 41, "CDlgTaskConfirm");
	SetCnet(0x0116D464, 41, "CDlgTaskEventTrace");
	SetCnet(0x0116D5B4, 44, "CDlgNameLink");
	SetCnet(0x0116D668, 44, "CDlgTaskEventTraceSub");
	SetCnet(0x0116D748, 41, "CDlgTaskEventTraceSublist");
	SetCnet(0x0116D81C, 41, "CDlgTaskFinishDiary");
	SetCnet(0x0116D954, 41, "CDlgTaskList");
	SetCnet(0x0116DAB4, 2, "TaskListConfirmMessageBoxHandler");
	SetCnet(0x0116DB08, 3, "`public: void __thiscall CDlgTaskList::ConfirmRefresh(0xAUIDialog *,int)'::`13'::CECAutoHideTimer");
	SetCnet(0x0116DB3C, 41, "CDlgTaskMiniGameQTE");
	SetCnet(0x0116DC80, 41, "CDlgTaskTalk");
	SetCnet(0x0116DDBC, 44, "CDlgTaskTrace");
	SetCnet(0x0116DEA8, 5, "TaskNameHoverCommand");
	SetCnet(0x0116DED0, 5, "TraceLinkCommand");
	SetCnet(0x0116DEE8, 5, "OpenHomeLinkCommand");
	SetCnet(0x0116E024, 41, "CDlgTeach");
	SetCnet(0x0116E168, 41, "CDlgTeamContext");
	SetCnet(0x0116E248, 2, "`public: void __thiscall CDlgTeamContext::OnCommand_GroupLeave(0xchar const *)'::`7'::CECSecondConfirm");
	SetCnet(0x0116E254, 2, "`public: void __thiscall CDlgTeamContext::OnCommand_MakeLeader(0xchar const *)'::`5'::CECSecondConfirm");
	SetCnet(0x0116E260, 2, "`public: void __thiscall CDlgTeamContext::OnCommand_Kick(0xchar const *)'::`5'::CECSecondConfirm");
	SetCnet(0x0116E278, 41, "CDlgTeamMain");
	SetCnet(0x0116E3F4, 41, "CDlgTeamMate");
	SetCnet(0x0116E49C, 41, "CDlgTeamStateHint");
	SetCnet(0x0116E558, 41, "CDlgTextHelp");
	SetCnet(0x0116E69C, 39, "CDlgTheme");
	SetCnet(0x0116E73C, 1, "ScopedDialogSpriteModify");
	SetCnet(0x0116E744, 1, "ScopedAUIControlSpriteModify");
	SetCnet(0x0116EA50, 41, "CDlgTitleBubble");
	SetCnet(0x0116EB1C, 41, "CDlgTitleChallenge");
	SetCnet(0x0116EC10, 41, "CDlgTitleList");
	SetCnet(0x0116ED60, 41, "CDlgTitleSubDia");
	SetCnet(0x0116EE98, 41, "CDlgTitleSubList");
	SetCnet(0x0116EFD4, 9, "TokenShopItemBase");
	SetCnet(0x0116EFFC, 9, "TokenShopItemByTask");
	SetCnet(0x0116F024, 42, "CDlgTokenShop");
	SetCnet(0x0116F11C, 41, "CDlgTouchShop");
	SetCnet(0x0116F314, 41, "CDlgTrade");
	SetCnet(0x0116F3D8, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgTrade>");
	SetCnet(0x0116F43C, 41, "CDlgTransmitMaps");
	SetCnet(0x0116F584, 41, "CDlgTransmitMapsTool01");
	SetCnet(0x0116F63C, 41, "CDlgTreasureMap");
	SetCnet(0x0116F748, 3, "CDlgTurnOverCards::CECTurnCardsTimer");
	SetCnet(0x0116F758, 41, "CDlgTurnOverCards");
	SetCnet(0x0116FD7C, 2, "`protected: void __thiscall CDlgTurnOverCards::CheckFinish(0xvoid)'::`13'::TunOverCardsMsgHandler");
	SetCnet(0x0116FDCC, 41, "CDlgViewModel");
	SetCnet(0x0116FE98, 41, "CDlgVipHelp");
	SetCnet(0x0116FF58, 41, "CDlgVirtualStorage");
	SetCnet(0x01170000, 44, "CDlgSubEquipInfo");
	SetCnet(0x0117011C, 41, "CDlgVoteBegin");
	SetCnet(0x011701D0, 41, "CDlgVoteEnd");
	SetCnet(0x01170280, 41, "CDlgWarTower");
	SetCnet(0x01170328, 2, "`public: void __thiscall CDlgWarTower::OnCommandConfirm(0xchar const *)'::`2'::WarTowerMessageBoxHandler");
	SetCnet(0x01170368, 2, "CECHandler<GNET::SSOGetTicket_Re>");
	SetCnet(0x01170374, 4, "CECURLOSNavigator");
	SetCnet(0x01170388, 7, "CDlgWebListSSOURLNavigator");
	SetCnet(0x011703A8, 7, "CDlgWebListSSOPayNavigator");
	SetCnet(0x011703C8, 7, "CDlgWebListSSOActivityNavigator");
	SetCnet(0x011703E8, 7, "CDlgWebListSSOActivity2Navigator");
	SetCnet(0x01170408, 7, "CDlgWebListSSOActivity3Navigator");
	SetCnet(0x01170428, 41, "CDlgWebList");
	SetCnet(0x011704D0, 2, "CDlgWebList");
	SetCnet(0x011704DC, 4, "CDlgWebList");
	SetCnet(0x011706AC, 3, "CECPendingSellingRole");
	SetCnet(0x011706D4, 1, "AList2<CDlgWebMyShop::PrepostInfo,CDlgWebMyShop::PrepostInfo &>");
	SetCnet(0x011706DC, 47, "CDlgWebMyShop");
	SetCnet(0x0117085C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgWebMyShop>");
	SetCnet(0x0117093C, 1, "AList2<CDlgWebMyShop::PrepostInfo,CDlgWebMyShop::PrepostInfo &>::c_NodePool");
	SetCnet(0x0117094C, 47, "CDlgWebRoleTrade");
	SetCnet(0x01170AAC, 46, "CDlgWebTradeBase");
	SetCnet(0x01170B68, 6, "GNET::GRolePocket");
	SetCnet(0x01170B84, 6, "GNET::GRoleEquipment");
	SetCnet(0x01170BA0, 6, "GNET::GRoleStorehouse");
	SetCnet(0x01170BBC, 6, "GNET::GWebTradeRoleBrief");
	SetCnet(0x01170C68, 1, "AArray<__int64,__int64>");
	SetCnet(0x01170D20, 39, "CDlgWebTradeInfo");
	SetCnet(0x01170E14, 41, "CDlgWebTradeOption");
	SetCnet(0x01170EF0, 46, "CDlgWebViewProduct");
	SetCnet(0x01170FAC, 2, "CDlgWebViewProduct");
	SetCnet(0x011712B4, 41, "CDlgWedding");
	SetCnet(0x0117135C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgWedding>");
	SetCnet(0x01171414, 41, "CDlgWeddingInvite");
	SetCnet(0x011714BC, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgWeddingInvite>");
	SetCnet(0x01171500, 41, "CDlgWiki");
	SetCnet(0x01171624, 47, "CDlgWikiAreaList");
	SetCnet(0x011716E4, 6, "CDlgWikiAreaList");
	SetCnet(0x01171784, 46, "CDlgWikiBase");
	SetCnet(0x01171840, 6, "CDlgWikiBase");
	SetCnet(0x0117186C, 46, "CDlgWikiByNameBase");
	SetCnet(0x01171928, 6, "CDlgWikiByNameBase");
	SetCnet(0x011719CC, 5, "CDlgWikiEquipment::ShowSpecficLinkCommand");
	SetCnet(0x011719E4, 46, "CDlgWikiEquipment");
	SetCnet(0x01171AA0, 6, "CDlgWikiEquipment");
	SetCnet(0x01171ABC, 4, "WikiSearchEquipmentByName");
	SetCnet(0x01171BF8, 47, "CDlgWikiEquipmentDrop");
	SetCnet(0x01171CB8, 6, "CDlgWikiEquipmentDrop");
	SetCnet(0x01171CE4, 46, "CDlgWikiFeature");
	SetCnet(0x01171DA0, 6, "CDlgWikiFeature");
	SetCnet(0x01171DBC, 4, "WikiSearchFeatureByName");
	SetCnet(0x01171E00, 46, "CDlgWikiGuide");
	SetCnet(0x01171EBC, 6, "CDlgWikiGuide");
	SetCnet(0x01171ED8, 3, "WikiSearchAll");
	SetCnet(0x01171EE8, 3, "WikiElementDataProvider::Entity");
	SetCnet(0x0117204C, 5, "CDlgWikiItem::ShowSpecficLinkCommand");
	SetCnet(0x01172064, 46, "CDlgWikiItem");
	SetCnet(0x01172120, 6, "CDlgWikiItem");
	SetCnet(0x01172224, 5, "WikiItemProvider");
	SetCnet(0x0117223C, 47, "CDlgWikiItemConfirm");
	SetCnet(0x011722FC, 6, "CDlgWikiItemConfirm");
	SetCnet(0x01172328, 47, "CDlgWikiItemListBase");
	SetCnet(0x011723E8, 6, "CDlgWikiItemListBase");
	SetCnet(0x01172444, 5, "CDlgWikiMonster::ShowSpecficLinkCommand");
	SetCnet(0x0117245C, 46, "CDlgWikiMonster");
	SetCnet(0x01172518, 6, "CDlgWikiMonster");
	SetCnet(0x01172534, 4, "WikiSearchMonsterByName");
	SetCnet(0x011725DC, 47, "CDlgWikiMonsterDrop");
	SetCnet(0x0117269C, 6, "CDlgWikiMonsterDrop");
	SetCnet(0x011726C8, 47, "CDlgWikiMonsterList");
	SetCnet(0x01172788, 6, "CDlgWikiMonsterList");
	SetCnet(0x011727B4, 47, "CDlgWikiMonsterTask");
	SetCnet(0x01172874, 6, "CDlgWikiMonsterTask");
	SetCnet(0x011728A0, 47, "CDlgWikiNPCList");
	SetCnet(0x01172960, 6, "CDlgWikiNPCList");
	SetCnet(0x0117297C, 41, "CDlgWikiQiHunLingExtProp");
	SetCnet(0x01172A34, 47, "CDlgWikiRandomProperty");
	SetCnet(0x01172AF4, 6, "CDlgWikiRandomProperty");
	SetCnet(0x01172B94, 5, "CDlgWikiRecipe::ShowSpecficLinkCommand");
	SetCnet(0x01172BAC, 6, "CDlgWikiRecipe::MaterialSearcher");
	SetCnet(0x01172BC8, 6, "CDlgWikiRecipe::ProductSearcher");
	SetCnet(0x01172BE4, 46, "CDlgWikiRecipe");
	SetCnet(0x01172CA0, 6, "CDlgWikiRecipe");
	SetCnet(0x01172CBC, 6, "WikiNPCMakingCache");
	SetCnet(0x01172CD8, 3, "WikiNPCMakeServiceProvider::Entity");
	SetCnet(0x01172CE8, 5, "WikiNPCMakeServiceProvider");
	SetCnet(0x01172D00, 6, "WikiRecipeItemCache");
	SetCnet(0x01172D1C, 5, "WikiRecipeItemProvider");
	SetCnet(0x01172E3C, 4, "WikiSearchNPCByService<WikiSearchNPCByServiceMakeChecker>");
	SetCnet(0x01172ED4, 5, "CDlgWikiRecipeDetail::ShowSpecficLinkCommand");
	SetCnet(0x01172EEC, 44, "CDlgWikiRecipeDetail");
	SetCnet(0x0117307C, 5, "CDlgWikiSkill::ShowSpecficLinkCommand");
	SetCnet(0x01173094, 5, "CDlgWikiSkill::SetNPCNameLinkCommand");
	SetCnet(0x011730AC, 46, "CDlgWikiSkill");
	SetCnet(0x01173168, 6, "CDlgWikiSkill");
	SetCnet(0x01173184, 6, "WikiNPCSkillCache");
	SetCnet(0x011731A0, 3, "WikiNPCSkillServiceProvider::Entity");
	SetCnet(0x011731B0, 5, "WikiNPCSkillServiceProvider");
	SetCnet(0x011731C8, 4, "WikiSearchSkillByName");
	SetCnet(0x0117328C, 4, "WikiSearchNPCByService<WikiSearchNPCByServiceSkillChecker>");
	SetCnet(0x01173344, 5, "CDlgWikiTask::ShowSpecficLinkCommand");
	SetCnet(0x0117335C, 46, "CDlgWikiTask");
	SetCnet(0x01173418, 6, "CDlgWikiTask");
	SetCnet(0x01173434, 4, "WikiSearchTaskByName");
	SetCnet(0x011734B8, 41, "CDlgWikiTaskDetail");
	SetCnet(0x01173570, 47, "CDlgWikiTaskList");
	SetCnet(0x01173630, 6, "CDlgWikiTaskList");
	SetCnet(0x01173664, 41, "CDlgWSPack");
	SetCnet(0x0117370C, 41, "CDlgWSResult");
	SetCnet(0x011737B4, 43, "CDlgWSExit");
	SetCnet(0x01173864, 41, "CDlgWSChoosePosTip");
	SetCnet(0x0117390C, 41, "CDlgWSCircleTime");
	SetCnet(0x011739B4, 41, "CDlgWSLocationTip");
	SetCnet(0x01173A7C, 8, "CECShortcutMgr::SimpleClickShortcut<CDlgWSPack>");
	SetCnet(0x01173ABC, 2, "TipsHandle");
	SetCnet(0x01173C14, 1, "AList2<void *,void *>");
	SetCnet(0x01173C1C, 2, "CDlgDynamicControl::ControlCommand");
	SetCnet(0x01173C28, 1, "AList2<void *,void *>::c_NodePool");
	SetCnet(0x01173C30, 41, "CDlgWorldMap");
	SetCnet(0x01173CD8, 1, "APtrList<CECMapDlgsMgr::TRANS_POINT *>");
	SetCnet(0x01173E50, 2, "PosConvertorWorld");
	SetCnet(0x01173E5C, 2, "PosConvertorDetail");
	SetCnet(0x01173F10, 2, "`public: void __thiscall CDlgWorldMap::OnEventLButtonUp_Travel(0xunsigned int,long,AUIObject *)'::`20'::NPCTransmitNormalMessageBoxHandler");
	SetCnet(0x01173F1C, 2, "`public: void __thiscall CDlgWorldMap::OnEventLButtonUp_Travel(0xunsigned int,long,AUIObject *)'::`32'::NPCTransmitDirectMessageBoxHandler");
	SetCnet(0x0117421C, 2, "AutoMoveCommand");
	SetCnet(0x01174238, 2, "`public: void __thiscall CDlgWorldMap::OnEventLBD_WorldEvent(0xunsigned int,long,AUIObject *)'::`8'::ChoosePosHandle");
	SetCnet(0x011742BC, 41, "CDlgWorldMapThird");
	SetCnet(0x01174364, 41, "CDlgWorldMapThirdGfx");
	SetCnet(0x011744AC, 1, "CECScriptConditionParser::COperand");
	SetCnet(0x011744B4, 2, "CECScriptConditionParser::COperatorOr");
	SetCnet(0x011744C0, 2, "CECScriptConditionParser::COperatorAnd");
	SetCnet(0x011744CC, 2, "CECScriptConditionParser::COperatorNot");
	SetCnet(0x011744D8, 1, "CECScript");
	SetCnet(0x011744E0, 2, "CECScriptUnit");
	SetCnet(0x011744EC, 2, "CECScriptUnitWait");
	SetCnet(0x011744F8, 2, "CECScriptUnitCommonBlock");
	SetCnet(0x01174504, 2, "CECScriptUnitFunction");
	SetCnet(0x01174510, 2, "CECScriptUnitReturn");
	SetCnet(0x0117451C, 2, "CECScriptUnitFinish");
	SetCnet(0x01174528, 2, "CECScriptUnitStart");
	SetCnet(0x01174534, 2, "CECScriptUnitIfCondition");
	SetCnet(0x01174540, 2, "CECScriptUnitIfBlock");
	SetCnet(0x0117454C, 3, "CECScriptBoolExp");
	SetCnet(0x0117455C, 3, "CECScriptBoolExpAnd");
	SetCnet(0x0117456C, 3, "CECScriptBoolExpOr");
	SetCnet(0x0117457C, 3, "CECScriptBoolExpNot");
	SetCnet(0x0117458C, 3, "CECScriptBoolExpConstant");
	SetCnet(0x011745A4, 1, "AArray<CECScriptConditionParser::CElement *,CECScriptConditionParser::CElement *>");
	SetCnet(0x011745AC, 1, "AStack<CECScriptConditionParser::CElement *,CECScriptConditionParser::CElement *>");
	SetCnet(0x01174674, 1, "CECParamList::Param<int>");
	SetCnet(0x0117467C, 1, "CECParamList::Param<unsigned short>");
	SetCnet(0x01174684, 1, "CECParamList::Param<float>");
	SetCnet(0x0117468C, 1, "CECParamList::Param<AString>");
	SetCnet(0x01174694, 1, "CECParamList::Param<AWString>");
	SetCnet(0x0117469C, 1, "CECParamList");
	SetCnet(0x011746A4, 3, "CECScriptCheckBase");
	SetCnet(0x011746B4, 1, "CECScriptCheckBase");
	SetCnet(0x011746BC, 3, "CECScriptCheckScriptExecuted");
	SetCnet(0x011746CC, 1, "CECScriptCheckScriptExecuted");
	SetCnet(0x011746D4, 3, "CECScriptCheckDisplayNext");
	SetCnet(0x011746E4, 1, "CECScriptCheckDisplayNext");
	SetCnet(0x011746EC, 3, "CECScriptCheckPlayerLevelBetween");
	SetCnet(0x011746FC, 1, "CECScriptCheckPlayerLevelBetween");
	SetCnet(0x01174704, 3, "CECScriptCheckPlayerProfession");
	SetCnet(0x01174714, 1, "CECScriptCheckPlayerProfession");
	SetCnet(0x0117471C, 3, "CECScriptCheckPlayerHPPercentBetween");
	SetCnet(0x0117472C, 1, "CECScriptCheckPlayerHPPercentBetween");
	SetCnet(0x01174734, 3, "CECScriptCheckPlayerMPPercentBetween");
	SetCnet(0x01174744, 1, "CECScriptCheckPlayerMPPercentBetween");
	SetCnet(0x0117474C, 3, "CECScriptCheckDialogIsVisible");
	SetCnet(0x0117475C, 1, "CECScriptCheckDialogIsVisible");
	SetCnet(0x01174764, 3, "CECScriptCheckDialogItemText");
	SetCnet(0x01174774, 1, "CECScriptCheckDialogItemText");
	SetCnet(0x0117477C, 3, "CECScriptCheckDialogItemIsChecked");
	SetCnet(0x0117478C, 1, "CECScriptCheckDialogItemIsChecked");
	SetCnet(0x01174794, 3, "CECScriptCheckKillMonster");
	SetCnet(0x011747A4, 1, "CECScriptCheckKillMonster");
	SetCnet(0x011747AC, 3, "CECScriptCheckEquipNewWeapon");
	SetCnet(0x011747BC, 1, "CECScriptCheckEquipNewWeapon");
	SetCnet(0x011747C4, 3, "CECScriptCheckServiceNPC");
	SetCnet(0x011747D4, 1, "CECScriptCheckServiceNPC");
	SetCnet(0x011747DC, 3, "CECScriptCheckTargetNPC");
	SetCnet(0x011747EC, 1, "CECScriptCheckTargetNPC");
	SetCnet(0x011747F4, 3, "CECScriptCheckTargetPlayer");
	SetCnet(0x01174804, 1, "CECScriptCheckTargetPlayer");
	SetCnet(0x0117480C, 3, "CECScriptCheckTargetMonster");
	SetCnet(0x0117481C, 1, "CECScriptCheckTargetMonster");
	SetCnet(0x01174824, 3, "CECScriptCheckAddress");
	SetCnet(0x01174834, 1, "CECScriptCheckAddress");
	SetCnet(0x0117483C, 3, "CECScriptCheckMapID");
	SetCnet(0x0117484C, 1, "CECScriptCheckMapID");
	SetCnet(0x01174854, 3, "CECScriptCheckTaskStatus");
	SetCnet(0x01174864, 1, "CECScriptCheckTaskStatus");
	SetCnet(0x0117486C, 3, "CECScriptCheckTaskInventoryItemCount");
	SetCnet(0x0117487C, 1, "CECScriptCheckTaskInventoryItemCount");
	SetCnet(0x01174884, 3, "CECScriptCheckInventoryItemCount");
	SetCnet(0x01174894, 1, "CECScriptCheckInventoryItemCount");
	SetCnet(0x0117489C, 3, "CECScriptCheckSkillLevelBetween");
	SetCnet(0x011748AC, 1, "CECScriptCheckSkillLevelBetween");
	SetCnet(0x011748B4, 3, "CECScriptCheckSkillAbilityBetween");
	SetCnet(0x011748C4, 1, "CECScriptCheckSkillAbilityBetween");
	SetCnet(0x011748CC, 3, "CECScriptCheckPlayerIsDead");
	SetCnet(0x011748DC, 1, "CECScriptCheckPlayerIsDead");
	SetCnet(0x011748E4, 3, "CECScriptCheckPlayerIsFlying");
	SetCnet(0x011748F4, 1, "CECScriptCheckPlayerIsFlying");
	SetCnet(0x011748FC, 3, "CECScriptCheckPlayerIsSitting");
	SetCnet(0x0117490C, 1, "CECScriptCheckPlayerIsSitting");
	SetCnet(0x01174914, 3, "CECScriptCheckPlayerIsInVader");
	SetCnet(0x01174924, 1, "CECScriptCheckPlayerIsInVader");
	SetCnet(0x0117492C, 3, "CECScriptCheckPlayerIsPariah");
	SetCnet(0x0117493C, 1, "CECScriptCheckPlayerIsPariah");
	SetCnet(0x01174944, 3, "CECScriptCheckPlayerIsDiving");
	SetCnet(0x01174954, 1, "CECScriptCheckPlayerIsDiving");
	SetCnet(0x0117495C, 3, "CECScriptCheckPlayerIsPVPOpen");
	SetCnet(0x0117496C, 1, "CECScriptCheckPlayerIsPVPOpen");
	SetCnet(0x01174974, 3, "CECScriptCheckPlayerIsInFashionMode");
	SetCnet(0x01174984, 1, "CECScriptCheckPlayerIsInFashionMode");
	SetCnet(0x0117498C, 3, "CECScriptCheckPlayerIsFighting");
	SetCnet(0x0117499C, 1, "CECScriptCheckPlayerIsFighting");
	SetCnet(0x011749A4, 3, "CECScriptCheckPlayerIsTrading");
	SetCnet(0x011749B4, 1, "CECScriptCheckPlayerIsTrading");
	SetCnet(0x011749BC, 3, "CECScriptCheckPlayerIsUsingTrashBox");
	SetCnet(0x011749CC, 1, "CECScriptCheckPlayerIsUsingTrashBox");
	SetCnet(0x011749D4, 3, "CECScriptCheckPlayerIsRooting");
	SetCnet(0x011749E4, 1, "CECScriptCheckPlayerIsRooting");
	SetCnet(0x011749EC, 3, "CECScriptCheckPlayerCannotAttack");
	SetCnet(0x011749FC, 1, "CECScriptCheckPlayerCannotAttack");
	SetCnet(0x01174A04, 3, "CECScriptCheckPlayerIsMeleeing");
	SetCnet(0x01174A14, 1, "CECScriptCheckPlayerIsMeleeing");
	SetCnet(0x01174A1C, 3, "CECScriptCheckPlayerIsTalkingWithNPC");
	SetCnet(0x01174A2C, 1, "CECScriptCheckPlayerIsTalkingWithNPC");
	SetCnet(0x01174A34, 3, "CECScriptCheckPlayerIsSpellingMagic");
	SetCnet(0x01174A44, 1, "CECScriptCheckPlayerIsSpellingMagic");
	SetCnet(0x01174A4C, 3, "CECScriptCheckPlayerIsJumping");
	SetCnet(0x01174A5C, 1, "CECScriptCheckPlayerIsJumping");
	SetCnet(0x01174A64, 3, "CECScriptCheckPlayerIsPicking");
	SetCnet(0x01174A74, 1, "CECScriptCheckPlayerIsPicking");
	SetCnet(0x01174A7C, 3, "CECScriptCheckPlayerIsGathering");
	SetCnet(0x01174A8C, 1, "CECScriptCheckPlayerIsGathering");
	SetCnet(0x01174A94, 3, "CECScriptCheckPlayerIsReviving");
	SetCnet(0x01174AA4, 1, "CECScriptCheckPlayerIsReviving");
	SetCnet(0x01174AAC, 3, "CECScriptCheckPlayerIsUsingItem");
	SetCnet(0x01174ABC, 1, "CECScriptCheckPlayerIsUsingItem");
	SetCnet(0x01174AC4, 3, "CECScriptCheckPlayerIsChangingFace");
	SetCnet(0x01174AD4, 1, "CECScriptCheckPlayerIsChangingFace");
	SetCnet(0x01174ADC, 3, "CECScriptCheckPlayerIsDoingSessionPose");
	SetCnet(0x01174AEC, 1, "CECScriptCheckPlayerIsDoingSessionPose");
	SetCnet(0x01174AF4, 3, "CECScriptCheckPlayerIsAdjustOrient");
	SetCnet(0x01174B04, 1, "CECScriptCheckPlayerIsAdjustOrient");
	SetCnet(0x01174B0C, 3, "CECScriptCheckPlayerTrashBoxHasPsw");
	SetCnet(0x01174B1C, 1, "CECScriptCheckPlayerTrashBoxHasPsw");
	SetCnet(0x01174B24, 3, "CECScriptCheckPlayerIsMoving");
	SetCnet(0x01174B34, 1, "CECScriptCheckPlayerIsMoving");
	SetCnet(0x01174B3C, 3, "CECScriptCheckPlayerIsUnderWater");
	SetCnet(0x01174B4C, 1, "CECScriptCheckPlayerIsUnderWater");
	SetCnet(0x01174B54, 3, "CECScriptCheckPlayerIsAdjustDistance");
	SetCnet(0x01174B64, 1, "CECScriptCheckPlayerIsAdjustDistance");
	SetCnet(0x01174B6C, 3, "CECScriptCheckPlayerIsPlayTrick");
	SetCnet(0x01174B7C, 1, "CECScriptCheckPlayerIsPlayTrick");
	SetCnet(0x01174B84, 3, "CECScriptCheckInventoryItemMoved");
	SetCnet(0x01174B94, 1, "CECScriptCheckInventoryItemMoved");
	SetCnet(0x01174B9C, 3, "CECScriptCheckIsTimerTriggered");
	SetCnet(0x01174BAC, 1, "CECScriptCheckIsTimerTriggered");
	SetCnet(0x01174BB4, 3, "CECScriptCheckPQIsTriggered");
	SetCnet(0x01174BC4, 1, "CECScriptCheckPQIsTriggered");
	SetCnet(0x01174BCC, 3, "CECScriptCheckAccountBoxIsTriggered");
	SetCnet(0x01174BDC, 1, "CECScriptCheckAccountBoxIsTriggered");
	SetCnet(0x01174BE4, 3, "CECScriptCheckAutoMove");
	SetCnet(0x01174BF4, 1, "CECScriptCheckAutoMove");
	SetCnet(0x01174BFC, 3, "CECScriptCheckFrameRateBetween");
	SetCnet(0x01174C0C, 1, "CECScriptCheckFrameRateBetween");
	SetCnet(0x01174C14, 3, "CECScriptCheckHavePet");
	SetCnet(0x01174C24, 1, "CECScriptCheckHavePet");
	SetCnet(0x01174C2C, 3, "CECScriptCheckReputationBetween");
	SetCnet(0x01174C3C, 1, "CECScriptCheckReputationBetween");
	SetCnet(0x01174C44, 3, "CECScriptCheckReincarnation");
	SetCnet(0x01174C54, 1, "CECScriptCheckReincarnation");
	SetCnet(0x01174C5C, 3, "CECScriptCheckTitle");
	SetCnet(0x01174C6C, 1, "CECScriptCheckTitle");
	SetCnet(0x01174C74, 3, "CECScriptCheckNoActiveScript");
	SetCnet(0x01174C84, 1, "CECScriptCheckNoActiveScript");
	SetCnet(0x01174C8C, 3, "CECScriptCheckHomeLevel");
	SetCnet(0x01174C9C, 1, "CECScriptCheckHomeLevel");
	SetCnet(0x01174CA4, 3, "CECScriptCheckHomeExp");
	SetCnet(0x01174CB4, 1, "CECScriptCheckHomeExp");
	SetCnet(0x01174CBC, 3, "CECScriptCheckHomeFunctionBuildingLevel");
	SetCnet(0x01174CCC, 1, "CECScriptCheckHomeFunctionBuildingLevel");
	SetCnet(0x01174CD4, 3, "CECScriptCheckHomeEditMode");
	SetCnet(0x01174CE4, 1, "CECScriptCheckHomeEditMode");
	SetCnet(0x01174CEC, 3, "CECScriptCheckHomeHarvest");
	SetCnet(0x01174CFC, 1, "CECScriptCheckHomeHarvest");
	SetCnet(0x01174D04, 3, "CECScriptCheckBtnClicked");
	SetCnet(0x01174D14, 1, "CECScriptCheckBtnClicked");
	SetCnet(0x0117532C, 16, "");
	SetCnet(0x011755BC, 16, "");
	SetCnet(0x0117584C, 8, "CECScriptUnitExecutorState");
	SetCnet(0x01175870, 8, "CECScriptUnitExecutorStateAfterPop");
	SetCnet(0x0117592C, 1, "CECParamList::Param<bool>");
	SetCnet(0x01175934, 1, "CECParamList::Param<unsigned long>");
	SetCnet(0x0117593C, 2, "CECScriptFunctionSetHasNextTip");
	SetCnet(0x01175948, 2, "CECScriptFunctionShowHelpDialog");
	SetCnet(0x01175954, 2, "CECScriptFunctionSetContent");
	SetCnet(0x01175960, 2, "CECScriptFunctionShowDialog");
	SetCnet(0x0117596C, 2, "CECScriptFunctionSetFlashDialogItem");
	SetCnet(0x01175978, 2, "CECScriptFunctionPlayVoice");
	SetCnet(0x01175984, 2, "CECScriptFunctionStopVoice");
	SetCnet(0x01175990, 2, "CECScriptFucntionResetTimer");
	SetCnet(0x0117599C, 2, "CECScriptFunctionSetImage");
	SetCnet(0x011759A8, 2, "CECScriptFunctionSetTipTitleAndContent");
	SetCnet(0x011759B4, 2, "CECScriptFunctionShowTip");
	SetCnet(0x011759C0, 2, "CECScriptFunctionShowText");
	SetCnet(0x011759CC, 2, "CECScriptFunctionShowGfxOnObj");
	SetCnet(0x01175A9C, 6, "IECScriptGlobalResource");
	SetCnet(0x01175AB8, 6, "CECScriptGlobalResourceInGame");
	SetCnet(0x01175AE0, 11, "CECScriptMan");
	SetCnet(0x01175B58, 5, "CECScriptOptionInGame");
	SetCnet(0x01175BF4, 5, "CECScriptOption");
	SetCnet(0x01175C0C, 3, "CECScriptTipWork");
	SetCnet(0x01175C1C, 3, "CECScriptTipWorkSetTitleAndContent");
	SetCnet(0x01175C2C, 3, "CECScriptTipWorkMove");
	SetCnet(0x01175C3C, 3, "CECScriptTipWorkGfx");
	SetCnet(0x01175C4C, 11, "IECScriptUI");
	SetCnet(0x01175C7C, 11, "CECScriptUIInGame");
	SetCnet(0x01175CE8, 2, "CECScriptUnitIfBlock::CECScriptUnitIfBranch");
	SetCnet(0x01175CF4, 9, "CECScriptUnitExecutor");
	SetCnet(0x01175D1C, 8, "CECScriptUnitExecutorStateNormal");
	SetCnet(0x01175D40, 8, "CECScriptUnitExecutorStateNull");
	SetCnet(0x01175D64, 8, "CECScriptUnitExecutorStateBlock");
	SetCnet(0x01175D88, 8, "CECScriptUnitExecutorStateWaitPop");
	SetCnet(0x01175DB0, 5, "CECMediatorBase");
	SetCnet(0x01175DC8, 8, "CECMatchBase");
	SetCnet(0x01175DEC, 8, "CECAcrossServerMatch");
	SetCnet(0x01175E10, 5, "CECAcrossServerMatchMediator");
	SetCnet(0x01175EAC, 2, "CECFitlerBase");
	SetCnet(0x01175EB8, 9, "CECCancelRideActionFilter");
	SetCnet(0x01175EE0, 9, "CECFlyActionFilter");
	SetCnet(0x01175F08, 9, "CECLandingActionFilter");
	SetCnet(0x01175F30, 9, "CECRideActionFilter");
	SetCnet(0x01175F58, 9, "CECSkillActionFilter");
	SetCnet(0x01175F80, 9, "CECUseSkillItemActionFilter");
	SetCnet(0x01175FA8, 5, "CECActionBase");
	SetCnet(0x01175FC0, 5, "CECActionCancelRide");
	SetCnet(0x01175FD8, 5, "CECActionFly");
	SetCnet(0x01175FF0, 5, "CECActionLanding");
	SetCnet(0x01176008, 5, "CECActionRide");
	SetCnet(0x01176020, 5, "CECActionSkill");
	SetCnet(0x01176038, 5, "CECActionUseSkillItem");
	SetCnet(0x01176050, 1, "AArray<CECActionBase *,CECActionBase * &>");
	SetCnet(0x01176058, 6, "CECActionContext");
	SetCnet(0x01176074, 1, "CECContextValidCheckerForRide");
	SetCnet(0x0117607C, 6, "CECRideToFlyContext");
	SetCnet(0x01176098, 6, "CECRideToSkillContext");
	SetCnet(0x011760B4, 6, "CECFlyToRideContext");
	SetCnet(0x011760D0, 6, "CECRideToUseTargetItemContext");
	SetCnet(0x011760EC, 5, "CECActiveMediator");
	SetCnet(0x01176368, 5, "CECAdvertisementMediator");
	SetCnet(0x011763F4, 3, "CECAnniversaryEventInterfaceConfigData::AnniversaryOpenTimer");
	SetCnet(0x01176420, 1, "CECArenaBattleInfo");
	SetCnet(0x01176460, 5, "CECArenaBattleMediator");
	SetCnet(0x0117647C, 6, "GNET::ArenaTeamMember");
	SetCnet(0x01176498, 6, "GNET::RpcDataVector<GNET::ArenaTeamMember>");
	SetCnet(0x011764B4, 6, "GNET::ArenaTeam");
	SetCnet(0x011764D0, 6, "GNET::ArenaTeamSync");
	SetCnet(0x011764EC, 6, "GNET::ArenaPlayer");
	SetCnet(0x01176508, 6, "GNET::ArenaPlayerSync");
	SetCnet(0x01176524, 6, "GNET::ArenaTeamInviteSuccessData");
	SetCnet(0x01176540, 6, "GNET::ArenaTeamKickoutSuccessData");
	SetCnet(0x0117655C, 6, "GNET::ArenaTeamLeaveSuccessData");
	SetCnet(0x01176578, 6, "GNET::ArenaTeamCaptainTransferSuccessData");
	SetCnet(0x01176594, 6, "GNET::ArenaTeamMemberOnlineInfo");
	SetCnet(0x011765B0, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeamMember,std::allocator<GNET::ArenaTeamMember> > >");
	SetCnet(0x011765C0, 3, "GNET::STLContainer<std::vector<__int64,std::allocator<__int64> > >");
	SetCnet(0x011765E4, 5, "CECArenaCreateTeamMediator");
	SetCnet(0x011765FC, 5, "CECArenaFakeTeamMediator");
	SetCnet(0x01176654, 6, "GNET::RpcDataVector<GNET::ArenaPlayerSync>");
	SetCnet(0x01176670, 6, "GNET::RpcDataVector<GNET::ArenaTeamSync>");
	SetCnet(0x0117668C, 6, "GNET::ArenaTeamMatchSuccessData");
	SetCnet(0x011766A8, 6, "GNET::ArenaBattleStartRe");
	SetCnet(0x011766C4, 6, "GNET::ArenaBattleMatchSuccessRe");
	SetCnet(0x011766E0, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeamSync,std::allocator<GNET::ArenaTeamSync> > >");
	SetCnet(0x011766F0, 3, "GNET::STLContainer<std::vector<GNET::ArenaPlayerSync,std::allocator<GNET::ArenaPlayerSync> > >");
	SetCnet(0x01176700, 5, "CECArenaMatchMediator");
	SetCnet(0x01176804, 6, "GNET::RpcDataVector<GNET::ArenaTeam>");
	SetCnet(0x01176820, 6, "GNET::RpcDataVector<GNET::ArenaPlayer>");
	SetCnet(0x0117683C, 3, "GNET::STLContainer<std::vector<GNET::ArenaPlayer,std::allocator<GNET::ArenaPlayer> > >");
	SetCnet(0x0117684C, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeam,std::allocator<GNET::ArenaTeam> > >");
	SetCnet(0x0117685C, 5, "CECArenaOtherTeamInfoMediator");
	SetCnet(0x01176874, 5, "CECArenaRankMediator");
	SetCnet(0x01176890, 6, "GNET::ArenaPlayerTopList");
	SetCnet(0x011768AC, 6, "GNET::RpcDataVector<GNET::ArenaPlayerTopList>");
	SetCnet(0x011768C8, 6, "GNET::ArenaTeamTopList");
	SetCnet(0x011768E4, 6, "GNET::RpcDataVector<GNET::ArenaTeamTopList>");
	SetCnet(0x01176900, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeamTopList,std::allocator<GNET::ArenaTeamTopList> > >");
	SetCnet(0x01176910, 3, "GNET::STLContainer<std::vector<GNET::ArenaPlayerTopList,std::allocator<GNET::ArenaPlayerTopList> > >");
	SetCnet(0x0117696C, 3, "ProgressImageInitCallback");
	SetCnet(0x011769A0, 5, "CECAstrolabeIncPointValueMediator");
	SetCnet(0x011769B8, 2, "CECPackItemCounterCondition");
	SetCnet(0x011769C4, 2, "CECIncPointValueMaterialCondition");
	SetCnet(0x011769F8, 5, "CECAstrolabeMediator");
	SetCnet(0x01176B4C, 5, "CECAstrolabeRandomAddOnMediator");
	SetCnet(0x01176B64, 10, "CECAstrolabeSwallowMediatorState");
	SetCnet(0x01176B9C, 10, "CECAstrolabeSwallowMediatorStateNone");
	SetCnet(0x01176BD8, 10, "CECAstrolabeSwallowMediatorStateWaitSwallowee");
	SetCnet(0x01176C1C, 10, "CECAstrolabeSwallowMediatorStateWaitConfirmSwallowee");
	SetCnet(0x01176C68, 10, "CECAstrolabeSwallowMediatorStateWaitChoose");
	SetCnet(0x01176CA8, 10, "CECAstrolabeSwallowMediatorStateWaitConfirm");
	SetCnet(0x01176CEC, 10, "CECAstrolabeSwallowMediatorStateWaitServer");
	SetCnet(0x01176D2C, 10, "CECAstrolabeSwallowMediatorStateWaitServer2");
	SetCnet(0x01176D70, 5, "CECAstrolabeSwallowMediator");
	SetCnet(0x01176D88, 2, "ConfirmExperience");
	SetCnet(0x01176DD4, 9, "_SGC::CECAttSkillGfxEvent");
	SetCnet(0x01176DFC, 1, "CECAutoPolicy");
	SetCnet(0x011770A8, 5, "CECBarrageMediator");
	SetCnet(0x011771D4, 7, "GNET::Security");
	SetCnet(0x011771F4, 7, "GNET::MD5Hash");
	SetCnet(0x01177214, 38, "CECBaseUIMan");
	SetCnet(0x01177794, 5, "CECBattleRoyaleMapMediator");
	SetCnet(0x01177F8C, 5, "CECBibleRefineMediator");
	SetCnet(0x011780F4, 5, "CECBossRushMediator");
	SetCnet(0x0117810C, 2, "`private: int __thiscall CECBossRushMediator::FindBossrushAwardNPCID(0xvoid)'::`2'::SceneServiceNPCFinder");
	SetCnet(0x01178140, 1, "CECBuildingModel");
	SetCnet(0x01178148, 2, "CECComputeHomeMoveParamFunction");
	SetCnet(0x01178154, 2, "CECGeneralComputeHomeMoveParamFunction");
	SetCnet(0x011782EC, 1, "AList2<int,int>");
	SetCnet(0x011782F4, 6, "GNET::RpcDataVector<int>");
	SetCnet(0x01178310, 10, "GNET::GetPlayerBriefInfo");
	SetCnet(0x0117833C, 1, "AList2<C2S::cmd_use_item,C2S::cmd_use_item &>");
	SetCnet(0x01178344, 1, "AList2<GNET::GetPlayerBriefInfo,GNET::GetPlayerBriefInfo &>");
	SetCnet(0x0117834C, 1, "AList2<CECC2SCmdCache::presentInfo,CECC2SCmdCache::presentInfo &>");
	SetCnet(0x01178354, 1, "CECC2SCmdCache");
	SetCnet(0x0117835C, 3, "GNET::STLContainer<std::vector<int,std::allocator<int> > >");
	SetCnet(0x0117836C, 1, "AList2<int,int>::c_NodePool");
	SetCnet(0x01178374, 1, "AList2<C2S::cmd_use_item,C2S::cmd_use_item &>::c_NodePool");
	SetCnet(0x0117837C, 1, "AList2<GNET::GetPlayerBriefInfo,GNET::GetPlayerBriefInfo &>::c_NodePool");
	SetCnet(0x01178384, 1, "AList2<CECC2SCmdCache::presentInfo,CECC2SCmdCache::presentInfo &>::c_NodePool");
	SetCnet(0x0117838C, 10, "GNET::FactionResourceBattleGetMap");
	SetCnet(0x011783B8, 10, "GNET::FactionResourceBattleGetRecord");
	SetCnet(0x01178434, 8, "CECCameraInputNormal");
	SetCnet(0x01178458, 1, "CECCamera");
	SetCnet(0x011784DC, 5, "CECCampMediator");
	SetCnet(0x01178534, 5, "CECCampRankMediator");
	SetCnet(0x0117855C, 5, "CECCampStatisticMediator");
	SetCnet(0x0117868C, 5, "CECCampTokenMediator");
	SetCnet(0x011786E4, 5, "CECCampTreeMediator");
	SetCnet(0x01178984, 5, "CECCarrierOpMediator");
	SetCnet(0x011789B8, 5, "CECCarrierUpMediator");
	SetCnet(0x011795A0, 9, "CECCDS");
	SetCnet(0x01179610, 20, "IECBrowser");
	SetCnet(0x01179664, 20, "CECCefBrowser");
	SetCnet(0x011796D8, 1, "CECChangePill");
	SetCnet(0x01179838, 5, "CECChronicleMediator");
	SetCnet(0x01179868, 5, "CECCollectionMediator");
	SetCnet(0x011798DC, 2, "`public: CECSceneNPCID __thiscall CECCollectionMediator::FindIllustrationSevNPCID(0xvoid)const '::`2'::SceneServiceNPCFinder");
	SetCnet(0x01179CD8, 1, "CECComboSkill");
	SetCnet(0x01179CE4, 1, "CECObservableChange");
	SetCnet(0x01179CEC, 8, "element_skill_id_array");
	SetCnet(0x01179D10, 1, "CECComboSkillChange");
	SetCnet(0x01179D18, 1, "CECObservable<CECComboSkillState>");
	SetCnet(0x01179D20, 1, "CECComboSkillState");
	SetCnet(0x0117A210, 5, "CECCommerateBookMediator");
	SetCnet(0x0117A254, 1, "AArray<_D3DDISPLAYMODE,_D3DDISPLAYMODE const &>");
	SetCnet(0x0117A25C, 1, "CECConfigs");
	SetCnet(0x0117AFAC, 1, "`public: void __thiscall CECConsoleVariableHelper::Init(0xvoid)'::`2'::CEAIniFile");
	SetCnet(0x0117B048, 5, "CECConsoleVariableMediator");
	SetCnet(0x0117B0E4, 2, "CECControlLoopAnimationObserverNotifyCmd");
	SetCnet(0x0117B0F0, 2, "CECControlLoopAnimation::CreatePolicy");
	SetCnet(0x0117B0FC, 2, "`public: bool __thiscall CECControlLoopAnimation::Tick(0xvoid)'::`11'::OneRoundCmd");
	SetCnet(0x0117B108, 2, "`public: bool __thiscall CECControlLoopAnimation::Tick(0xvoid)'::`13'::FinishedCmd");
	SetCnet(0x0117B114, 2, "`public: void __thiscall CECControlLoopAnimation::Start(0xvoid)'::`4'::CreateAlwaysPolicy");
	SetCnet(0x0117B120, 2, "`public: void __thiscall CECControlLoopAnimation::Stop(0xvoid)'::`7'::CreateOncePolicy");
	SetCnet(0x0117B1E0, 5, "CECCoupleMediator");
	SetCnet(0x0117B208, 4, "CECCritterGroup");
	SetCnet(0x0117B21C, 3, "A3DAutoBehaviourWander");
	SetCnet(0x0117B22C, 3, "A3DAutoBehaviourHover");
	SetCnet(0x0117B23C, 3, "A3DAutoBehaviourBoid");
	SetCnet(0x0117B24C, 3, "A3DAutoBehaviourArrival");
	SetCnet(0x0117B25C, 3, "A3DAutoBehaviourFlee");
	SetCnet(0x0117B26C, 19, "A3DAutoFish");
	SetCnet(0x0117B2BC, 19, "A3DAutoDoltishFish");
	SetCnet(0x0117B30C, 19, "A3DAutoBriskFish");
	SetCnet(0x0117B35C, 19, "A3DAutoEagle");
	SetCnet(0x0117B3AC, 19, "A3DAutoButterfly");
	SetCnet(0x0117B3FC, 19, "A3DAutoFirefly");
	SetCnet(0x0117B44C, 19, "A3DAutoCrow");
	SetCnet(0x0117B49C, 5, "CECCrossServerCryMsgMediator");
	SetCnet(0x0117B534, 1, "CECCustomizeBound");
	SetCnet(0x0117BE50, 19, "CECCustomizeMgrBase");
	SetCnet(0x0117BEA0, 19, "CECCustomizeMgr");
	SetCnet(0x0117BEF0, 19, "CECCustomizeHighPolyMgr");
	SetCnet(0x0117C5B4, 5, "CECCustomizeCreateCharacterPolicy");
	SetCnet(0x0117C5CC, 5, "CECCustomizeLoginCharacterPolicy");
	SetCnet(0x0117C5E4, 5, "CECCustomizeHostPolicy");
	SetCnet(0x0117C5FC, 6, "CECDartCar");
	SetCnet(0x0117C62C, 1, "AArray<CECDealInventory::ITEMINFO,CECDealInventory::ITEMINFO &>");
	SetCnet(0x0117C634, 5, "CECDealInventory");
	SetCnet(0x0117C724, 5, "CECDebugCmdMediator");
	SetCnet(0x0117C73C, 2, "CECDecal");
	SetCnet(0x0117C748, 1, "AArray<CECIconDecal::ICON,CECIconDecal::ICON &>");
	SetCnet(0x0117C750, 2, "CECIconDecal");
	SetCnet(0x0117C75C, 2, "CECSpriteDecal");
	SetCnet(0x0117C768, 2, "CECFaceDecal");
	SetCnet(0x0117C774, 1, "CECBubbleDecal");
	SetCnet(0x0117C77C, 1, "APtrList<CECBubbleDecal *>");
	SetCnet(0x0117C784, 1, "CECBubbleDecalList");
	SetCnet(0x0117C804, 5, "CECDialogShowDependencyMediatorBase");
	SetCnet(0x0117C81C, 5, "CECDialogExclusiveShowMediator");
	SetCnet(0x0117C834, 5, "CECDialogDependentHideMediator");
	SetCnet(0x0117C84C, 5, "CECDialogInFrontShowMediator");
	SetCnet(0x0117C864, 5, "CECDialogCenterAlignMediator");
	SetCnet(0x0117C87C, 5, "CECDialogPosAlignMediator");
	SetCnet(0x0117C90C, 5, "CECDivinationMediator");
	SetCnet(0x0117CA18, 5, "CECDlgAnimationEscMediator");
	SetCnet(0x0117CA30, 5, "CECDlgAnimationTalkMediator");
	SetCnet(0x0117CA48, 5, "CECDlgAnniversary2020Mediator");
	SetCnet(0x0117CA60, 5, "CECDlgAnniversary2020ProgGfxMediator");
	SetCnet(0x0117CA78, 5, "CECDlgAnniversary2020RewardEventMediator");
	SetCnet(0x0117CA90, 5, "CECDlgAnniversary2020SigninEventMediator");
	SetCnet(0x0117CAA8, 5, "CECDlgAnniversary2020TaskEventMediator");
	SetCnet(0x0117CB74, 1, "std::basic_ifstream<char,std::char_traits<char> >");
	SetCnet(0x0117D27C, 5, "CECDlgGuildpower1Mediator");
	SetCnet(0x0117D294, 5, "CECDlgGuildpower2Mediator");
	SetCnet(0x0117D2AC, 5, "CECDlgGuildpower3Mediator");
	SetCnet(0x0117D2C4, 5, "CECDlgGuildpower4Mediator");
	SetCnet(0x0117D2DC, 5, "CECDlgGuildpower5Mediator");
	SetCnet(0x0117D2F4, 5, "CECDlgGuildpower6Mediator");
	SetCnet(0x0117D30C, 5, "CECDlgGuildpowerhelpMainMediator");
	SetCnet(0x0117D324, 5, "CECDlgGuildpowerhelpsub01Mediator");
	SetCnet(0x0117D33C, 5, "CECDlgGuildpowerhelpsub0201Mediator");
	SetCnet(0x0117D354, 5, "CECDlgGuildpowerhelpsub0202Mediator");
	SetCnet(0x0117D36C, 5, "CECDlgGuildpowerhelpsub0203Mediator");
	SetCnet(0x0117D384, 5, "CECDlgGuildpowerhelpsub0204Mediator");
	SetCnet(0x0117D39C, 5, "CECDlgGuildpowerhelpsub02Mediator");
	SetCnet(0x0117D3B4, 5, "CECDlgGuildpowerhelpsub03Mediator");
	SetCnet(0x0117D3CC, 5, "CECDlgGuildpowerhelpsub04Mediator");
	SetCnet(0x0117D3E4, 5, "CECDlgGuildpowerhelpsub0501Mediator");
	SetCnet(0x0117D3FC, 5, "CECDlgGuildpowerhelpsub0502Mediator");
	SetCnet(0x0117D414, 5, "CECDlgGuildpowerhelpsub0503Mediator");
	SetCnet(0x0117D42C, 5, "CECDlgGuildpowerhelpsub0504Mediator");
	SetCnet(0x0117D444, 5, "CECDlgGuildpowerhelpsub0505Mediator");
	SetCnet(0x0117D45C, 5, "CECDlgGuildpowerhelpsub05Mediator");
	SetCnet(0x0117D474, 5, "CECDlgGuildpowerhelpsub06Mediator");
	SetCnet(0x0117D48C, 5, "CECDlgGuildpowerhelpsub07Mediator");
	SetCnet(0x0117D4A4, 5, "CECDlgGuildpowerhelpsub08Mediator");
	SetCnet(0x0117D4BC, 5, "CECDlgGuildpowerMainMediator");
	SetCnet(0x0117D4D4, 5, "CECDlgNewserverEvent01Mediator");
	SetCnet(0x0117D4EC, 5, "CECDlgNewserverEvent02Mediator");
	SetCnet(0x0117D504, 5, "CECDlgNewserverEvent02viewMediator");
	SetCnet(0x0117D51C, 5, "CECDlgNewserverEvent03Mediator");
	SetCnet(0x0117D534, 5, "CECDlgNewserverEvent04Mediator");
	SetCnet(0x0117D54C, 5, "CECDlgNewserverEvent05Mediator");
	SetCnet(0x0117D564, 5, "CECDlgNewserverMainMediator");
	SetCnet(0x0117D57C, 1, "CECDomain");
	SetCnet(0x0117D5F4, 7, "CECDomainInfo");
	SetCnet(0x0117D614, 8, "CECDomainCountryInfo");
	SetCnet(0x0117D638, 1, "CECDomainCountry");
	SetCnet(0x0117D764, 7, "CECDomainGuildInfo");
	SetCnet(0x0117D8E0, 5, "CECDriftBottleMediator");
	SetCnet(0x0117D920, 5, "CECDynSkillMediator");
	SetCnet(0x0117D93C, 5, "CECEasyProduceMediator");
	SetCnet(0x0117D990, 2, "`public: void __thiscall CECEasyProduceMediator::ShowMessageBoxInfo(0xvoid)'::`7'::QuickProduce");
	SetCnet(0x0117D99C, 82, "CECElsePlayer");
	SetCnet(0x0117DE78, 1, "APtrArray<CECEnemyMan::ENEMY *>");
	SetCnet(0x0117DE80, 1, "APtrArray<CECEnemyMan::ENEMYEX *>");
	SetCnet(0x0117DE88, 1, "CECEnemyMan");
	SetCnet(0x0117DE90, 6, "GNET::RpcDataVector<char>");
	SetCnet(0x0117DEC4, 3, "GNET::STLContainer<std::vector<char,std::allocator<char> > >");
	SetCnet(0x0117DED4, 5, "CECEnemyListMediator");
	SetCnet(0x0117DEEC, 5, "CECEPWork");
	SetCnet(0x0117DF04, 2, "CECEPWorkMatcher");
	SetCnet(0x0117DF10, 2, "CECEPWorkIDMatcher");
	SetCnet(0x0117DF1C, 5, "CECEPWorkStand");
	SetCnet(0x0117DF34, 5, "CECEPWorkMove");
	SetCnet(0x0117DF4C, 5, "CECEPWorkMelee");
	SetCnet(0x0117DF64, 5, "CECEPWorkSpell");
	SetCnet(0x0117DF7C, 5, "CECEPWorkPickUp");
	SetCnet(0x0117DF94, 5, "CECEPWorkDead");
	SetCnet(0x0117DFAC, 5, "CECEPWorkUseItem");
	SetCnet(0x0117DFC4, 5, "CECEPWorkIdle");
	SetCnet(0x0117DFDC, 5, "CECEPWorkFlashMove");
	SetCnet(0x0117DFF4, 5, "CECEPWorkPassiveMove");
	SetCnet(0x0117E00C, 5, "CECEPWorkParabolaMove");
	SetCnet(0x0117E024, 5, "CECEPWorkCongregate");
	SetCnet(0x0117E03C, 5, "CECEPWorkSkillStateAct");
	SetCnet(0x0117E054, 2, "`public: bool __thiscall CECEPWorkMan::FinishIdleWork(0xint)'::`2'::CECEPIdleWorkMatcher");
	SetCnet(0x0117E060, 2, "`public: bool __thiscall CECEPWorkMan::FinishCongregateWork(0xint)'::`2'::CECEPCongregateWorkMatcher");
	SetCnet(0x0117E06C, 5, "CECEquipSlotNewMediator");
	SetCnet(0x0117E098, 2, "EquipSlotNewConfirmMessageBoxHandler");
	SetCnet(0x0117E0A4, 5, "CECEquipSoulAndSpriteMediator");
	SetCnet(0x0117E200, 5, "CECEventHintMediator");
	SetCnet(0x0117E2C8, 18, "CECSkinModelWrapper");
	SetCnet(0x0117E314, 16, "CECModelWrapper");
	SetCnet(0x0117E358, 66, "CECFace");
	SetCnet(0x0117E464, 3, "CECSpecialShader");
	SetCnet(0x0117E474, 3, "CECRewuShader");
	SetCnet(0x0117E488, 3, "CECWanmeiShader");
	SetCnet(0x0117F358, 66, "CECFaceBase");
	SetCnet(0x0117F4D0, 66, "CECFaceHighPoly");
	SetCnet(0x0117F78C, 1, "`public: static bool __cdecl CECFaceHighPoly::UpdateCustomCharTexture(0xCECFaceBase::LOAD_PLAYERHEAD_PARAM const &,bool,A3DSkinModel *,CustomChar *)'::`2'::GenDiffSuccessFunc");
	SetCnet(0x0117F794, 1, "`public: static bool __cdecl CECFaceHighPoly::UpdateCustomCharTexture(0xCECFaceBase::LOAD_PLAYERHEAD_PARAM const &,bool,A3DSkinModel *,CustomChar *)'::`2'::GenNormSuccessFunc");
	SetCnet(0x0117F824, 5, "CECFactionRecuitMediator");
	SetCnet(0x0117F8B4, 1, "CECFactionManChange");
	SetCnet(0x0117F8BC, 1, "CECFactionManFactionChange");
	SetCnet(0x0117F8C4, 1, "CECObservable<CECFactionMan>");
	SetCnet(0x0117F8CC, 1, "APtrList<GNET::FactionInviteJoin *>");
	SetCnet(0x0117F8D4, 1, "CECFactionMan");
	SetCnet(0x0117F8DC, 5, "CECFactoinInventory");
	SetCnet(0x0117F934, 5, "CECFactionPetMediator");
	SetCnet(0x0117F9D4, 1, "CECFactionPVPModelChange");
	SetCnet(0x0117F9DC, 1, "CECFactionPVPModelScoreChange");
	SetCnet(0x0117F9E4, 1, "CECObservable<CECFactionPVPModel>");
	SetCnet(0x0117F9EC, 1, "CECFactionPVPModel");
	SetCnet(0x0117FD10, 5, "CECFactionShareSettingMediator");
	SetCnet(0x0117FD28, 6, "GNET::FactionPrivilegeDelegate");
	SetCnet(0x0117FD44, 6, "GNET::FactionMemberAward");
	SetCnet(0x0117FD60, 6, "GNET::FactionTarget");
	SetCnet(0x0117FD7C, 1, "GNET::FactionRewardMaterialData");
	SetCnet(0x0117FD98, 6, "GNET::RpcDataVector<GNET::FactionMemberAward>");
	SetCnet(0x0117FDB4, 6, "GNET::RpcDataVector<GNET::FactionTarget>");
	SetCnet(0x0117FDD0, 6, "GNET::RpcDataVector<GNET::FactionPrivilegeDelegate>");
	SetCnet(0x0117FDEC, 6, "GNET::RpcDataVector<GNET::FactionRewardMaterialData>");
	SetCnet(0x0117FE08, 6, "GNET::FactionExtraClientData");
	SetCnet(0x0117FE24, 6, "GNET::FactionTalentTreeActiveData");
	SetCnet(0x0117FE40, 6, "GNET::FactionExtraBase");
	SetCnet(0x0117FE5C, 6, "GNET::RpcDataVector<GNET::FactionTalentTreeActiveData>");
	SetCnet(0x0117FEF4, 3, "GNET::STLContainer<std::vector<GNET::FactionTalentTreeActiveData,std::allocator<GNET::FactionTalentTreeActiveData> > >");
	SetCnet(0x0117FF04, 3, "GNET::STLContainer<std::vector<GNET::FactionPrivilegeDelegate,std::allocator<GNET::FactionPrivilegeDelegate> > >");
	SetCnet(0x0117FF14, 3, "GNET::STLContainer<std::vector<GNET::FactionMemberAward,std::allocator<GNET::FactionMemberAward> > >");
	SetCnet(0x0117FF24, 3, "GNET::STLContainer<std::vector<GNET::FactionRewardMaterialData,std::allocator<GNET::FactionRewardMaterialData> > >");
	SetCnet(0x0117FF34, 3, "GNET::STLContainer<std::vector<GNET::FactionTarget,std::allocator<GNET::FactionTarget> > >");
	SetCnet(0x0117FF44, 5, "CECFactionTeamMediator");
	SetCnet(0x0117FF60, 5, "CECFakeMonster");
	SetCnet(0x0117FF90, 2, "CECComputeMoveParamFunction");
	SetCnet(0x0117FF9C, 2, "CECGeneralComputeMoveParamFunction");
	SetCnet(0x0117FFAC, 1, "CECFashionShopChange");
	SetCnet(0x0117FFB4, 1, "CECObservable<CECFashionShop>");
	SetCnet(0x0117FFBC, 4, "CECObserver<CECShopBase>");
	SetCnet(0x0117FFD0, 1, "CECFashionShop");
	SetCnet(0x0117FFD8, 4, "CECFashionShop");
	SetCnet(0x0117FFEC, 3, "CECShopSearchFashionShopPolicy");
	SetCnet(0x01180008, 5, "CECFireworks2Mediator");
	SetCnet(0x01180020, 2, "CECUseFireworks2Handler");
	SetCnet(0x0118002C, 5, "CECFirstRechargeGiftMediator");
	SetCnet(0x01180084, 5, "CECFixPosTransmitMediator");
	SetCnet(0x0118009C, 2, "`public: void __thiscall CECFixPosTransmitMediator::OnClick_Del(0xint)'::`2'::DelTransmitPosHandler");
	SetCnet(0x011800A8, 2, "`public: void __thiscall CECFixPosTransmitMediator::OnClick_Transmit(0xint)'::`7'::DoTransmitPosHandler");
	SetCnet(0x01180164, 5, "CECFreshManQuestionMediator");
	SetCnet(0x011801EC, 1, "APtrArray<CECFriendMan::FRIEND *>");
	SetCnet(0x011801F4, 1, "APtrArray<CECFriendMan::GROUP *>");
	SetCnet(0x011801FC, 1, "APtrArray<CECFriendMan::MESSAGE *>");
	SetCnet(0x01180204, 1, "APtrArray<CECFriendMan::SEND_INFO *>");
	SetCnet(0x0118020C, 1, "CECFriendMan");
	SetCnet(0x011802CC, 1, "APtrArray<A3DFont *>");
	SetCnet(0x011802D4, 4, "APhysXSerializerBase");
	SetCnet(0x011802E8, 5, "APhysXMaterialDesc");
	SetCnet(0x0118030C, 1, "AList2<tagMSG,tagMSG &>");
	SetCnet(0x01180314, 1, "APtrArray<A3DCursor *>");
	SetCnet(0x0118031C, 1, "CECGame");
	SetCnet(0x01180F0C, 1, "CECGameRun");
	SetCnet(0x01180F14, 17, "ECManager");
	SetCnet(0x01180F5C, 17, "EC_ManLoginUIMan");
	SetCnet(0x01180FA4, 10, "GNET::ACReport");
	SetCnet(0x01180FD0, 27, "IAnmInstance");
	SetCnet(0x01181040, 28, "CAnmGame");
	SetCnet(0x011811A4, 1, "AArray<CECGameRun::HistoryProgConfig,CECGameRun::HistoryProgConfig>");
	SetCnet(0x011823EC, 1, "APtrList<AUIDialog *>");
	SetCnet(0x011823F4, 3, "CECPendingLogoutHalf");
	SetCnet(0x0118241C, 3, "CECPendingLogoutCrossServer");
	SetCnet(0x01182448, 3, "CECPendingCrossServerGetInOut");
	SetCnet(0x01182478, 38, "CECGameUIMan");
	SetCnet(0x01182514, 2, "CECGameUIMan");
	SetCnet(0x0118371C, 2, "`public: virtual bool __thiscall CECGameUIMan::OnMessageBox(0xint,AUIDialog *)'::`68'::TeachSkillMessageBoxHandler");
	SetCnet(0x01183728, 2, "`public: virtual bool __thiscall CECGameUIMan::OnMessageBox(0xint,AUIDialog *)'::`155'::RepairAllMessageBoxHandler");
	SetCnet(0x01183734, 2, "`public: virtual bool __thiscall CECGameUIMan::OnMessageBox(0xint,AUIDialog *)'::`164'::FactionRepairMessageBoxHandler");
	SetCnet(0x01183740, 2, "`public: virtual bool __thiscall CECGameUIMan::OnMessageBox(0xint,AUIDialog *)'::`645'::GDiplomacyAllianceApplyMessageBoxHandler");
	SetCnet(0x0118374C, 2, "`public: virtual bool __thiscall CECGameUIMan::OnMessageBox(0xint,AUIDialog *)'::`657'::GDiplomacyHostilityApplyMessageBoxHandler");
	SetCnet(0x01183758, 2, "`public: virtual bool __thiscall CECGameUIMan::OnMessageBox(0xint,AUIDialog *)'::`669'::GDiplomacyRelationRemoveApplyMessageBoxHandler");
	SetCnet(0x01183764, 2, "`public: virtual bool __thiscall CECGameUIMan::OnMessageBox(0xint,AUIDialog *)'::`681'::GDiplomacyReplyAgreeMessageBoxHandler");
	SetCnet(0x01183770, 2, "`public: virtual bool __thiscall CECGameUIMan::OnMessageBox(0xint,AUIDialog *)'::`693'::GDiplomacyReplyAgreeMessageBoxHandler");
	SetCnet(0x0118377C, 2, "`public: virtual bool __thiscall CECGameUIMan::OnMessageBox(0xint,AUIDialog *)'::`932'::MNFactionApplyMessageBoxHandler");
	SetCnet(0x01183AF0, 1, "BroadCastItemsFilter");
	SetCnet(0x01183FAC, 1, "InvalidItemsFilter");
	SetCnet(0x01183FB4, 1, "ItemDataExtractorDefault");
	SetCnet(0x0118445C, 41, "CDlgTaskAction");
	SetCnet(0x01184504, 41, "CDlgBag");
	SetCnet(0x011845AC, 43, "CDlgBoothElse");
	SetCnet(0x0118465C, 41, "CDlgInputNO2");
	SetCnet(0x01184704, 50, "CDlgAppreciateSeriseObjFly");
	SetCnet(0x011847D0, 50, "CDlgAppreciateSeriseObjRidePet");
	SetCnet(0x0118489C, 50, "CDlgAppreciateSeriseObjViewPet");
	SetCnet(0x01184968, 41, "CDlgExp");
	SetCnet(0x01184A10, 41, "CDlgFriendOptionName");
	SetCnet(0x01184AB8, 41, "CDlgGMQueryItemSub");
	SetCnet(0x01184B60, 41, "CDlgGodEvilConvert");
	SetCnet(0x01184C08, 41, "CDlgQuickActionBind");
	SetCnet(0x01184CB0, 41, "CDlgSystem5");
	SetCnet(0x01184D58, 41, "CDlgSystem7");
	SetCnet(0x01184E00, 41, "CDlgPlantPet");
	SetCnet(0x01184EA8, 41, "CDlgTaskHintPop");
	SetCnet(0x01184F50, 41, "CDlgMatchProfileHabit");
	SetCnet(0x01184FF8, 41, "CDlgMatchProfileHobby");
	SetCnet(0x011850A0, 41, "CDlgMatchProfileAge");
	SetCnet(0x01185148, 41, "CDlgMatchProfileSetting");
	SetCnet(0x011851F0, 41, "CDlgMatchInfoHint");
	SetCnet(0x01185298, 41, "CDlgMatchModeSelect");
	SetCnet(0x01185340, 41, "CDlgMatchResult");
	SetCnet(0x011853E8, 6, "GNET::RpcDataVector<GNET::TankBattlePlayerScoreInfo>");
	SetCnet(0x01185404, 41, "CDlgChariotRevive");
	SetCnet(0x011854AC, 41, "CDlgChariotOpt");
	SetCnet(0x01185554, 41, "CDlgChariotRankList");
	SetCnet(0x011855FC, 41, "CDlgChariotScore");
	SetCnet(0x011856A4, 41, "CDlgChariotMultiKill");
	SetCnet(0x0118574C, 41, "CDlgChariotAmount");
	SetCnet(0x011857F4, 41, "CDlgSysModQuickBar");
	SetCnet(0x0118589C, 41, "CDlgSkillSubListRankItem");
	SetCnet(0x01185944, 41, "CDlgSkillSubPool");
	SetCnet(0x011859EC, 41, "CDlgBlackScreen");
	SetCnet(0x01185A94, 41, "CDlgHomeMapBuy");
	SetCnet(0x01185B3C, 41, "CDlgHomeMapName");
	SetCnet(0x01185BE4, 42, "CDlgGfxStars");
	SetCnet(0x01185C90, 41, "CDlgBarrageBtn");
	SetCnet(0x01185D38, 41, "CDlgFactionDivideMem");
	SetCnet(0x01185DE0, 41, "CDlgFactionFarmHarvest");
	SetCnet(0x01185E88, 41, "CDlgFactionRight1");
	SetCnet(0x01185F30, 41, "CDlgOfflineBattleVectory");
	SetCnet(0x01185FD8, 41, "CDlgOfflineBattleReborn");
	SetCnet(0x01186080, 41, "CDlgMentorStudentChangeIdentity");
	SetCnet(0x01186128, 41, "CDlgCoupleIntroduction");
	SetCnet(0x011861D0, 41, "CDlgNewGoldGuide");
	SetCnet(0x01186278, 41, "CDlgOldMoney2NewMoney");
	SetCnet(0x01186320, 41, "CDlgNewMoney2OldMoney");
	SetCnet(0x011863C8, 41, "CDlgScriptGfx18");
	SetCnet(0x01186470, 41, "CDlgNewGoldHelp6");
	SetCnet(0x01186518, 41, "CDlgHPCMakeupScar");
	SetCnet(0x011865C0, 43, "CDlgHPCMakeupTattooTextures");
	SetCnet(0x01186670, 43, "CDlgHPCMakeupScarTextures");
	SetCnet(0x01186720, 43, "CDlgHPCMakeupLipTextures");
	SetCnet(0x011867D0, 43, "CDlgHPCMakeupBlusherTextures");
	SetCnet(0x01186880, 43, "CDlgHPCMakeupEyeshadowTextures");
	SetCnet(0x01186930, 43, "CDlgHPCMakeupEyelineTextures");
	SetCnet(0x011869E0, 43, "CDlgHPCMakeupBrowTextures");
	SetCnet(0x01186A90, 43, "CDlgHPCMakeupEyelashTextures");
	SetCnet(0x01186B40, 43, "CDlgHPCMakeupEyepupilTextures");
	SetCnet(0x01186BF0, 43, "CDlgHPCMakeupHairModelSelect");
	SetCnet(0x01186CA0, 43, "CDlgHPCMakeupRaceFeature");
	SetCnet(0x01186D50, 41, "CDlgRedBookAwardSub");
	SetCnet(0x01186DF8, 41, "CDlgCampJoinQuit");
	SetCnet(0x01186EA0, 41, "CDlgCampChange");
	SetCnet(0x01186F48, 41, "CDlgCampLevelup");
	SetCnet(0x01186FF0, 41, "CDlgCampLevelupSub");
	SetCnet(0x01187098, 43, "CDlgCampTokenFrame");
	SetCnet(0x01187148, 43, "CDlgCampTokenLevel");
	SetCnet(0x011871F8, 41, "CDlgTimePause");
	SetCnet(0x011872A0, 46, "CDlgFullScreenHostForTask");
	SetCnet(0x0118735C, 41, "CDlgHuaZhaoActivityEnter");
	SetCnet(0x01187404, 41, "CDlgHuaZhaoActivityRule");
	SetCnet(0x011874AC, 41, "CDlgHeroPersonality");
	SetCnet(0x01187554, 41, "CDlgHeroBookTask");
	SetCnet(0x011875FC, 44, "CDlgSubHeroBookBiogeaphyChapter");
	SetCnet(0x011876B0, 41, "CDlgSummerEnter_2021");
	SetCnet(0x01188174, 41, "CDlgItemBubbleWithCount<2>");
	SetCnet(0x0118821C, 41, "CDlgItemBubbleWithCount<6>");
	SetCnet(0x0119AEF4, 3, "GNET::STLContainer<std::vector<GNET::TankBattlePlayerScoreInfo,std::allocator<GNET::TankBattlePlayerScoreInfo> > >");
	SetCnet(0x0119AF04, 5, "CECGatherMineMediator");
	SetCnet(0x0119B004, 1, "APtrArray<CECGFXCaster::AUTOGFX *>");
	SetCnet(0x0119B00C, 3, "CECGFXCaster");
	SetCnet(0x0119B080, 5, "CECGfxStarsMediator");
	SetCnet(0x0119B0D4, 2, "CECInputFilter");
	SetCnet(0x0119B1A4, 5, "CECGMPrepareRoomMediator");
	SetCnet(0x0119B1BC, 6, "CECGoblin");
	SetCnet(0x0119B2B4, 4, "CECGrassArea");
	SetCnet(0x0119B2C8, 4, "CECWaterArea");
	SetCnet(0x0119B504, 5, "CECGrowthTargetMediator");
	SetCnet(0x0119B56C, 6, "GNET::RpcDataVector<GNET::GHomeBatteleRecordData>");
	SetCnet(0x0119B588, 6, "GNET::GHomeBatteleRecord");
	SetCnet(0x0119B5A4, 6, "GNET::HomeGuardMonsterBriefData");
	SetCnet(0x0119B5C0, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterBriefData>");
	SetCnet(0x0119B5DC, 6, "GNET::GHomeLadder");
	SetCnet(0x0119B5F8, 6, "GNET::HomeBattleMatchStartRe");
	SetCnet(0x0119B614, 6, "GNET::HomeBattleStartRe");
	SetCnet(0x0119B630, 6, "GNET::HomeBattleEndRe");
	SetCnet(0x0119B64C, 6, "GNET::HomeBattleMatchCropperSelectRe");
	SetCnet(0x0119B684, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterBriefData,std::allocator<GNET::HomeGuardMonsterBriefData> > >");
	SetCnet(0x0119B694, 3, "GNET::STLContainer<std::vector<GNET::GHomeBatteleRecordData,std::allocator<GNET::GHomeBatteleRecordData> > >");
	SetCnet(0x0119B75C, 5, "CECGuardianBeastMainMediator");
	SetCnet(0x0119B774, 2, "`public: void __thiscall CECGuardianBeastMainMediator::OnCommand_Random(0xvoid)'::`5'::RandomAttribute");
	SetCnet(0x0119B780, 2, "`public: void __thiscall CECGuardianBeastMainMediator::OnCommand_AddMatchTimes(0xint)'::`5'::AddMatchTimes");
	SetCnet(0x0119B790, 6, "GNET::FactionCrossBattleDetailData");
	SetCnet(0x0119B7AC, 6, "GNET::FactionCrossBattleHistoryData");
	SetCnet(0x0119B7C8, 6, "GNET::RpcDataVector<GNET::FactionCrossBattleHistoryData>");
	SetCnet(0x0119B7E4, 6, "GNET::FactionCrossBattleData");
	SetCnet(0x0119B800, 6, "GNET::FactionFieldBattleHistoryData");
	SetCnet(0x0119B81C, 6, "GNET::FactionFieldBattleAllianceData");
	SetCnet(0x0119B838, 6, "GNET::RpcDataVector<GNET::FactionFieldBattleAllianceData>");
	SetCnet(0x0119B854, 6, "GNET::FactionFieldBattleDetailData");
	SetCnet(0x0119B870, 6, "GNET::RpcDataVector<GNET::FactionFieldBattleHistoryData>");
	SetCnet(0x0119B88C, 6, "GNET::FactionFieldBattleData");
	SetCnet(0x0119B8A8, 6, "GNET::FactionFieldBattleAllianceRequestData");
	SetCnet(0x0119B8C4, 6, "GNET::RpcDataVector<GNET::FactionFieldBattleAllianceRequestData>");
	SetCnet(0x0119B8E0, 6, "GNET::FactionFieldBattlePlayerInfo");
	SetCnet(0x0119B8FC, 6, "GNET::FactionCrossBriefInfo");
	SetCnet(0x0119B918, 6, "GNET::RpcDataVector<GNET::FactionCrossBriefInfo>");
	SetCnet(0x0119B9E0, 3, "GNET::STLContainer<std::vector<GNET::FactionCrossBriefInfo,std::allocator<GNET::FactionCrossBriefInfo> > >");
	SetCnet(0x0119B9F0, 3, "GNET::STLContainer<std::vector<GNET::FactionFieldBattleAllianceData,std::allocator<GNET::FactionFieldBattleAllianceData> > >");
	SetCnet(0x0119BA00, 3, "GNET::STLContainer<std::vector<GNET::FactionFieldBattleHistoryData,std::allocator<GNET::FactionFieldBattleHistoryData> > >");
	SetCnet(0x0119BA10, 3, "GNET::STLContainer<std::vector<GNET::FactionFieldBattleAllianceRequestData,std::allocator<GNET::FactionFieldBattleAllianceRequestData> > >");
	SetCnet(0x0119BA20, 3, "GNET::STLContainer<std::vector<GNET::FactionCrossBattleHistoryData,std::allocator<GNET::FactionCrossBattleHistoryData> > >");
	SetCnet(0x0119BA30, 3, "GNET::STLContainer<std::map<int,GNET::FactionCrossBattleDetailData,std::less<int>,std::allocator<std::pair<int const ,GNET::FactionCrossBattleDetailData> > > >");
	SetCnet(0x0119BA40, 3, "GNET::STLContainer<std::map<unsigned int,GNET::FactionFieldBattleDetailData,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,GNET::FactionFieldBattleDetailData> >");
	SetCnet(0x0119BA50, 5, "CECGuildBattleMediator");
	SetCnet(0x0119BA68, 6, "GNET::GFactionRelationApply");
	SetCnet(0x0119BA84, 5, "CECGuildRecordMediator");
	SetCnet(0x0119BB1C, 6, "GNET::ChallengeWish");
	SetCnet(0x0119BB38, 5, "CECHeroBookMediator");
	SetCnet(0x0119BC10, 5, "CECHighPolyCustomizeMediator");
	SetCnet(0x0119C244, 1, "CECHistoryVariableProgressInterfaceData");
	SetCnet(0x0119C24C, 5, "CECHomeAppreciateMediator");
	SetCnet(0x0119C264, 6, "GNET::HomeBaseExtraProp");
	SetCnet(0x0119C280, 6, "GNET::HomeCropper");
	SetCnet(0x0119C29C, 6, "GNET::HomeItem");
	SetCnet(0x0119C2B8, 6, "GNET::HomeBase");
	SetCnet(0x0119C2D4, 6, "GNET::RpcDataVector<GNET::HomeCropper>");
	SetCnet(0x0119C2F0, 6, "GNET::RpcDataVector<GNET::HomeItem>");
	SetCnet(0x0119C30C, 6, "GNET::HomeModule");
	SetCnet(0x0119C328, 6, "GNET::RpcDataVector<GNET::HomeModule>");
	SetCnet(0x0119C344, 6, "GNET::GHomeSyncData");
	SetCnet(0x0119C360, 3, "GNET::STLContainer<std::vector<GNET::HomeModule,std::allocator<GNET::HomeModule> > >");
	SetCnet(0x0119C370, 3, "GNET::STLContainer<std::vector<GNET::HomeItem,std::allocator<GNET::HomeItem> > >");
	SetCnet(0x0119C380, 3, "GNET::STLContainer<std::vector<GNET::HomeCropper,std::allocator<GNET::HomeCropper> > >");
	SetCnet(0x0119C390, 3, "GNET::STLContainer<std::map<int,GNET::Octets,std::less<int>,std::allocator<std::pair<int const ,GNET::Octets> > > >");
	SetCnet(0x0119C3A0, 3, "GNET::STLContainer<std::map<int,int,std::less<int>,std::allocator<std::pair<int const ,int> > > >");
	SetCnet(0x0119C3B0, 5, "CECHomeBagMediator");
	SetCnet(0x0119C3C8, 5, "CECHomeBuildingNameHintMediator");
	SetCnet(0x0119C3E0, 3, "CECHomeCommand");
	SetCnet(0x0119C3F0, 3, "CECHomeCommandMoveFromPos");
	SetCnet(0x0119C400, 3, "CECHomeCommandMoveFromHook");
	SetCnet(0x0119C410, 3, "CECHomeCommandRotate");
	SetCnet(0x0119C420, 3, "CECHomeCommandNewObj");
	SetCnet(0x0119C430, 3, "CECHomeCommandDelObj");
	SetCnet(0x0119C440, 3, "CECHomeCommandTerrainChanged");
	SetCnet(0x0119C450, 3, "CECHomeCommandTextureChanged");
	SetCnet(0x0119C460, 3, "CECHomeCommandGrassChanged");
	SetCnet(0x0119C470, 3, "CECHomeCommandMultiSelectMove");
	SetCnet(0x0119C480, 3, "CECHomeCommandMultiSelectDelete");
	SetCnet(0x0119C490, 3, "CECHomeCommandMultiSelectRotate");
	SetCnet(0x0119C4A8, 5, "CECHomeHelpMediator");
	SetCnet(0x0119C554, 6, "GNET::HomeEquipment");
	SetCnet(0x0119C570, 6, "GNET::Formulas");
	SetCnet(0x0119C58C, 6, "GNET::RpcDataVector<GNET::HomeEquipment>");
	SetCnet(0x0119C5A8, 6, "GNET::RpcDataVector<GNET::Formulas>");
	SetCnet(0x0119C5C4, 6, "GNET::HomeProperty");
	SetCnet(0x0119C5E0, 10, "GNET::HomeDetail");
	SetCnet(0x0119C60C, 3, "GNET::STLContainer<std::vector<GNET::HomeEquipment,std::allocator<GNET::HomeEquipment> > >");
	SetCnet(0x0119C61C, 3, "GNET::STLContainer<std::vector<GNET::Formulas,std::allocator<GNET::Formulas> > >");
	SetCnet(0x0119C62C, 2, "CECHomeInputFilter");
	SetCnet(0x0119C640, 5, "CECHomeItemLinkMediator");
	SetCnet(0x0119C658, 5, "CECHomeKickoutPlayerMediator");
	SetCnet(0x0119C670, 5, "CECHomeMainMediator");
	SetCnet(0x0119C688, 6, "GNET::HomeDataMirror");
	SetCnet(0x0119C6A4, 6, "GNET::DataForHomeBaseExtraProp");
	SetCnet(0x0119C6C0, 6, "GNET::HomeMirrorRankingInfo");
	SetCnet(0x0119C6DC, 6, "GNET::RpcDataVector<GNET::HomeMirrorRankingInfo>");
	SetCnet(0x0119C6F8, 3, "GNET::STLContainer<std::vector<GNET::HomeMirrorRankingInfo,std::allocator<GNET::HomeMirrorRankingInfo> > >");
	SetCnet(0x0119C708, 5, "CECHomeMirrorRanklistMediator");
	SetCnet(0x0119C720, 5, "CECHomeMirrorUploadMediator");
	SetCnet(0x0119C750, 23, "CECHomeObj");
	SetCnet(0x0119C838, 23, "CECHomeObjControllerState");
	SetCnet(0x0119C898, 23, "CECHomeObjControllerStateNormal");
	SetCnet(0x0119C8F8, 23, "CECHomeObjControllerStateObjSelected");
	SetCnet(0x0119C958, 23, "CECHomeObjControllerStateNewObjMove");
	SetCnet(0x0119C9B8, 23, "CECHomeObjControllerStateSelectedObjMove");
	SetCnet(0x0119CA18, 23, "CECHomeObjControllerStateSelectedObjRotate");
	SetCnet(0x0119CA78, 23, "CECHomeObjControllerStateTerrainEdit");
	SetCnet(0x0119CAD8, 23, "CECHomeObjControllerStateTexEdit");
	SetCnet(0x0119CB38, 23, "CECHomeObjControllerStateGrassEdit");
	SetCnet(0x0119CB98, 9, "`public: virtual void __thiscall CECHomeObjControllerStateObjSelected::OnDelObj(0xvoid)'::`2'::DelHomeObjHandler");
	SetCnet(0x0119CC30, 16, "CECHomeObjHook");
	SetCnet(0x0119CC78, 23, "CECHomeObjControllerStateMultiSelect");
	SetCnet(0x0119CCD8, 23, "CECHomeObjControllerStateMultiMove");
	SetCnet(0x0119CD38, 23, "CECHomeObjControllerStateMultiRotate");
	SetCnet(0x0119CD98, 2, "`public: virtual void __thiscall CECHomeObjControllerStateMultiSelect::OnDelObj(0xvoid)'::`2'::DelHomeObjHandler");
	SetCnet(0x0119CDA4, 5, "CECHomeObjOpMediator");
	SetCnet(0x0119CDBC, 5, "CECHomeOpHintMediator");
	SetCnet(0x0119CDD8, 5, "CECHomeRedPackageFrMediator");
	SetCnet(0x0119CDF0, 5, "CECHomeResourceAndFarmMediator");
	SetCnet(0x0119CE0C, 10, "GNET::HomeEditEnd");
	SetCnet(0x0119CEB8, 5, "CECHomeSkinMediator");
	SetCnet(0x0119CED4, 5, "CECHomeTaskMediator");
	SetCnet(0x0119CF14, 2, "CECHomeTerrainOpUp");
	SetCnet(0x0119CF20, 2, "CECHomeTerrainOpDown");
	SetCnet(0x0119CF2C, 2, "CECHomeTerrainOpClear");
	SetCnet(0x0119CF38, 2, "CECHomeTerrainOpFlat");
	SetCnet(0x0119CF44, 2, "CECHomeTerrainOpRing");
	SetCnet(0x0119CF50, 2, "CECHomeTerrainOpHelicalLine");
	SetCnet(0x0119D05C, 1, "CECHomeWorkShop");
	SetCnet(0x0119D064, 6, "GNET::GFoundryFormulasData");
	SetCnet(0x0119D080, 6, "GNET::RpcDataVector<GNET::GFoundryFormulasData>");
	SetCnet(0x0119D09C, 6, "GNET::GFoundryFormulas");
	SetCnet(0x0119D0B8, 6, "GNET::RpcDataVector<GNET::GFoundryFormulas>");
	SetCnet(0x0119D0D4, 10, "GNET::HomeFoundryFormulasSync");
	SetCnet(0x0119D100, 3, "GNET::STLContainer<std::vector<GNET::GFoundryFormulas,std::allocator<GNET::GFoundryFormulas> > >");
	SetCnet(0x0119D110, 3, "GNET::STLContainer<std::vector<GNET::GFoundryFormulasData,std::allocator<GNET::GFoundryFormulasData> > >");
	SetCnet(0x0119D120, 5, "CECHomeWorkShopMediator");
	SetCnet(0x0119D1C0, 1, "CECHomeWorld");
	SetCnet(0x0119D1C8, 6, "GNET::HomeGuardMonsterData");
	SetCnet(0x0119D1E4, 6, "GNET::HomeGuardMonsterShowPoint");
	SetCnet(0x0119D200, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterData>");
	SetCnet(0x0119D21C, 6, "GNET::RpcDataVector<GNET::HomeGuardMonsterShowPoint>");
	SetCnet(0x0119D238, 6, "GNET::HomeGuardMonster");
	SetCnet(0x0119D254, 6, "GNET::HomeSyncNoticeClientData");
	SetCnet(0x0119D308, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterShowPoint,std::allocator<GNET::HomeGuardMonsterShowPoint> > >");
	SetCnet(0x0119D318, 3, "GNET::STLContainer<std::vector<GNET::HomeGuardMonsterData,std::allocator<GNET::HomeGuardMonsterData> > >");
	SetCnet(0x0119D338, 6, "CECHostGoblin");
	SetCnet(0x0119D4A4, 2, "CECHostInputFilter");
	SetCnet(0x0119D764, 1, "CECHostMove");
	SetCnet(0x0119D824, 1, "AArray<unsigned char,unsigned char>");
	SetCnet(0x0119D82C, 2, "CECHPWorkMatcher");
	SetCnet(0x0119D838, 2, "CECHPWorkSpellMatcher");
	SetCnet(0x0119D874, 3, "`protected: void __thiscall CECHostPlayer::OnMsgHstPickupItem(0xECMSG const &)'::`43'::CECDelayMoveItem");
	SetCnet(0x0119D9B0, 2, "`protected: void __thiscall CECHostPlayer::OnMsgHstSkillData(0xECMSG const &)'::`7'::CECHPTraceSpellMatcher");
	SetCnet(0x0119DDA0, 1, "APtrArray<CECNPC *>");
	SetCnet(0x0119DDA8, 1, "APtrArray<CECSkill *>");
	SetCnet(0x0119DDB0, 1, "AArray<unsigned short,unsigned short>");
	SetCnet(0x0119DDB8, 1, "AArray<CECHostPlayer::TEAMINV,CECHostPlayer::TEAMINV &>");
	SetCnet(0x0119DDC0, 1, "APtrArray<CECObject *>");
	SetCnet(0x0119DDC8, 1, "AArray<CECHostPlayer::FORCE_INFO,CECHostPlayer::FORCE_INFO &>");
	SetCnet(0x0119DDD0, 81, "CECHostPlayer");
	SetCnet(0x0119DF18, 1, "APtrArray<CECElsePlayer *>");
	SetCnet(0x0119DF20, 5, "CECNPCInventory");
	SetCnet(0x0119DF38, 2, "CECHPWorkTraceSpellMatcher");
	SetCnet(0x0119DF44, 1, "APtrList<CECActionContext *>");
	SetCnet(0x0119DF4C, 8, "CECActionSwitcherBase");
	SetCnet(0x0119DF70, 8, "CECActionSwitcher");
	SetCnet(0x0119E020, 3, "`public: bool __thiscall CECHostPlayer::Init(0xS2C::cmd_self_info_1 const &)'::`192'::CECCoupleDataTimer");
	SetCnet(0x0119E6E0, 2, "DefaultPackSorter");
	SetCnet(0x0119E808, 1, "AArray<C2S::npc_trade_item,C2S::npc_trade_item &>");
	SetCnet(0x0119E810, 1, "AArray<C2S::npc_faction_trade,C2S::npc_faction_trade &>");
	SetCnet(0x0119E818, 1, "AArray<C2S::npc_sell_item,C2S::npc_sell_item &>");
	SetCnet(0x0119E820, 1, "AArray<C2S::npc_booth_item,C2S::npc_booth_item &>");
	SetCnet(0x0119EB24, 1, "CECSkillPanelChange");
	SetCnet(0x0119EB2C, 1, "CECObservable<CECHostSkillModel>");
	SetCnet(0x0119EB34, 1, "CECHostSkillModel");
	SetCnet(0x0119EB3C, 7, "CECObjectWork");
	SetCnet(0x0119EB5C, 9, "CECHPWork");
	SetCnet(0x0119EB84, 2, "CECHPWorkGeneralMatcher");
	SetCnet(0x0119EB90, 1, "CECHPWorkMan");
	SetCnet(0x0119EB98, 2, "CECHPWorkPostTickCommand");
	SetCnet(0x0119EBA4, 2, "CECHPWorkPostTickRunWorkCommand");
	SetCnet(0x0119EBB8, 9, "CECHPWorkDead");
	SetCnet(0x0119EBE0, 9, "CECHPWorkRevive");
	SetCnet(0x0119EC08, 9, "CECHPWorkFall");
	SetCnet(0x0119EC34, 9, "CECHPWorkFly");
	SetCnet(0x0119EC5C, 9, "CECHPWorkFMove");
	SetCnet(0x0119EC84, 9, "CECHPWorkPassiveMove");
	SetCnet(0x0119ECAC, 9, "CECHPWorkParabolaMove");
	SetCnet(0x0119ED04, 9, "CECHPWorkFollow");
	SetCnet(0x0119ED34, 9, "CECHPWorkNavigate");
	SetCnet(0x0119ED94, 9, "CECHPWorkMelee");
	SetCnet(0x0119EDBC, 3, "`public: virtual bool __thiscall CECHPWorkMelee::Tick(0xunsigned long)'::`31'::CECHPWorkPostTickCommand1");
	SetCnet(0x0119EDCC, 9, "CECHPWorkMove");
	SetCnet(0x0119EDF4, 2, "AutoMove::CMoveAgent::BrushTest");
	SetCnet(0x0119EE30, 9, "CECHPWorkSit");
	SetCnet(0x0119EE58, 9, "CECHPWorkPick");
	SetCnet(0x0119EE80, 9, "CECHPWorkConcentrate");
	SetCnet(0x0119EEA8, 9, "CECHPWorkBeBound");
	SetCnet(0x0119EED0, 9, "CECHPWorkCongregate");
	SetCnet(0x0119EEF8, 9, "CECHPWorkSpell");
	SetCnet(0x0119EF20, 9, "CECHPWorkSkillStateAction");
	SetCnet(0x0119EF48, 9, "CECHPWorkStand");
	SetCnet(0x0119EF70, 9, "CECTracedObject");
	SetCnet(0x0119EF98, 9, "CECTracedNPC");
	SetCnet(0x0119EFC0, 9, "CECTracedPlayer");
	SetCnet(0x0119EFE8, 9, "CECTracedMatter");
	SetCnet(0x0119F010, 9, "CECTracedTaskNPC");
	SetCnet(0x0119F038, 9, "CECTracedHomeObj");
	SetCnet(0x0119F060, 9, "CECHPWorkTrace");
	SetCnet(0x0119F0C8, 16, "CECHPWorkUse");
	SetCnet(0x0119F124, 5, "CECIdentifyItemMediator");
	SetCnet(0x0119F150, 80, "CECIllustrationPlayer");
	SetCnet(0x0119F2A0, 1, "CECImageDrawing");
	SetCnet(0x0119F2A8, 1, "CECBarDrawing");
	SetCnet(0x0119F3B0, 1, "APtrArray<CECImageRes::REGDRAW *>");
	SetCnet(0x0119F3B8, 2, "CECImageRes");
	SetCnet(0x0119F814, 1, "AArray<CECInputCtrl::WINMSG,CECInputCtrl::WINMSG &>");
	SetCnet(0x0119F81C, 1, "APtrStack<CECInputFilter *>");
	SetCnet(0x0119F824, 1, "CECInputCtrl");
	SetCnet(0x0119FBA0, 5, "CECMediatorInstanceMenual");
	SetCnet(0x0119FD38, 5, "CECInstanceTargetMeditor");
	SetCnet(0x011A0054, 2, "CECHostBrushTest");
	SetCnet(0x011A00FC, 1, "APtrArray<CECIvtrItem *>");
	SetCnet(0x011A0104, 5, "CECInventory");
	SetCnet(0x011A011C, 1, "CECInventoryPutParam");
	SetCnet(0x011A0204, 5, "CECItemBubbleMediator");
	SetCnet(0x011A02AC, 3, "CECItemPropertyLinearZoomer");
	SetCnet(0x011A02BC, 3, "CECItemPropertyAstrolabeZoomer");
	SetCnet(0x011A02CC, 3, "CECItemPropertyAstrolabeZoomer2");
	SetCnet(0x011A02DC, 3, "CECItemExtProperty::PropertyValueFormatPrinter");
	SetCnet(0x011A02EC, 3, "CECItemExtProperty::IntFormat");
	SetCnet(0x011A0304, 3, "CECItemExtProperty::IntPercentageFormat");
	SetCnet(0x011A0320, 3, "CECItemExtProperty::IntCascadeFormat");
	SetCnet(0x011A0340, 3, "CECItemExtProperty::IntPercentageCascadeFormat");
	SetCnet(0x011A037C, 3, "CECItemExtProperty::FormatFromItemDesc");
	SetCnet(0x011A038C, 5, "CECItemExtProperty::LocalRangedIntFormat");
	SetCnet(0x011A03C0, 5, "CECItemExtProperty::LocalRangedIntPercentageFormat");
	SetCnet(0x011A0404, 5, "CECItemExtProperty::LocalRangedFormatFromItemDesc");
	SetCnet(0x011A041C, 5, "CECItemExtProperty::LocalRangedMagicDefenceExtraFormat");
	SetCnet(0x011A0450, 6, "CECItemExtProperty::PropertyValueProcessor");
	SetCnet(0x011A046C, 6, "CECItemExtProperty::PropertyValueNullProcessor");
	SetCnet(0x011A0488, 6, "CECItemExtProperty::PropertyValueHalveProcessor");
	SetCnet(0x011A04A4, 6, "CECItemExtProperty::PropertyValueLocalFloatRangeProcessor");
	SetCnet(0x011A04C0, 6, "CECItemExtProperty::PropertyValueAllFloatRangeMinusP0Processor");
	SetCnet(0x011A04DC, 6, "CECItemExtProperty::PropertyValueLocalFloatRangeMinusP0Processor");
	SetCnet(0x011A0504, 24, "CECIvtrItem");
	SetCnet(0x011A0568, 48, "CECIvtrArmor");
	SetCnet(0x011A062C, 48, "CECIvtrNewArmor");
	SetCnet(0x011A079C, 48, "CECIvtrArrow");
	SetCnet(0x011A0A40, 24, "CECIvtrArmorRune");
	SetCnet(0x011A0AA4, 48, "CECIvtrDmgRune");
	SetCnet(0x011A0B68, 24, "CECIvtrMedicine");
	SetCnet(0x011A0BCC, 24, "CECIvtrElement");
	SetCnet(0x011A0C30, 24, "CECIvtrTossMat");
	SetCnet(0x011A0C94, 24, "CECIvtrFirework");
	SetCnet(0x011A0CF8, 24, "CECIvtrFirework2");
	SetCnet(0x011A0D5C, 24, "CECIvtrSkillMat");
	SetCnet(0x011A0DC0, 24, "CECIvtrIncSkillAbility");
	SetCnet(0x011A0E24, 24, "CECIvtrDoubleExp");
	SetCnet(0x011A0E88, 24, "CECIvtrDyeTicket");
	SetCnet(0x011A0EEC, 24, "CECIvtrTransmitScroll");
	SetCnet(0x011A0F50, 24, "CECIvtrTargetItem");
	SetCnet(0x011A0FB4, 24, "CECIvtrLookInfoItem");
	SetCnet(0x011A1018, 24, "CECIvtrWeddingBookCard");
	SetCnet(0x011A107C, 24, "CECIvtrWeddingInviteCard");
	SetCnet(0x011A10E0, 24, "CECIvtrShapener");
	SetCnet(0x011A1144, 24, "CECIvtrFactionMaterial");
	SetCnet(0x011A11A8, 24, "CECIvtrCongregate");
	SetCnet(0x011A120C, 24, "CECIvtrMonsterSpirit");
	SetCnet(0x011A1270, 24, "CECIvtrGeneralCardDice");
	SetCnet(0x011A12D4, 24, "CECIvtrUniversalToken");
	SetCnet(0x011A1338, 24, "CECIvtrAstrolabeRandomAddon");
	SetCnet(0x011A139C, 24, "CECIvtrAstrolabeIncInnerPointValue");
	SetCnet(0x011A1400, 24, "CECIvtrAstrolabeIncExp");
	SetCnet(0x011A1464, 24, "CECIvtrItemPackageByProfession");
	SetCnet(0x011A14C8, 24, "CECIvtrItemFixPosTransmitCharge");
	SetCnet(0x011A152C, 24, "CECIvtrItemHomeFormulasItem");
	SetCnet(0x011A1590, 24, "CECIvtrItemWishTributeItem");
	SetCnet(0x011A15F4, 24, "CECIvtrItemRedPacketPaper");
	SetCnet(0x011A1658, 24, "CECIvtrItemHomeUnlockPaper");
	SetCnet(0x011A16BC, 24, "CECIvtrItemGuardianBeastEgg");
	SetCnet(0x011A1720, 24, "CECEasyProduceItem");
	SetCnet(0x011A1784, 24, "CECFastProduceItem");
	SetCnet(0x011A17E8, 24, "CECUnlockRuneSlotItem");
	SetCnet(0x011A184C, 24, "CECRune");
	SetCnet(0x011A18B0, 24, "CECFixMonsterItem");
	SetCnet(0x011A1914, 24, "CECItemUsedForArea");
	SetCnet(0x011A1978, 24, "CECCaptureItem");
	SetCnet(0x011A19DC, 24, "CECQiHunCoverItem");
	SetCnet(0x011A1A40, 24, "CECQiHunItem");
	SetCnet(0x011A1AA4, 24, "CECQiLingItem");
	SetCnet(0x011A1B08, 24, "CECIvtrSlideSkillItem");
	SetCnet(0x011A1B6C, 24, "CECIvtrUseForSelfItem");
	SetCnet(0x011A1BD0, 24, "CECRedBookUpgradeItem");
	SetCnet(0x011A1C34, 24, "CECCampTokenProbAdjustItem");
	SetCnet(0x011A1C98, 24, "CECCampTokenUpgradeItem");
	SetCnet(0x011A1CFC, 24, "CECCampTokenRollbackItem");
	SetCnet(0x011A1D60, 24, "CECIvtrIllustratedFashionItem");
	SetCnet(0x011A1DC4, 24, "CECIvtrIllustratedPetEggItem");
	SetCnet(0x011A1E28, 24, "CECIvtrIllustratedWingEggItem");
	SetCnet(0x011A1E8C, 24, "CECIvtrKidDebrisGenerator");
	SetCnet(0x011A1EF0, 24, "CECIvtrMaterialRefine");
	SetCnet(0x011A1F54, 24, "CECIvtrMaterialRefineTicket");
	SetCnet(0x011A20D4, 48, "CECIvtrDecoration");
	SetCnet(0x011A21D0, 24, "CECIvtrDestroyingEssence");
	SetCnet(0x011A2270, 48, "CECIvtrEquip");
	SetCnet(0x011A24A8, 49, "CECIvtrBible");
	SetCnet(0x011A2570, 48, "CECIvtrSpeaker");
	SetCnet(0x011A2634, 48, "CECIvtrAutoHP");
	SetCnet(0x011A26F8, 48, "CECIvtrAutoMP");
	SetCnet(0x011A27BC, 48, "CECIvtrCertificate");
	SetCnet(0x011A2880, 48, "CECIvtrForceToken");
	SetCnet(0x011A2944, 48, "CECIvtrDynSkillEquip");
	SetCnet(0x011A2A08, 50, "CECIvtrGeneralCard");
	SetCnet(0x011A2AD4, 48, "CECIvtrAstrolabe");
	SetCnet(0x011A2B98, 48, "CECIvtrCampToken");
	SetCnet(0x011A2E44, 48, "CECIvtrFashion");
	SetCnet(0x011A2F48, 48, "CECIvtrFashionNew");
	SetCnet(0x011A3044, 48, "CECIvtrFlySword");
	SetCnet(0x011A3108, 48, "CECIvtrWing");
	SetCnet(0x011A3230, 1, "AArray<GOBLINSKILL,GOBLINSKILL &>");
	SetCnet(0x011A3238, 1, "AArray<unsigned int,unsigned int &>");
	SetCnet(0x011A3240, 48, "CECIvtrGoblin");
	SetCnet(0x011A3304, 24, "CECIvtrGoblinEquip");
	SetCnet(0x011A3368, 24, "CECIvtrGoblinExpPill");
	SetCnet(0x011A3444, 24, "CECIvtrUnknown");
	SetCnet(0x011A3544, 24, "CECIvtrMaterial");
	SetCnet(0x011A35A8, 24, "CECIvtrRecipe");
	SetCnet(0x011A360C, 24, "CECIvtrMoneyConvertible");
	SetCnet(0x011A3670, 1, "AArray<CECIvtrPetEgg::PETSKILL,CECIvtrPetEgg::PETSKILL &>");
	SetCnet(0x011A3678, 24, "CECIvtrPetEgg");
	SetCnet(0x011A36DC, 24, "CECIvtrPetFood");
	SetCnet(0x011A3740, 24, "CECIvtrPetFaceTicket");
	SetCnet(0x011A37E4, 24, "CECIvtrSkillTome");
	SetCnet(0x011A3848, 24, "CECIvtrTownScroll");
	SetCnet(0x011A38AC, 24, "CECIvtrRevScroll");
	SetCnet(0x011A3910, 24, "CECIvtrUnionScroll");
	SetCnet(0x011A3974, 24, "CECIvtrFaceTicket");
	SetCnet(0x011A39D8, 24, "CECIvtrFacePill");
	SetCnet(0x011A3A3C, 24, "CECIvtrGMGenerator");
	SetCnet(0x011A3AA0, 24, "CECIvtrTankCallin");
	SetCnet(0x011A3B04, 24, "CECIvtrShopToken");
	SetCnet(0x011A3B68, 24, "CECServantDebrisItem");
	SetCnet(0x011A3BCC, 24, "CECIvtrStone");
	SetCnet(0x011A3C30, 24, "CECIvtrRefineTicket");
	SetCnet(0x011A3C94, 24, "CECIvtrBibleRefineTicket");
	SetCnet(0x011A3CF8, 24, "CECIvtrTaskItem");
	SetCnet(0x011A3D5C, 24, "CECIvtrTaskDice");
	SetCnet(0x011A3DC0, 24, "CECIvtrTaskNmMatter");
	SetCnet(0x011A3E24, 48, "CECIvtrWeapon");
	SetCnet(0x011A3F54, 5, "CECLibProduceMediator");
	SetCnet(0x011A3FC0, 27, "CECLoadingUIMan");
	SetCnet(0x011A4030, 1, "CECLoadProgress");
	SetCnet(0x011A4178, 5, "CECLoanMediator");
	SetCnet(0x011A42A4, 3, "`void __cdecl CECLogicHelper::PlayMusic(0xint)'::`2'::CECBGMTimer");
	SetCnet(0x011A42B4, 80, "CECLoginPlayer");
	SetCnet(0x011A4604, 1, "CECLoginQueueChange");
	SetCnet(0x011A460C, 1, "CECObservable<CECLoginQueue>");
	SetCnet(0x011A4614, 1, "CECLoginQueue");
	SetCnet(0x011A48AC, 38, "CECLoginUIMan");
	SetCnet(0x011A4948, 41, "CDlgLoginServerListButton");
	SetCnet(0x011A49F0, 39, "CDlgLoginVersion");
	SetCnet(0x011A4A90, 41, "CDlgPwdHint");
	SetCnet(0x011A4B38, 41, "CDlgCreateGenderName");
	SetCnet(0x011A4BE0, 41, "CDlgPwdProtect");
	SetCnet(0x011A5E2C, 5, "CECLotteryBatchSettingMediator");
	SetCnet(0x011A5E44, 5, "CECLotteryMainMediator");
	SetCnet(0x011A5E60, 1, "APtrArray<APPRECIATE_ECM *>");
	SetCnet(0x011A5E68, 21, "ApprecaiteBaseObj");
	SetCnet(0x011A5EC0, 21, "AppreciateObjFly");
	SetCnet(0x011A5F18, 21, "AppreciateObjRidePet");
	SetCnet(0x011A5F70, 21, "AppreciateObjAppreciatePet");
	SetCnet(0x011A5FC8, 7, "AppreciateSeriseBase");
	SetCnet(0x011A5FE8, 7, "AppreciateSeriseFly");
	SetCnet(0x011A6008, 7, "AppreciateSeriseRidePet");
	SetCnet(0x011A6028, 7, "AppreciateSeriseViewPet");
	SetCnet(0x011A6048, 1, "AppreciateSetGroup");
	SetCnet(0x011A6320, 1, "AList2<CECAttackEvent,CECAttackEvent const &>");
	SetCnet(0x011A6328, 17, "CECAttacksMan");
	SetCnet(0x011A656C, 1, "AList2<CECAttackEvent,CECAttackEvent const &>::c_NodePool");
	SetCnet(0x011A6574, 1, "APtrArray<CECDecal *>");
	SetCnet(0x011A657C, 1, "APtrArray<CECPateText *>");
	SetCnet(0x011A6584, 17, "CECDecalMan");
	SetCnet(0x011A65D0, 1, "AArray<CECHomeObjMan::HOMEOBJMODEL,CECHomeObjMan::HOMEOBJMODEL &>");
	SetCnet(0x011A65D8, 17, "CECHomeObjMan");
	SetCnet(0x011A6764, 1, "AArray<CECMatterMan::MATTERMODEL,CECMatterMan::MATTERMODEL &>");
	SetCnet(0x011A676C, 17, "CECMatterMan");
	SetCnet(0x011A6818, 1, "AList2<ECMSG,ECMSG &>");
	SetCnet(0x011A6820, 1, "CECMessageMan");
	SetCnet(0x011A6828, 1, "AList2<ECMSG,ECMSG &>::c_NodePool");
	SetCnet(0x011A68A4, 4, "CECObserver<CECFactionMan>");
	SetCnet(0x011A68B8, 1, "APtrArray<CECNPCMan::NPCMODEL *>");
	SetCnet(0x011A68C0, 1, "APtrArray<CECFakeMonster *>");
	SetCnet(0x011A68C8, 17, "CECNPCMan");
	SetCnet(0x011A6910, 4, "CECNPCMan");
	SetCnet(0x011A6AE4, 1, "AArray<CECOrnamentMan::LDECMODEL,CECOrnamentMan::LDECMODEL &>");
	SetCnet(0x011A6AEC, 19, "CECOrnamentMan");
	SetCnet(0x011A6C10, 3, "`public: void __thiscall CECOrnamentMan::ShowBrushInfo(0xCHBasedCD::CCDBrush *)'::`20'::ShowOrnamentTimer");
	SetCnet(0x011A6C48, 6, "std::_Func_base<void,void *,CECLimitVisibilityInfo::LimitCondition *>");
	SetCnet(0x011A6C64, 6, "std::_Func_impl<<lambda_abf12f1f2b7b9630eb4e5ff976eb9cf7>,std::allocator<int>,void,void *,CECLimitVisibilityInfo::LimitCondition *>");
	SetCnet(0x011A6CFC, 1, "APtrArray<CECPlayerMan::PLAYERMODEL *>");
	SetCnet(0x011A6D04, 17, "CECPlayerMan");
	SetCnet(0x011A6D4C, 4, "CECPlayerMan");
	SetCnet(0x011A6EBC, 1, "APtrList<_SGC::A3DSkillGfxEvent *>");
	SetCnet(0x011A6EC4, 9, "_SGC::A3DSkillGfxMan");
	SetCnet(0x011A6EEC, 5, "A3DSkillGfxMan");
	SetCnet(0x011A6F04, 9, "_SGC::CECAttSkillGfxMan");
	SetCnet(0x011A6F2C, 10, "CECSkillGfxEvent");
	SetCnet(0x011A6F58, 1, "APtrList<CECSkillGfxEvent *>");
	SetCnet(0x011A6F60, 5, "SkillGfxMan");
	SetCnet(0x011A6F78, 17, "CECSkillGfxMan");
	SetCnet(0x011A6FC0, 1, "CECSkillExtraGfxMan");
	SetCnet(0x011A7054, 5, "CECMaterialRefineMediator");
	SetCnet(0x011A706C, 25, "CECMatter");
	SetCnet(0x011A7178, 1, "CECMCDownload");
	SetCnet(0x011A7530, 3, "MSRecruitQueryTimer");
	SetCnet(0x011A7540, 3, "MSNameQueryTimer");
	SetCnet(0x011A7550, 1, "MSListItemCmper::LST_ITEM_BASE_DATA_CMPER");
	SetCnet(0x011A7558, 2, "MSListItemCmper::MENTORING_REQUEST_CMPER");
	SetCnet(0x011A7564, 3, "MSListItemCmper::APPRENTICING_REQUEST_CMPER");
	SetCnet(0x011A7574, 4, "MSListItemCmper::MENTOR_MORALITY_RANK_CMPER");
	SetCnet(0x011A7588, 2, "MSListItemCmper::GRADUATE_DATA_CMPER");
	SetCnet(0x011A7594, 6, "GNET::MasterHistoryData");
	SetCnet(0x011A7640, 5, "CECMentorStudentMediator");
	SetCnet(0x011A7A2C, 5, "CECMNFactionBattleFieldInfoMediator");
	SetCnet(0x011A7A44, 5, "CECMNFactionBattleFieldMapMediator");
	SetCnet(0x011A7A5C, 5, "CECMNFactionBattleResultMediator");
	SetCnet(0x011A7A84, 5, "CEMNFactionChooseBattleMediator");
	SetCnet(0x011A7A9C, 2, "`public: void __thiscall CEMNFactionChooseBattleMediator::OnClick_OfflineEnter(0xint,int)'::`2'::OfflinBattleEnterConfirmBox");
	SetCnet(0x011A7AAC, 5, "CECMNFactionHelpMediator");
	SetCnet(0x011A7C14, 5, "CECMNFactionRankMediator");
	SetCnet(0x011A7C2C, 5, "CECMNFactionResourcePointDegreeMediator");
	SetCnet(0x011A7C44, 5, "CECMNFactionTransmitMediator");
	SetCnet(0x011A7C5C, 5, "CECMNFactionWarApplyMediator");
	SetCnet(0x011A7C74, 5, "CECMNFactionWarApplyResultMediator");
	SetCnet(0x011A7C98, 5, "CECMNFactionWorldMapMediator");
	SetCnet(0x011A7DE8, 20, "CECModelSmoothRotate");
	SetCnet(0x011A7E3C, 95, "CECMonster");
	SetCnet(0x011A7FD4, 5, "CECMonsterFlagMediator");
	SetCnet(0x011A8024, 5, "CECMysteriousShopMediator");
	SetCnet(0x011A8068, 5, "CECNewlotteryMediator");
	SetCnet(0x011A8164, 5, "CECNewPopMsgMediator");
	SetCnet(0x011A8224, 95, "CECNPC");
	SetCnet(0x011A83A4, 2, "CECNPCBind::SkeletionHookGetter");
	SetCnet(0x011A83B0, 2, "CECNPCBind::SkeletonHookGetterBySkeleton");
	SetCnet(0x011A85A4, 2, "CECNPCBind::SkeletonHookGetterByPlayer");
	SetCnet(0x011A85BC, 95, "CECNPCFollowServer");
	SetCnet(0x011A875C, 53, "CECNPCModelPolicy");
	SetCnet(0x011A8834, 55, "CECNPCModelDefaultPolicy");
	SetCnet(0x011A8914, 53, "CECNPCModelClonePlayerPolicy");
	SetCnet(0x011A89EC, 55, "CECNPCModelStatuePlayerPolicy");
	SetCnet(0x011A8C10, 95, "CECNPCServer");
	SetCnet(0x011A8DD0, 5, "CECNPCTalkMediator");
	SetCnet(0x011A8DE8, 2, "`protected: bool __thiscall CECNPCTalkMediator::PopupCorrespondingServiceDialog(0xint,int,void *)'::`10'::NPCTalkGiveTaskMessageBoxHandler");
	SetCnet(0x011A8DF4, 2, "`protected: bool __thiscall CECNPCTalkMediator::PopupCorrespondingServiceDialog(0xint,int,void *)'::`32'::NPCTalkComplteTaskMessageBoxHandler");
	SetCnet(0x011A8E38, 3, "CECNPCVoiceTimer");
	SetCnet(0x011A8E48, 20, "CECObject");
	SetCnet(0x011A9260, 5, "CECOfflineShopSelfSettingLogMediator");
	SetCnet(0x011A9550, 5, "CECOrnament");
	SetCnet(0x011A9598, 6, "std::_Func_impl<<lambda_dd7eac127227af2b075d665c6485429e>,std::allocator<int>,void,void *,CECLimitVisibilityInfo::LimitCondition *>");
	SetCnet(0x011A95B8, 5, "CECParkRankMediator");
	SetCnet(0x011A9644, 1, "CECGameUIMan::AUI_EditboxItemMaskFilter");
	SetCnet(0x011A964C, 1, "APtrArray<AWString *>");
	SetCnet(0x011A9654, 1, "APtrArray<CECFaceDecal *>");
	SetCnet(0x011A965C, 1, "AArray<CECPateText::ITEM,CECPateText::ITEM &>");
	SetCnet(0x011A9664, 1, "CECPateText");
	SetCnet(0x011A966C, 3, "CECPendingAction");
	SetCnet(0x011A967C, 95, "CECPet");
	SetCnet(0x011A9808, 1, "CECPetData");
	SetCnet(0x011A9810, 1, "CECPetCorral");
	SetCnet(0x011A9D04, 45, "PGPInterface");
	SetCnet(0x011AA098, 2, "IECTrigger");
	SetCnet(0x011AA0A4, 2, "CECPlayerEquipItemsArrayDrawer");
	SetCnet(0x011AA0B0, 2, "CECPlayerEquipItemsInventoryDrawer");
	SetCnet(0x011AA0BC, 80, "CECPlayer");
	SetCnet(0x011AA270, 2, "CECYaoHouSkillStopTrigger");
	SetCnet(0x011AD574, 15, "CECPlayerActionPlayPolicy");
	SetCnet(0x011AD5B4, 15, "CECPlayerActionPlayDefaultPolicy");
	SetCnet(0x011AD5F4, 15, "CECPlayerActionPlaySupportCastSkillWhenMovePolicy");
	SetCnet(0x011ADE34, 83, "CECClonePlayer");
	SetCnet(0x011ADF84, 83, "CECHostNavigatePlayer");
	SetCnet(0x011AE0D4, 83, "CECNPCClonedMaster");
	SetCnet(0x011AE224, 83, "CECStatuePlayer");
	SetCnet(0x011AE548, 5, "CECPlayerFightScoreMediator");
	SetCnet(0x011AE560, 1, "CECPlayerLevelRankRealmChange");
	SetCnet(0x011AE568, 1, "CECObservable<CECPlayerLevelRankRealmChangeCheck>");
	SetCnet(0x011AE570, 1, "CECPlayerLevelRankRealmChangeCheck");
	SetCnet(0x011AE5EC, 1, "CECPlayerWrapper");
	SetCnet(0x011AE5F4, 5, "IdleAction");
	SetCnet(0x011AE60C, 5, "MoveAction");
	SetCnet(0x011AE624, 5, "CastSkillAction");
	SetCnet(0x011AE63C, 5, "UseItemAction");
	SetCnet(0x011AE654, 5, "PickupAction");
	SetCnet(0x011AE66C, 5, "MeleeAction");
	SetCnet(0x011AE684, 5, "ComboSkillAction");
	SetCnet(0x011AE69C, 2, "A3DObject");
	SetCnet(0x011AE6A8, 5, "A3DDevObject");
	SetCnet(0x011AE6C0, 5, "CECPortraitRender");
	SetCnet(0x011AE794, 5, "CECPrayMediator");
	SetCnet(0x011AE7AC, 5, "CECPridictableEngraveMediator");
	SetCnet(0x011AE9DC, 8, "CECSimulatorBase");
	SetCnet(0x011AEA00, 8, "CECCharacterSimulator");
	SetCnet(0x011AEA24, 8, "CECMeridiansSimulator");
	SetCnet(0x011AEA48, 8, "CECSkillSimulator");
	SetCnet(0x011AEA6C, 8, "CECRuneSimulator");
	SetCnet(0x011AEA90, 8, "CECGeneralCardSimulator");
	SetCnet(0x011AEAB4, 8, "CECAstrolabeSimulator");
	SetCnet(0x011AEAD8, 8, "CECEquipmentSimulator");
	SetCnet(0x011AEAFC, 8, "CECTitleSimulator");
	SetCnet(0x011AEB20, 8, "CECCampTokenSimulator");
	SetCnet(0x011AF6E0, 13, "CECQuickBuyPopTriggerPolicy");
	SetCnet(0x011AF718, 4, "CECQuickBuyPopHidePolicy");
	SetCnet(0x011AF72C, 2, "CECQuickBuyPopAlignPolicy");
	SetCnet(0x011AF738, 13, "CECQuickBuyPopActivityTrigger");
	SetCnet(0x011AF770, 4, "CECQuickBuyPopActivityHide");
	SetCnet(0x011AF784, 2, "CECQuickBuyPopActivityAlign");
	SetCnet(0x011AF874, 3, "CECQuickBuyPopBuyItemPolicy");
	SetCnet(0x011AF970, 14, "RandMallShoppingState");
	SetCnet(0x011AF9B8, 14, "RMSStateNoConfig");
	SetCnet(0x011AFA08, 14, "RMSStateToQuery");
	SetCnet(0x011AFA54, 14, "RMSStateInQuery");
	SetCnet(0x011AFAA0, 14, "RMSStateToRoll");
	SetCnet(0x011AFAEC, 14, "RMSStateInRoll");
	SetCnet(0x011AFB38, 14, "RMSStateToPay");
	SetCnet(0x011AFB84, 14, "RMSStateInPay");
	SetCnet(0x011AFBD0, 14, "RMSStatePayed");
	SetCnet(0x011AFCB0, 3, "CECPreprocessor");
	SetCnet(0x011AFCC0, 3, "CECTerrainPreprocessor");
	SetCnet(0x011AFCD0, 3, "CECTernBlockPreprocessor");
	SetCnet(0x011B0164, 5, "CECRandomSoftKeyboardMediator");
	SetCnet(0x011B0190, 6, "GNET::PlayerBriefInfo");
	SetCnet(0x011B01E0, 5, "CECRecallActivityMediator");
	SetCnet(0x011B02F8, 5, "CECRedBookBoxMediator");
	SetCnet(0x011B0374, 5, "CECRedBookMediator");
	SetCnet(0x011B038C, 1, "GNET::RedEnvelopeGrabInfo");
	SetCnet(0x011B03A8, 6, "GNET::RpcDataVector<GNET::RedEnvelopeGrabInfo>");
	SetCnet(0x011B03C4, 6, "GNET::RedEnvelope");
	SetCnet(0x011B03EC, 3, "GNET::STLContainer<std::vector<GNET::RedEnvelopeGrabInfo,std::allocator<GNET::RedEnvelopeGrabInfo> > >");
	SetCnet(0x011B0404, 5, "CECRedPacketEditMediator");
	SetCnet(0x011B0424, 2, "`public: void __thiscall CECRedPacketEditMediator::SendMsg2Friend(0xvoid)'::`19'::SendRedPacketMsgToWord");
	SetCnet(0x011B0458, 5, "CECRedPacketGfxMediator");
	SetCnet(0x011B0470, 3, "ClossRedPacketGfx");
	SetCnet(0x011B0480, 5, "CECRedPacketMediator");
	SetCnet(0x011B0498, 3, "`public: virtual void __thiscall CECRedPacketMediator::ProcessMessage(0xenumMediatorMessageType,ECMSG const &)'::`13'::UpdataUI");
	SetCnet(0x011B04A8, 2, "`public: void __thiscall CECRedPacketMediator::OnClick_Recycle(0xvoid)'::`2'::RecyleRedPacket");
	SetCnet(0x011B04B4, 5, "CECRedPacketMessageMediator");
	SetCnet(0x011B04CC, 5, "CEC_RedPacketResultMediator");
	SetCnet(0x011B04E4, 1, "CECRenderModelMgr");
	SetCnet(0x011B2834, 1, "APtrList<CECRTDebug::DBGSTR *>");
	SetCnet(0x011B283C, 1, "CECRTDebug");
	SetCnet(0x011B2A44, 5, "CECRuneMediator");
	SetCnet(0x011B2AD4, 1, "APtrArray<CECSceneBlock *>");
	SetCnet(0x011B2ADC, 1, "AArray<unsigned long,unsigned long>");
	SetCnet(0x011B2AE4, 1, "APtrArray<CECScene::TREETYPE *>");
	SetCnet(0x011B2AEC, 1, "APtrArray<CECScene::GRASSTYPE *>");
	SetCnet(0x011B2AF4, 1, "APtrArray<CECScene::SUBTRNDATA *>");
	SetCnet(0x011B2AFC, 2, "CECScene");
	SetCnet(0x011B31F0, 1, "AArray<CECSceneBlock::TREEINFO,CECSceneBlock::TREEINFO &>");
	SetCnet(0x011B31F8, 1, "CECSceneBlock");
	SetCnet(0x011B345C, 1, "AArray<ECWDFILEDATAREF,ECWDFILEDATAREF &>");
	SetCnet(0x011B3640, 1, "APtrArray<CECModel *>");
	SetCnet(0x011B3648, 3, "LoaderThreadModul");
	SetCnet(0x011B3658, 1, "AArray<MTL_TRNBLOCK,MTL_TRNBLOCK &>");
	SetCnet(0x011B3660, 1, "APtrList<CECSceneThreadObj *>");
	SetCnet(0x011B3668, 3, "TerrLoaderModule");
	SetCnet(0x011B3678, 1, "APtrList<MTL_ECMODEL *>");
	SetCnet(0x011B3680, 1, "APtrArray<MTL_ECMODEL *>");
	SetCnet(0x011B3688, 3, "ECModelLoaderModule");
	SetCnet(0x011B3698, 3, "NPCLoaderModule");
	SetCnet(0x011B36A8, 3, "PlayerLoaderModule");
	SetCnet(0x011B36B8, 3, "AppreciateLoaderModule");
	SetCnet(0x011B36C8, 1, "APtrList<FxLoaderModule::MTL_FX *>");
	SetCnet(0x011B36D0, 3, "FxLoaderModule");
	SetCnet(0x011B3748, 1, "CECSceneServiceNPCChange");
	SetCnet(0x011B3750, 1, "CECObservable<CECSceneServiceNPC>");
	SetCnet(0x011B3758, 1, "CECSceneServiceNPC");
	SetCnet(0x011B3760, 2, "`public: CECSceneNPCID __thiscall CECSceneServiceNPC::FindWithSceneID(0xint)const '::`2'::SceneServiceNPCFinder");
	SetCnet(0x011B3770, 4, "CECScnBoxArea");
	SetCnet(0x011B3884, 4, "CECScreenEffect");
	SetCnet(0x011B3898, 4, "CECScreenEffectShake");
	SetCnet(0x011B38AC, 4, "CECScreenEffectRedSpark");
	SetCnet(0x011B38C0, 4, "CECScreenEffectBlackScreen");
	SetCnet(0x011B38D4, 4, "CECScreenEffectGrayScreen");
	SetCnet(0x011B38E8, 4, "CECScreenEffectBindingCarrier");
	SetCnet(0x011B38FC, 4, "CECScreenEffectGreenSpark");
	SetCnet(0x011B3910, 4, "CECScreenEffectWhiteScreen");
	SetCnet(0x011B3950, 5, "CECScriptCommandMediator");
	SetCnet(0x011B3968, 5, "CECSelectTransmitMapMediator");
	SetCnet(0x011B3980, 10, "GNET::HomeEquipItem");
	SetCnet(0x011B39AC, 10, "GNET::HomeFactoryUpgrade");
	SetCnet(0x011B39D8, 10, "GNET::HomePublishFoundryFormulas");
	SetCnet(0x011B3A04, 10, "GNET::HomeRemoveFoundryFormulas");
	SetCnet(0x011B3A30, 10, "GNET::HomeFactoryProduce");
	SetCnet(0x011B3A5C, 10, "GNET::HomePurchaseProduce");
	SetCnet(0x011B3A88, 10, "GNET::HomePurchaseUpgrade");
	SetCnet(0x011B3AB4, 10, "GNET::HomeUpgrade");
	SetCnet(0x011B3AE0, 10, "GNET::HomeReceiveFoundryMoney");
	SetCnet(0x011B3B0C, 10, "GNET::HomeSetPrivilege");
	SetCnet(0x011B3B38, 10, "GNET::HomeAddClean");
	SetCnet(0x011B3B64, 10, "GNET::HomeReName");
	SetCnet(0x011B3B90, 10, "GNET::HomeResourceGetInfo");
	SetCnet(0x011B3BBC, 10, "GNET::HomeResourceFactoryUpgrade");
	SetCnet(0x011B3BE8, 10, "GNET::HomeResourceFactoryStorage");
	SetCnet(0x011B3C14, 10, "GNET::HomeResourceHarvest");
	SetCnet(0x011B3C40, 10, "GNET::HomeResourceProduce");
	SetCnet(0x011B3C6C, 10, "GNET::HomeResourceProduceCancel");
	SetCnet(0x011B3C98, 10, "GNET::HomeMapUnlock");
	SetCnet(0x011B3CC4, 10, "GNET::HomeUnEquipItem");
	SetCnet(0x011B3CF0, 10, "GNET::HomePraise");
	SetCnet(0x011B3D1C, 10, "GNET::HomeReSelectFactoryType");
	SetCnet(0x011B3D48, 10, "GNET::HomeSkinUpdate");
	SetCnet(0x011B3D74, 10, "GNET::RedEnvelopeDeliver");
	SetCnet(0x011B3DA0, 10, "GNET::RedEnvelopeGrab");
	SetCnet(0x011B3DCC, 10, "GNET::RedEnvelopeLatestGet");
	SetCnet(0x011B3DF8, 10, "GNET::RedEnvelopeTakeLeft");
	SetCnet(0x011B3E24, 10, "GNET::RedEnvelopeCancel");
	SetCnet(0x011B3E50, 10, "GNET::HomeResourceTransform");
	SetCnet(0x011B3E7C, 10, "GNET::HomeStorehouseTakeOut");
	SetCnet(0x011B3EA8, 10, "GNET::HomeGuardMonsterHatch");
	SetCnet(0x011B3ED4, 10, "GNET::HomeGuardMonsterShuffleAttribute");
	SetCnet(0x011B3F00, 10, "GNET::HomeGuardMonsterAddEnergy");
	SetCnet(0x011B3F2C, 10, "GNET::HomeGuardMonsterUpgrade");
	SetCnet(0x011B3F58, 10, "GNET::HomeGuardMonsterShowPointHang");
	SetCnet(0x011B3F84, 10, "GNET::HomeGuardMonsterShowPointTakeDown");
	SetCnet(0x011B3FB0, 10, "GNET::HomeGuardMonsterBattleMatchTimesAdd");
	SetCnet(0x011B3FDC, 10, "GNET::HomeGuardMonsterAppoint");
	SetCnet(0x011B4008, 10, "GNET::HomeLadderQuery");
	SetCnet(0x011B4034, 10, "GNET::HomeBattleMatchStart");
	SetCnet(0x011B4060, 10, "GNET::HomeBattleStart");
	SetCnet(0x011B408C, 10, "GNET::HomeBattleEnd");
	SetCnet(0x011B40B8, 10, "GNET::HomeGuardMonsterScoreRewardGet");
	SetCnet(0x011B40E4, 10, "GNET::HomeGuardMonsterWinRewardGet");
	SetCnet(0x011B4110, 10, "GNET::HomeBattleMatchCropperSelect");
	SetCnet(0x011B413C, 10, "GNET::HomeMirrorOperate");
	SetCnet(0x011B4168, 10, "GNET::ArenaTeamInviteRequest");
	SetCnet(0x011B4194, 10, "GNET::ArenaTeamInvite");
	SetCnet(0x011B41C0, 10, "GNET::ArenaTeamCaptainTransfer");
	SetCnet(0x011B41EC, 10, "GNET::ArenaTeamLeave");
	SetCnet(0x011B4218, 10, "GNET::ArenaTeamKickout");
	SetCnet(0x011B4244, 10, "GNET::ArenaTeamTopListQuery");
	SetCnet(0x011B4270, 10, "GNET::ArenaTeamTopListDetailQuery");
	SetCnet(0x011B429C, 10, "GNET::ArenaPlayerTopListQuery");
	SetCnet(0x011B42C8, 10, "GNET::ArenaRewardMoneyGet");
	SetCnet(0x011B42F4, 10, "GNET::FactionFieldBattleAgainst");
	SetCnet(0x011B4320, 10, "GNET::FactionFieldBattleAllianceInviteApply");
	SetCnet(0x011B434C, 10, "GNET::FactionFieldBattleAllianceInviteReply");
	SetCnet(0x011B4378, 10, "GNET::FactionFieldBattleDataQuery");
	SetCnet(0x011B43A4, 10, "GNET::FactionFieldBattleDeclare");
	SetCnet(0x011B43D0, 6, "GNET::FactionOpDivideNewPageData");
	SetCnet(0x011B43EC, 6, "GNET::RpcDataVector<GNET::FactionOpDivideNewPageData>");
	SetCnet(0x011B4408, 6, "GNET::FactionOpDivideNewPage");
	SetCnet(0x011B4424, 6, "GNET::FactionDivideHouseLeftItemGetData");
	SetCnet(0x011B4440, 6, "GNET::FactionDivideHouseItemGetData");
	SetCnet(0x011B445C, 6, "GNET::RpcDataVector<GNET::FactionDivideHouseItemGetData>");
	SetCnet(0x011B4478, 6, "GNET::RpcDataVector<GNET::FactionDivideHouseLeftItemGetData>");
	SetCnet(0x011B4494, 10, "GNET::GetFactionCrossInfo");
	SetCnet(0x011B44C0, 10, "GNET::GetFactionCrossBriefInfo");
	SetCnet(0x011B44EC, 10, "GNET::FactionCrossBattleAgainst");
	SetCnet(0x011B4518, 10, "GNET::FactionCrossBattleDeclare");
	SetCnet(0x011B4544, 10, "GNET::FactionCrossBattleRegister");
	SetCnet(0x011B45C8, 3, "GNET::STLContainer<std::vector<GNET::FactionDivideHouseItemGetData,std::allocator<GNET::FactionDivideHouseItemGetData> > >");
	SetCnet(0x011B45D8, 3, "GNET::STLContainer<std::vector<GNET::FactionDivideHouseLeftItemGetData,std::allocator<GNET::FactionDivideHouseLeftItemGetData> > >");
	SetCnet(0x011B45E8, 3, "GNET::STLContainer<std::vector<GNET::FactionOpDivideNewPageData,std::allocator<GNET::FactionOpDivideNewPageData> > >");
	SetCnet(0x011B4814, 5, "CECServantMediator");
	SetCnet(0x011B4890, 8, "CECRenderModel");
	SetCnet(0x011B48B4, 2, "CECComputeServantMoveParamFunction");
	SetCnet(0x011B48C0, 2, "CECGeneralComputeServantMoveParamFunction");
	SetCnet(0x011B4C64, 5, "CECSetPasswordMediator");
	SetCnet(0x011B4C7C, 12, "A3DGFXKeyPointCtrlBase");
	SetCnet(0x011B4CB0, 12, "A3DGFXCtrlNoiseBase");
	SetCnet(0x011B4CE4, 5, "CECShakeCameraBase");
	SetCnet(0x011B4CFC, 5, "CECShakeCamera");
	SetCnet(0x011B4D14, 5, "CECShakeCamera2");
	SetCnet(0x011B4D54, 1, "CECShopBaseChange");
	SetCnet(0x011B4D5C, 1, "CECObservable<CECShopBase>");
	SetCnet(0x011B4D64, 14, "CECShopArrayItems");
	SetCnet(0x011B4DA0, 14, "CECQShop");
	SetCnet(0x011B4DDC, 14, "CECBackShop");
	SetCnet(0x011B4E18, 14, "CECVipScoreShop");
	SetCnet(0x011B4E5C, 1, "CECShoppingCartChange");
	SetCnet(0x011B4E64, 1, "CECObservable<CECShoppingCart>");
	SetCnet(0x011B4E6C, 1, "CECShoppingCart");
	SetCnet(0x011B4E74, 4, "CECShoppingCart");
	SetCnet(0x011B4F1C, 1, "CECShoppingControllerChange");
	SetCnet(0x011B4F24, 9, "CECShoppingControllerState");
	SetCnet(0x011B4F54, 9, "SCStateNoShoppingCart");
	SetCnet(0x011B4F94, 9, "SCStateIdle");
	SetCnet(0x011B4FC8, 9, "SCStateToSendBuyCommand");
	SetCnet(0x011B5008, 9, "SCStateWaitingFeedback");
	SetCnet(0x011B5048, 1, "CECObservable<CECShoppingController>");
	SetCnet(0x011B5050, 1, "CECShoppingController");
	SetCnet(0x011B5058, 4, "CECShoppingController");
	SetCnet(0x011B50D4, 3, "CECShopSearchTaskPolicy");
	SetCnet(0x011B510C, 6, "CECShortcut");
	SetCnet(0x011B5128, 6, "CECSCSkill");
	SetCnet(0x011B5144, 6, "CECSCSpecialSkill");
	SetCnet(0x011B5160, 6, "CECSCItem");
	SetCnet(0x011B517C, 6, "CECSCFlyItem");
	SetCnet(0x011B5198, 6, "CECSCCommand");
	SetCnet(0x011B51B4, 6, "CECSCSkillGrp");
	SetCnet(0x011B51D0, 6, "CECSCPet");
	SetCnet(0x011B51EC, 6, "CECSCAutoFashion");
	SetCnet(0x011B5208, 6, "CECSCSysModule");
	SetCnet(0x011B52D4, 1, "APtrArray<CECShortcut *>");
	SetCnet(0x011B52DC, 1, "CECShortcutSet");
	SetCnet(0x011B5500, 5, "CECSimulatorHelpMediator");
	SetCnet(0x011B5530, 5, "CECSimulatorMediator");
	SetCnet(0x011B5548, 1, "CECSkill");
	SetCnet(0x011B5550, 1, "CECSkillStr");
	SetCnet(0x011B55FC, 5, "CECSlideSkillMediator");
	SetCnet(0x011B570C, 5, "CECState<CECSoloTowerChallenge>");
	SetCnet(0x011B5724, 7, "CECSoloTowerChallengeStateIdle");
	SetCnet(0x011B5764, 7, "CECSoloTowerChallengeStateChallenging");
	SetCnet(0x011B57AC, 1, "CECStateComponent<CECSoloTowerChallenge>");
	SetCnet(0x011B582C, 5, "CECState<CECSoloTowerChallengeAwardMediator>");
	SetCnet(0x011B5844, 9, "CECSoloTowerChallengeUIStateShowPoker");
	SetCnet(0x011B586C, 9, "CECSoloTowerChallengeUIStateWait");
	SetCnet(0x011B5894, 9, "CECSoloTowerChallengeUIStateAward");
	SetCnet(0x011B58BC, 9, "CECSoloTowerChallengeUIStateNotShow");
	SetCnet(0x011B58E4, 1, "CECStateComponent<CECSoloTowerChallengeAwardMediator>");
	SetCnet(0x011B58EC, 5, "CECSoloTowerChallengeAwardMediator");
	SetCnet(0x011B5904, 5, "CECSoloTowerChallengeConfirmMediator");
	SetCnet(0x011B591C, 5, "CECSoloTowerChallengeRankMediator");
	SetCnet(0x011B5934, 5, "CECSoloTowerChallengeScoreCostMediator");
	SetCnet(0x011B59BC, 5, "CECState<CECSoloTowerChallengeSelectLayerMediator>");
	SetCnet(0x011B59D4, 14, "CECSoloTowerChallengeSelectLayerStateIdle");
	SetCnet(0x011B5A3C, 14, "CECSoloTowerChallengeSelectLayerStateGreetingNPC");
	SetCnet(0x011B5AAC, 14, "CECSoloTowerChallengeSelectLayerStateSelectingLayer");
	SetCnet(0x011B5B1C, 1, "CECStateComponent<CECSoloTowerChallengeSelectLayerMediator>");
	SetCnet(0x011B5B24, 5, "CECSoloTowerChallengeSelectLayerMediator");
	SetCnet(0x011B5B3C, 4, "CECSoloTowerChallengeSelectLayerMediator");
	SetCnet(0x011B5B50, 2, "`private: CECSceneNPCID __thiscall CECSoloTowerChallengeSelectLayerMediator::FindSelectLayerNPC(0xvoid)const '::`2'::SceneServiceNPCFinder");
	SetCnet(0x011B5B5C, 5, "CECSoloTowerChallengeStateMediator");
	SetCnet(0x011B5BF0, 4, "AMSoundFileCache");
	SetCnet(0x011B5C04, 1, "APtrList<CECSoundCache::FILECACHEITEM *>");
	SetCnet(0x011B5C0C, 5, "CECSoundCache");
	SetCnet(0x011B5C94, 5, "CECSpouseEnterHomeMediator");
	SetCnet(0x011B5CAC, 5, "CECSpouseLoveTreeChooseMediator");
	SetCnet(0x011B5CC4, 5, "CECSpouseLoveTreeMediator");
	SetCnet(0x011B5CDC, 5, "CECSpouseParadeBookMediator");
	SetCnet(0x011B5F94, 2, "SpringFesTaskTrigger");
	SetCnet(0x011B5FA0, 5, "CECSpringFestival2021Mediator");
	SetCnet(0x011B5FD4, 1, "CECSprite");
	SetCnet(0x011B6168, 5, "CECStatueActionSelectMediator");
	SetCnet(0x011B6184, 5, "CECStatuePlayerPropertyMediator");
	SetCnet(0x011B64C0, 3, "CECStopNPCVoiceMediator::CECStopNPCVoiceBtnTimer");
	SetCnet(0x011B64D0, 5, "CECStopNPCVoiceMediator");
	SetCnet(0x011B6574, 5, "CECStoryBookMediator");
	SetCnet(0x011B6654, 1, "CECStringTab");
	SetCnet(0x011B66F8, 4, "CECStubbornNetSender");
	SetCnet(0x011B670C, 4, "CECStubbornFactionInfoSender");
	SetCnet(0x011B6720, 4, "CECStubbornFactionInfoSender");
	SetCnet(0x011B6734, 5, "CECSummerActivityMediator2021");
	SetCnet(0x011B6814, 5, "CECTaskMiniGameMediator");
	SetCnet(0x011B689C, 1, "CECTeamMember");
	SetCnet(0x011B68A4, 1, "APtrArray<CECTeamMember *>");
	SetCnet(0x011B68AC, 1, "CECTeam");
	SetCnet(0x011B692C, 1, "CECTeamMan");
	SetCnet(0x011B694C, 3, "CECTimer");
	SetCnet(0x011B6960, 1, "CECTitleData");
	SetCnet(0x011B6968, 5, "CECTransmitMapsMediator");
	SetCnet(0x011B6980, 5, "CECTransmitMapsTool01Mediator");
	SetCnet(0x011B828C, 2, "MsgDataBase");
	SetCnet(0x011B8298, 2, "MsgDataAutoMove");
	SetCnet(0x011B84F0, 3, "`CECTimer * __cdecl CECUIHelper::DelayShowDialog(0xAUIDialog *,bool,int)'::`2'::ShowDlgTimer");
	SetCnet(0x011B857C, 2, "CECUIManager");
	SetCnet(0x011B8588, 11, "CECScriptManInGame");
	SetCnet(0x011B85B8, 6, "std::collate<wchar_t>");
	SetCnet(0x011B85D4, 1, "std::_Node_base");
	SetCnet(0x011B85DC, 1, "std::_Root_node");
	SetCnet(0x011B85E4, 1, "std::_Node_end_group");
	SetCnet(0x011B85EC, 1, "std::_Node_assert");
	SetCnet(0x011B85F4, 1, "std::_Node_capture");
	SetCnet(0x011B85FC, 1, "std::_Node_back");
	SetCnet(0x011B8604, 1, "std::_Node_endif");
	SetCnet(0x011B860C, 1, "std::_Node_if");
	SetCnet(0x011B8614, 1, "std::_Node_end_rep");
	SetCnet(0x011B861C, 1, "std::_Node_rep");
	SetCnet(0x011B8774, 1, "std::_Node_str<wchar_t>");
	SetCnet(0x011B877C, 1, "std::_Node_class<wchar_t,std::regex_traits<wchar_t> >");
	SetCnet(0x011B8950, 3, "CECUseUniversalTokenCommand");
	SetCnet(0x011B8960, 3, "CECUniversalTokenVisitHTTPCommand");
	SetCnet(0x011B8970, 2, "CECUniversalTokenHTTPOSNavigatorTicketHandler");
	SetCnet(0x011B8998, 5, "CECUniversalTokenHTTPOSNavigator");
	SetCnet(0x011B8A68, 2, "CECUseUniversalTokenCommandManager");
	SetCnet(0x011B8E58, 5, "CECVipHelpMediator");
	SetCnet(0x011B8E80, 5, "CECVirtualStorageMediator");
	SetCnet(0x011B8EB4, 5, "CECVoteMediator");
	SetCnet(0x011B8F94, 5, "CECWildernessSurvivalMediator");
	SetCnet(0x011B914C, 1, "AArray<A3DFrustum::PLANE,A3DFrustum::PLANE &>");
	SetCnet(0x011B9154, 1, "A3DFrustum");
	SetCnet(0x011B915C, 1, "CECWorld");
	SetCnet(0x011B99F8, 2, "CECWorldMapEventMgr");
	SetCnet(0x011B9A40, 5, "CECWorldMapMediator");
	SetCnet(0x011B9A5C, 20, "CECWorldRuleBase");
	SetCnet(0x011B9AB0, 20, "CECWorldRuleWildernessSurvival");
	SetCnet(0x011BB4DC, 7, "CParamImpBase<bool>");
	SetCnet(0x011BB4FC, 7, "CParamImp<bool>");
	SetCnet(0x011BB51C, 7, "CParamImpBase<int>");
	SetCnet(0x011BB53C, 7, "CParamImp<int>");
	SetCnet(0x011BB55C, 7, "CParamImpBase<unsigned int>");
	SetCnet(0x011BB57C, 7, "CParamImp<unsigned int>");
	SetCnet(0x011BB59C, 7, "CParamImpBase<short>");
	SetCnet(0x011BB5BC, 7, "CParamImp<short>");
	SetCnet(0x011BB5DC, 7, "CParamImpBase<AWString>");
	SetCnet(0x011BB5FC, 7, "CParamImp<AWString>");
	SetCnet(0x011BB61C, 6, "CGMCommand");
	SetCnet(0x011BB638, 6, "CGMCommandKickOutRole");
	SetCnet(0x011BB654, 6, "CGMCommandKickOutUser");
	SetCnet(0x011BB670, 6, "CGMCommandShowOnlineNum");
	SetCnet(0x011BB68C, 6, "CGMCommandRestartServer");
	SetCnet(0x011BB6A8, 6, "CGMCommandShutupRole");
	SetCnet(0x011BB6C4, 6, "CGMCommandShutupUser");
	SetCnet(0x011BB6E0, 6, "CGMCommandMoveToPlayer");
	SetCnet(0x011BB6FC, 6, "CGMCommandCallInPlayer");
	SetCnet(0x011BB718, 6, "CGMCommandBroadcast");
	SetCnet(0x011BB734, 6, "CGMCommandToggleID");
	SetCnet(0x011BB750, 6, "CGMCommandForbidRole");
	SetCnet(0x011BB76C, 6, "CGMCommandTriggerChat");
	SetCnet(0x011BB788, 6, "CGMCommandGenerate");
	SetCnet(0x011BB7A4, 7, "CGMCommandControlSpawnerBase");
	SetCnet(0x011BB7C4, 7, "CGMCommandActiveSpawner");
	SetCnet(0x011BB7E4, 7, "CGMCommandDeactiveSpawner");
	SetCnet(0x011BB804, 6, "CGMCommandGenerateMob");
	SetCnet(0x011BB820, 6, "CGMCommandInvisible");
	SetCnet(0x011BB83C, 6, "CGMCommandInvincible");
	SetCnet(0x011BB858, 6, "CGMCommandQuerySpecItem");
	SetCnet(0x011BB874, 6, "CGMCommandPermanentLock");
	SetCnet(0x011BB890, 6, "CGMCommandUnLock");
	SetCnet(0x011BB8AC, 6, "CGMCommandOpenActivity");
	SetCnet(0x011BB8C8, 6, "CGMCommandCloseActivity");
	SetCnet(0x011BB8E4, 6, "CGMCommandChangeDS");
	SetCnet(0x011BB900, 6, "CGMCommandGetCommonValue");
	SetCnet(0x011BB91C, 6, "CGMCommandQueryUniqueData");
	SetCnet(0x011BB938, 6, "CGMCommandOpenWar");
	SetCnet(0x011BB954, 6, "CGMCommandViewWar");
	SetCnet(0x011BBEDC, 6, "overlay::GTOverlay");
	SetCnet(0x011BC114, 1, "AArray<POINT_FLOAT,POINT_FLOAT &>");
	SetCnet(0x011BC11C, 2, "CClosedArea");
	SetCnet(0x011BC4D0, 2, "std::runtime_error");
	SetCnet(0x011BC77C, 5, "Json::ValueAllocator");
	SetCnet(0x011BC794, 5, "Json::DefaultValueAllocator");
	SetCnet(0x011BCAC4, 7, "GNET::Random");
	SetCnet(0x011BCAE4, 7, "GNET::HMAC_MD5Hash");
	SetCnet(0x011BCB04, 10, "GNET::Response");
	SetCnet(0x011BCB30, 10, "GNET::SelectRole");
	SetCnet(0x011BCB5C, 10, "GNET::DeleteRole");
	SetCnet(0x011BCB88, 10, "GNET::UndoDeleteRole");
	SetCnet(0x011BCBB4, 10, "GNET::EnterWorld");
	SetCnet(0x011BCBE0, 10, "GNET::GamedataSend");
	SetCnet(0x011BCC0C, 10, "GNET::RoleList");
	SetCnet(0x011BCC38, 10, "GNET::CreateRole");
	SetCnet(0x011BCC64, 10, "GNET::PublicChat");
	SetCnet(0x011BCC90, 10, "GNET::PlayerBaseInfo");
	SetCnet(0x011BCCBC, 10, "GNET::PrivateChat");
	SetCnet(0x011BCD0C, 10, "GNET::SetCustomData");
	SetCnet(0x011BCD38, 10, "GNET::SetUIConfig");
	SetCnet(0x011BCD64, 10, "GNET::GetUIConfig");
	SetCnet(0x011BCD90, 10, "GNET::GetCustomData");
	SetCnet(0x011BCDBC, 10, "GNET::GetPlayerIDByName");
	SetCnet(0x011BCDE8, 10, "GNET::Report2GM");
	SetCnet(0x011BCE14, 10, "GNET::Complain2GM");
	SetCnet(0x011BCE58, 1, "APtrArray<GNET::Protocol *>");
	SetCnet(0x011BCE60, 1, "APtrArray<CECGameSession::PINGTIME *>");
	SetCnet(0x011BCE68, 1, "APtrArray<CECStubbornNetSender *>");
	SetCnet(0x011BCE70, 1, "CECGameSession");
	SetCnet(0x011BCFA4, 10, "GNET::GetFactionBaseInfo");
	SetCnet(0x011BCFD0, 10, "GNET::GetHelpStates");
	SetCnet(0x011BCFFC, 10, "GNET::SetHelpStates");
	SetCnet(0x011BD028, 10, "GNET::GMGetPlayerConsumeInfo");
	SetCnet(0x011BD054, 10, "GNET::ACAnswer");
	SetCnet(0x011BD080, 10, "GNET::ReportChat");
	SetCnet(0x011BD0AC, 10, "GNET::PlayerAccuse");
	SetCnet(0x011BD0D8, 10, "GNET::PlayerSendMassMail");
	SetCnet(0x011BD104, 10, "GNET::CancelWaitQueue");
	SetCnet(0x011BD130, 10, "GNET::BroadCastPrivateChat");
	SetCnet(0x011BD15C, 10, "GNET::HomeBattleScoreTopListQuery");
	SetCnet(0x011BD188, 10, "GNET::FactionAllianceChat");
	SetCnet(0x011BD1B4, 10, "GNET::EffigyQuery");
	SetCnet(0x011BD1E0, 10, "GNET::ArenaPlayerTotalInfoQuery");
	SetCnet(0x011BD20C, 10, "GNET::FactionFieldBattleCombatInfoQuery");
	SetCnet(0x011BD238, 10, "GNET::FactionFieldBattleCombatInfoQuery2");
	SetCnet(0x011BD264, 10, "GNET::FactionFieldBattleIDQuery");
	SetCnet(0x011BD290, 10, "GNET::DShow_SendGift_Notify");
	SetCnet(0x011BD2BC, 10, "GNET::SystemMonitorLog");
	SetCnet(0x011BD2E8, 6, "GNET::LDTeamInfo");
	SetCnet(0x011BD304, 6, "GNET::LDDomainInfo");
	SetCnet(0x011BD320, 10, "GNET::LDBattleListOperate");
	SetCnet(0x011BD34C, 10, "GNET::ClientGetBattleInfo");
	SetCnet(0x011BD378, 10, "GNET::MNBattleListRequest");
	SetCnet(0x011BD3A4, 10, "GNET::ApprenticeLeave");
	SetCnet(0x011BD3D0, 10, "GNET::MasterApprenticeQuery");
	SetCnet(0x011BD3FC, 10, "GNET::MasterApprenticeOnlineQuery");
	SetCnet(0x011BD428, 10, "GNET::MasterKickoutApprentice");
	SetCnet(0x011BD454, 10, "GNET::MasterApprenticeRecruitQuery");
	SetCnet(0x011BD480, 10, "GNET::MasterApprenticeSelfRecruitApplyQuery");
	SetCnet(0x011BD4AC, 10, "GNET::ApprenticeCancelLeave");
	SetCnet(0x011BD4D8, 10, "GNET::MasterCancelKickoutApprentice");
	SetCnet(0x011BD504, 10, "GNET::MasterApprenticeTopListQuery");
	SetCnet(0x011BD530, 10, "GNET::ApprenticeHistoryQuery");
	SetCnet(0x011BD55C, 10, "GNET::MasterApprenticeSelfRecruitApplyBriefQuery");
	SetCnet(0x011BD588, 10, "GNET::SpouseDivorceConfirm");
	SetCnet(0x011BD5B4, 10, "GNET::SpouseDivorceCancel");
	SetCnet(0x011BD5E0, 10, "GNET::SpouseSignIn");
	SetCnet(0x011BD60C, 10, "GNET::SpouseLastLoginQuery");
	SetCnet(0x011BD638, 10, "GNET::SpouseQuery");
	SetCnet(0x011BD664, 10, "GNET::GetSavedMsg2");
	SetCnet(0x011BD690, 10, "GNET::LDBattleRoomPrepare");
	SetCnet(0x011BD6BC, 10, "GNET::LDBattleClientOperate");
	SetCnet(0x011BD6E8, 10, "GNET::CrossMatchActCount");
	SetCnet(0x011BE160, 3, "CECItemChatRepeatTimer");
	SetCnet(0x011BE3C8, 3, "GNET::STLContainer<std::vector<GNET::Octets,std::allocator<GNET::Octets> > >");
	SetCnet(0x011BE428, 10, "GNET::TradeStart");
	SetCnet(0x011BE454, 10, "GNET::TradeAddGoods");
	SetCnet(0x011BE480, 10, "GNET::TradeRemoveGoods");
	SetCnet(0x011BE4AC, 10, "GNET::TradeSubmit");
	SetCnet(0x011BE4D8, 10, "GNET::TradeMoveObj");
	SetCnet(0x011BE504, 10, "GNET::TradeConfirm");
	SetCnet(0x011BE530, 10, "GNET::TradeDiscard");
	SetCnet(0x011BE55C, 10, "GNET::AddFriend");
	SetCnet(0x011BE588, 10, "GNET::GetFriends");
	SetCnet(0x011BE5B4, 10, "GNET::SetGroupName");
	SetCnet(0x011BE5E0, 10, "GNET::SetFriendGroup");
	SetCnet(0x011BE60C, 10, "GNET::DelFriend");
	SetCnet(0x011BE638, 10, "GNET::GetSavedMsg");
	SetCnet(0x011BE664, 10, "GNET::SendAUMail");
	SetCnet(0x011BE690, 10, "GNET::AddFriendRemarks");
	SetCnet(0x011BE6BC, 10, "GNET::GMKickoutRole");
	SetCnet(0x011BE6E8, 10, "GNET::GMKickoutUser");
	SetCnet(0x011BE714, 10, "GNET::GMListOnlineUser");
	SetCnet(0x011BE740, 10, "GNET::GMOnlineNum");
	SetCnet(0x011BE76C, 10, "GNET::GMRestartServer");
	SetCnet(0x011BE798, 10, "GNET::GMShutup");
	SetCnet(0x011BE7C4, 10, "GNET::GMShutupRole");
	SetCnet(0x011BE7F0, 10, "GNET::GMForbidRole");
	SetCnet(0x011BE81C, 10, "GNET::GMToggleChat");
	SetCnet(0x011BE848, 10, "GNET::FactionChat");
	SetCnet(0x011BE874, 10, "GNET::FactionAcceptJoin");
	SetCnet(0x011BE8A0, 10, "GNET::FactionOPRequest");
	SetCnet(0x011BE8CC, 10, "GNET::GetPlayerFactionInfo");
	SetCnet(0x011BE8F8, 6, "GNET::FactionStoreHouseExchangeItemData");
	SetCnet(0x011BE914, 6, "GNET::RpcDataVector<GNET::FactionStoreHouseExchangeItemData>");
	SetCnet(0x011BE930, 10, "GNET::AutolockSet");
	SetCnet(0x011BE95C, 10, "GNET::GMSetTimelessAutoLock");
	SetCnet(0x011BE988, 10, "GNET::ChatRoomCreate");
	SetCnet(0x011BE9B4, 10, "GNET::ChatRoomExpel");
	SetCnet(0x011BE9E0, 10, "GNET::ChatRoomInvite");
	SetCnet(0x011BEA0C, 10, "GNET::ChatRoomInvite_Re");
	SetCnet(0x011BEA38, 10, "GNET::ChatRoomJoin");
	SetCnet(0x011BEA64, 10, "GNET::ChatRoomLeave");
	SetCnet(0x011BEA90, 10, "GNET::ChatRoomList");
	SetCnet(0x011BEABC, 10, "GNET::ChatRoomSpeak");
	SetCnet(0x011BEAE8, 10, "GNET::CheckNewMail");
	SetCnet(0x011BEB14, 10, "GNET::GetMail");
	SetCnet(0x011BEB40, 10, "GNET::GetMailList");
	SetCnet(0x011BEB6C, 10, "GNET::PlayerSendMail");
	SetCnet(0x011BEB98, 10, "GNET::GetMailAttachObj");
	SetCnet(0x011BEBC4, 10, "GNET::PreserveMail");
	SetCnet(0x011BEBF0, 10, "GNET::DeleteMail");
	SetCnet(0x011BEC1C, 10, "GNET::AuctionAttendList");
	SetCnet(0x011BEC48, 10, "GNET::AuctionBid");
	SetCnet(0x011BEC74, 10, "GNET::AuctionClose");
	SetCnet(0x011BECA0, 10, "GNET::AuctionGet");
	SetCnet(0x011BECCC, 10, "GNET::AuctionList");
	SetCnet(0x011BECF8, 10, "GNET::AuctionOpen");
	SetCnet(0x011BED24, 10, "GNET::AuctionExitBid");
	SetCnet(0x011BED50, 10, "GNET::AuctionGetItem");
	SetCnet(0x011BED7C, 10, "GNET::AuctionListUpdate");
	SetCnet(0x011BEDA8, 10, "GNET::StockAccount");
	SetCnet(0x011BEDD4, 10, "GNET::StockBill");
	SetCnet(0x011BEE00, 10, "GNET::StockCommission");
	SetCnet(0x011BEE2C, 10, "GNET::StockCancel");
	SetCnet(0x011BEE58, 10, "GNET::BattleChallenge");
	SetCnet(0x011BEE84, 10, "GNET::BattleChallengeMap");
	SetCnet(0x011BEEB0, 10, "GNET::BattleGetMap");
	SetCnet(0x011BEEDC, 10, "GNET::BattleEnter");
	SetCnet(0x011BEF08, 10, "GNET::BattleStatus");
	SetCnet(0x011BEF34, 10, "GNET::GetSellList");
	SetCnet(0x011BEF60, 10, "GNET::FindSellPointInfo");
	SetCnet(0x011BEF8C, 10, "GNET::SellPoint");
	SetCnet(0x011BEFB8, 10, "GNET::SellCancel");
	SetCnet(0x011BEFE4, 10, "GNET::BuyPoint");
	SetCnet(0x011BF010, 10, "GNET::MatrixResponse");
	SetCnet(0x011BF03C, 10, "GNET::CashLock");
	SetCnet(0x011BF068, 10, "GNET::CashPasswordSet");
	SetCnet(0x011BF094, 10, "GNET::RefGetReferenceCode");
	SetCnet(0x011BF0C0, 10, "GNET::RefListReferrals");
	SetCnet(0x011BF0EC, 10, "GNET::RefWithdrawBonus");
	SetCnet(0x011BF118, 10, "GNET::GetRewardList");
	SetCnet(0x011BF144, 10, "GNET::ExchangeConsumePoints");
	SetCnet(0x011BF170, 10, "GNET::UserCoupon");
	SetCnet(0x011BF19C, 10, "GNET::UserCouponExchange");
	SetCnet(0x011BF1C8, 10, "GNET::WebTradeList");
	SetCnet(0x011BF1F4, 10, "GNET::WebTradeAttendList");
	SetCnet(0x011BF220, 10, "GNET::WebTradeGetItem");
	SetCnet(0x011BF24C, 10, "GNET::WebTradeGetDetail");
	SetCnet(0x011BF278, 10, "GNET::WebTradePrePost");
	SetCnet(0x011BF2A4, 10, "GNET::WebTradeRolePrePost");
	SetCnet(0x011BF2D0, 10, "GNET::WebTradePreCancelPost");
	SetCnet(0x011BF2FC, 10, "GNET::WebTradeRolePreCancelPost");
	SetCnet(0x011BF328, 10, "GNET::WebTradeUpdate");
	SetCnet(0x011BF354, 10, "GNET::WebTradeRoleGetDetail");
	SetCnet(0x011BF380, 10, "GNET::SysAuctionAccount");
	SetCnet(0x011BF3AC, 10, "GNET::SysAuctionBid");
	SetCnet(0x011BF3D8, 10, "GNET::SysAuctionCashTransfer");
	SetCnet(0x011BF404, 10, "GNET::SysAuctionGetItem");
	SetCnet(0x011BF430, 10, "GNET::SysAuctionList");
	SetCnet(0x011BF45C, 10, "GNET::CreateFactionFortress");
	SetCnet(0x011BF488, 10, "GNET::FactionFortressBattleList");
	SetCnet(0x011BF4B4, 10, "GNET::FactionFortressChallenge");
	SetCnet(0x011BF4E0, 10, "GNET::FactionFortressEnter");
	SetCnet(0x011BF50C, 10, "GNET::FactionFortressList");
	SetCnet(0x011BF538, 10, "GNET::FactionFortressGet");
	SetCnet(0x011BF564, 10, "GNET::FactionListOnline");
	SetCnet(0x011BF590, 10, "GNET::UserAddCash");
	SetCnet(0x011BF5BC, 6, "GNET::SSOUser");
	SetCnet(0x011BF5D8, 10, "GNET::SSOGetTicket");
	SetCnet(0x011BF604, 10, "GNET::CountryBattleMove");
	SetCnet(0x011BF630, 10, "GNET::CountryBattleGetMap");
	SetCnet(0x011BF65C, 10, "GNET::CountryBattleGetPlayerLocation");
	SetCnet(0x011BF688, 10, "GNET::CountryBattleGetScore");
	SetCnet(0x011BF6B4, 10, "GNET::CountryBattleGetConfig");
	SetCnet(0x011BF6E0, 10, "GNET::CountryBattlePreEnter");
	SetCnet(0x011BF70C, 10, "GNET::CountryBattleReturnCapital");
	SetCnet(0x011BF738, 6, "GNET::GCountryBattleLimit");
	SetCnet(0x011BF754, 10, "GNET::CountryBattleGetBattleLimit");
	SetCnet(0x011BF780, 10, "GNET::CountryBattleGetKingCommandPoint");
	SetCnet(0x011BF7AC, 10, "GNET::CountryBattleKingAssignAssault");
	SetCnet(0x011BF7D8, 10, "GNET::CountryBattleKingResetBattleLimit");
	SetCnet(0x011BF804, 10, "GNET::KECandidateApply");
	SetCnet(0x011BF830, 10, "GNET::KEVoting");
	SetCnet(0x011BF85C, 10, "GNET::KEGetStatus");
	SetCnet(0x011BF888, 10, "GNET::QPAddCash");
	SetCnet(0x011BF8B4, 10, "GNET::QPGetActivatedServices");
	SetCnet(0x011BF8E0, 10, "GNET::PShopActive");
	SetCnet(0x011BF90C, 10, "GNET::PShopBuy");
	SetCnet(0x011BF938, 10, "GNET::PShopCancelGoods");
	SetCnet(0x011BF964, 10, "GNET::PShopClearGoods");
	SetCnet(0x011BF990, 10, "GNET::PShopCreate");
	SetCnet(0x011BF9BC, 10, "GNET::PShopDrawItem");
	SetCnet(0x011BF9E8, 10, "GNET::PShopList");
	SetCnet(0x011BFA14, 10, "GNET::PShopListItem");
	SetCnet(0x011BFA40, 10, "GNET::PShopManageFund");
	SetCnet(0x011BFA6C, 10, "GNET::PShopPlayerBuy");
	SetCnet(0x011BFA98, 10, "GNET::PShopPlayerGet");
	SetCnet(0x011BFAC4, 10, "GNET::PShopPlayerSell");
	SetCnet(0x011BFAF0, 10, "GNET::PShopSelfGet");
	SetCnet(0x011BFB1C, 10, "GNET::PShopSell");
	SetCnet(0x011BFB48, 10, "GNET::PShopSetType");
	SetCnet(0x011BFB74, 10, "GNET::PlayerProfileGetProfileData");
	SetCnet(0x011BFBA0, 10, "GNET::PlayerProfileGetMatchResult");
	SetCnet(0x011BFBCC, 6, "GNET::PlayerProfileData");
	SetCnet(0x011BFBE8, 10, "GNET::PlayerProfileSetProfileData");
	SetCnet(0x011BFC14, 10, "GNET::TankBattlePlayerGetRank");
	SetCnet(0x011BFC40, 10, "GNET::GetCNetServerConfig");
	SetCnet(0x011BFC6C, 10, "GNET::CollectClientMachineInfo");
	SetCnet(0x011BFC98, 10, "GNET::PlayerRequiteFriend");
	SetCnet(0x011BFCC4, 10, "GNET::MNGetDomainData");
	SetCnet(0x011BFCF0, 10, "GNET::MNGetPlayerLastEnterInfo");
	SetCnet(0x011BFD1C, 10, "GNET::MNGetFactionInfo");
	SetCnet(0x011BFD48, 10, "GNET::MNGetFactionBriefInfo");
	SetCnet(0x011BFD74, 10, "GNET::GetEnemyList");
	SetCnet(0x011BFDA0, 10, "GNET::HomeQuery");
	SetCnet(0x011BFDCC, 10, "GNET::HomeFoundryQuery");
	SetCnet(0x011BFDF8, 10, "GNET::HomeFoundryFactoryProduceRequest");
	SetCnet(0x011BFE24, 10, "GNET::HomeVisitorQuery");
	SetCnet(0x011BFE50, 10, "GNET::HomeBrowseInfoQuery");
	SetCnet(0x011BFE7C, 10, "GNET::LotteryTicketFloorInfoGet");
	SetCnet(0x011BFEA8, 10, "GNET::ArenaQuery");
	SetCnet(0x011BFED4, 10, "GNET::FactionLogRequest");
	SetCnet(0x011BFF00, 10, "GNET::FactionSignalRequest");
	SetCnet(0x011BFF90, 3, "GNET::STLContainer<std::vector<GNET::FactionStoreHouseExchangeItemData,std::allocator<GNET::FactionStoreHouseExchangeItemData> > >");
	SetCnet(0x011BFFA0, 3, "GNET::STLContainer<std::vector<unsigned int,std::allocator<unsigned int> > >");
	SetCnet(0x011BFFB0, 3, "GNET::STLContainer<std::vector<GNET::GCountryBattleLimit,std::allocator<GNET::GCountryBattleLimit> > >");
	SetCnet(0x011BFFC0, 6, "CECReconnectPolicy");
	SetCnet(0x011BFFDC, 6, "CECReconnectSimpleUserPasswordPolicy");
	SetCnet(0x011BFFF8, 7, "CECReconnectUserTokenPolicy");
	SetCnet(0x011C0018, 7, "CECReconnectForeignArcUserTokenPolicy");
	SetCnet(0x011C0038, 16, "CECReconnectState");
	SetCnet(0x011C0084, 16, "CECReconnectStateNone");
	SetCnet(0x011C00DC, 16, "CECReconnectStateCanRequest");
	SetCnet(0x011C013C, 16, "CECReconnectStateRequested");
	SetCnet(0x011C0198, 16, "CECReconnectStateReconnecting");
	SetCnet(0x011C0740, 4, "CECProtocolInt<int>");
	SetCnet(0x011C0754, 4, "CECProtocolInt<short>");
	SetCnet(0x011C0768, 4, "CECProtocolInt<unsigned int>");
	SetCnet(0x011C077C, 4, "CECProtocolInt<char>");
	SetCnet(0x011C07A4, 2, "Thread::Runnable");
	SetCnet(0x011C07B0, 2, "GNET::Timer::Observer");
	SetCnet(0x011C07BC, 5, "GNET::PollIO");
	SetCnet(0x011C07D4, 7, "GNET::SHA256Hash");
	SetCnet(0x011C07F4, 12, "GNET::NetSession");
	SetCnet(0x011C0860, 5, "GNET::NetIO");
	SetCnet(0x011C0878, 5, "GNET::StreamIO");
	SetCnet(0x011C08B8, 5, "GNET::DgramClientIO");
	SetCnet(0x011C091C, 5, "GNET::ActiveIO");
	SetCnet(0x011C0934, 1, "GNET::Protocol::Manager::Session::Stream");
	SetCnet(0x011C093C, 12, "GNET::Protocol::Manager::Session");
	SetCnet(0x011C0970, 11, "GNET::Protocol::Manager");
	SetCnet(0x011C09A0, 2, "GNET::Protocol::Task");
	SetCnet(0x011C0A04, 10, "GNET::KeepAlive");
	SetCnet(0x011C0A30, 11, "GNET::GameClient");
	SetCnet(0x011C0A60, 2, "GNET::GameClient");
	SetCnet(0x011C0B9C, 1, "HIDUSBKEY::CUsbHidKeyFinder");
	SetCnet(0x011C0BC4, 1, "HIDUSBKEY::CUsbHidKey");
	SetCnet(0x011C0C18, 2, "GNET::PollIO::Task");
	SetCnet(0x011C0C24, 5, "GNET::PollControl");
	SetCnet(0x011C0C48, 7, "GNET::NullSecurity");
	SetCnet(0x011C0C68, 7, "GNET::ARCFourSecurity");
	SetCnet(0x011C0C88, 7, "GNET::CompressARCFourSecurity");
	SetCnet(0x011C0CA8, 7, "GNET::DecompressARCFourSecurity");
	SetCnet(0x011C0CC8, 10, "GNET::ProtocolBinder");
	SetCnet(0x011C0CF4, 2, "GNET::Rpc::HouseKeeper");
	SetCnet(0x011C0D00, 10, "GNET::CompressBinder");
	SetCnet(0x011C0EE8, 11, "GNET::QQClient");
	SetCnet(0x011C0F24, 3, "GNET::Rpc::XID");
	SetCnet(0x011C0F34, 14, "GNET::Rpc");
	SetCnet(0x011C0F70, 6, "GNET::IntOctets");
	SetCnet(0x011C0F8C, 6, "GNET::FactionInviteArg");
	SetCnet(0x011C0FA8, 6, "GNET::FactionInviteRes");
	SetCnet(0x011C0FC4, 14, "GNET::FactionInviteJoin");
	SetCnet(0x011C1000, 6, "GNET::AddFriendRqstArg");
	SetCnet(0x011C101C, 6, "GNET::AddFriendRqstRes");
	SetCnet(0x011C1038, 14, "GNET::AddFriendRqst");
	SetCnet(0x011C1074, 6, "GNET::TradeStartRqstArg");
	SetCnet(0x011C1090, 6, "GNET::TradeStartRqstRes");
	SetCnet(0x011C10AC, 14, "GNET::TradeStartRqst");
	SetCnet(0x011C10E8, 10, "GNET::PlayerBaseInfoCRC");
	SetCnet(0x011C1114, 10, "GNET::WaitQueueStateNotify");
	SetCnet(0x011C1140, 10, "GNET::CancelWaitQueue_Re");
	SetCnet(0x011C116C, 6, "GNET::GFactionBaseInfo");
	SetCnet(0x011C1188, 10, "GNET::GetFactionBaseInfo_Re");
	SetCnet(0x011C11B4, 6, "GNET::GUserFaction");
	SetCnet(0x011C11D0, 10, "GNET::GetPlayerFactionInfo_Re");
	SetCnet(0x011C11FC, 10, "GNET::AnnounceNewMail");
	SetCnet(0x011C1228, 10, "GNET::ErrorInfo");
	SetCnet(0x011C1254, 10, "GNET::Challenge");
	SetCnet(0x011C1280, 10, "GNET::KeyExchange");
	SetCnet(0x011C12AC, 6, "GNET::GRoleForbid");
	SetCnet(0x011C12C8, 10, "GNET::AnnounceForbidInfo");
	SetCnet(0x011C12F4, 10, "GNET::OnlineAnnounce");
	SetCnet(0x011C1320, 6, "GNET::RpcDataVector<GNET::RoleInfo>");
	SetCnet(0x011C133C, 10, "GNET::RoleList_Re");
	SetCnet(0x011C1368, 10, "GNET::CreateRole_Re");
	SetCnet(0x011C1394, 10, "GNET::DeleteRole_Re");
	SetCnet(0x011C13C0, 10, "GNET::UndoDeleteRole_Re");
	SetCnet(0x011C13EC, 6, "GNET::RpcDataVector<unsigned char>");
	SetCnet(0x011C1408, 10, "GNET::SelectRole_Re");
	SetCnet(0x011C1434, 10, "GNET::SetCustomData_Re");
	SetCnet(0x011C1460, 10, "GNET::GetCustomData_Re");
	SetCnet(0x011C148C, 6, "GNET::RpcDataVector<GNET::GRoleForbid>");
	SetCnet(0x011C14A8, 6, "GNET::GRoleBase");
	SetCnet(0x011C14C4, 10, "GNET::PlayerBaseInfo_Re");
	SetCnet(0x011C14F0, 10, "GNET::PlayerBaseInfoCRC_Re");
	SetCnet(0x011C151C, 10, "GNET::GetPlayerIDByName_Re");
	SetCnet(0x011C1548, 10, "GNET::SetUIConfig_Re");
	SetCnet(0x011C1574, 10, "GNET::GetUIConfig_Re");
	SetCnet(0x011C15A0, 10, "GNET::SetHelpStates_Re");
	SetCnet(0x011C15CC, 10, "GNET::GetHelpStates_Re");
	SetCnet(0x011C15F8, 6, "GNET::RpcDataVector<GNET::PlayerBriefInfo>");
	SetCnet(0x011C1614, 10, "GNET::GetPlayerBriefInfo_Re");
	SetCnet(0x011C1640, 10, "GNET::StatusAnnounce");
	SetCnet(0x011C166C, 10, "GNET::PlayerLogout");
	SetCnet(0x011C1698, 10, "GNET::ChatMessage");
	SetCnet(0x011C16C4, 10, "GNET::WorldChat");
	SetCnet(0x011C16F0, 10, "GNET::RoleStatusAnnounce");
	SetCnet(0x011C171C, 10, "GNET::FactionOPRequest_Re");
	SetCnet(0x011C1748, 10, "GNET::FactionCreate_Re");
	SetCnet(0x011C1774, 10, "GNET::FactionApplyJoin_Re");
	SetCnet(0x011C17A0, 6, "GNET::FMemberInfo");
	SetCnet(0x011C17BC, 6, "GNET::RpcDataVector<GNET::FMemberInfo>");
	SetCnet(0x011C17D8, 10, "GNET::FactionListMember_Re");
	SetCnet(0x011C1804, 10, "GNET::FactionAcceptJoin_Re");
	SetCnet(0x011C1830, 10, "GNET::FactionExpel_Re");
	SetCnet(0x011C185C, 10, "GNET::FactionBroadcastNotice_Re");
	SetCnet(0x011C1888, 10, "GNET::FactionMasterResign_Re");
	SetCnet(0x011C18B4, 10, "GNET::FactionAppoint_Re");
	SetCnet(0x011C18E0, 10, "GNET::FactionResign_Re");
	SetCnet(0x011C190C, 10, "GNET::FactionChangProclaim_Re");
	SetCnet(0x011C1938, 10, "GNET::FactionLeave_Re");
	SetCnet(0x011C1964, 10, "GNET::FactionDismiss_Re");
	SetCnet(0x011C1990, 10, "GNET::FactionRename_Re");
	SetCnet(0x011C19BC, 10, "GNET::FactionUpgrade_Re");
	SetCnet(0x011C19E8, 10, "GNET::FactionDegrade_Re");
	SetCnet(0x011C1A14, 6, "GNET::GFriendInfo");
	SetCnet(0x011C1A30, 10, "GNET::AddFriend_Re");
	SetCnet(0x011C1A5C, 6, "GNET::GGroupInfo");
	SetCnet(0x011C1A78, 6, "GNET::RpcDataVector<GNET::GGroupInfo>");
	SetCnet(0x011C1A94, 6, "GNET::RpcDataVector<GNET::GFriendInfo>");
	SetCnet(0x011C1AB0, 10, "GNET::GetFriends_Re");
	SetCnet(0x011C1ADC, 10, "GNET::SetGroupName_Re");
	SetCnet(0x011C1B08, 10, "GNET::SetFriendGroup_Re");
	SetCnet(0x011C1B34, 10, "GNET::DelFriend_Re");
	SetCnet(0x011C1B60, 10, "GNET::FriendStatus");
	SetCnet(0x011C1B8C, 6, "GNET::Message");
	SetCnet(0x011C1BA8, 6, "GNET::RpcDataVector<GNET::Message>");
	SetCnet(0x011C1BC4, 10, "GNET::GetSavedMsg_Re");
	SetCnet(0x011C1BF0, 10, "GNET::ChatRoomCreate_Re");
	SetCnet(0x011C1C1C, 10, "GNET::ChatRoomJoin_Re");
	SetCnet(0x011C1C48, 6, "GNET::RpcDataVector<GNET::GChatRoom>");
	SetCnet(0x011C1C64, 10, "GNET::ChatRoomList_Re");
	SetCnet(0x011C1C90, 10, "GNET::TradeStart_Re");
	SetCnet(0x011C1CBC, 10, "GNET::TradeAddGoods_Re");
	SetCnet(0x011C1CE8, 10, "GNET::TradeRemoveGoods_Re");
	SetCnet(0x011C1D14, 10, "GNET::TradeSubmit_Re");
	SetCnet(0x011C1D40, 10, "GNET::TradeMoveObj_Re");
	SetCnet(0x011C1D6C, 10, "GNET::TradeConfirm_Re");
	SetCnet(0x011C1D98, 10, "GNET::TradeDiscard_Re");
	SetCnet(0x011C1DC4, 10, "GNET::TradeEnd");
	SetCnet(0x011C1DF0, 10, "GNET::GMOnlineNum_Re");
	SetCnet(0x011C1E1C, 6, "GNET::GMPlayerInfo");
	SetCnet(0x011C1E38, 6, "GNET::RpcDataVector<GNET::GMPlayerInfo>");
	SetCnet(0x011C1E54, 10, "GNET::GMListOnlineUser_Re");
	SetCnet(0x011C1E80, 10, "GNET::GMKickoutUser_Re");
	SetCnet(0x011C1EAC, 10, "GNET::GMKickoutRole_Re");
	SetCnet(0x011C1ED8, 10, "GNET::GMShutup_Re");
	SetCnet(0x011C1F04, 10, "GNET::GMShutupRole_Re");
	SetCnet(0x011C1F30, 10, "GNET::GMToggleChat_Re");
	SetCnet(0x011C1F5C, 10, "GNET::GMRestartServer_Re");
	SetCnet(0x011C1F88, 10, "GNET::GMForbidRole_Re");
	SetCnet(0x011C1FB4, 10, "GNET::Report2GM_Re");
	SetCnet(0x011C1FE0, 10, "GNET::Complain2GM_Re");
	SetCnet(0x011C200C, 10, "GNET::QueryUserPrivilege_Re");
	SetCnet(0x011C2038, 6, "GNET::RpcDataVector<GNET::Octets>");
	SetCnet(0x011C2054, 10, "GNET::ACRemoteCode");
	SetCnet(0x011C2080, 10, "GNET::GetMailList_Re");
	SetCnet(0x011C20AC, 10, "GNET::GetMail_Re");
	SetCnet(0x011C20D8, 10, "GNET::GetMailAttachObj_Re");
	SetCnet(0x011C2104, 10, "GNET::DeleteMail_Re");
	SetCnet(0x011C2130, 10, "GNET::PreserveMail_Re");
	SetCnet(0x011C215C, 10, "GNET::PlayerSendMail_Re");
	SetCnet(0x011C2188, 10, "GNET::AuctionOpen_Re");
	SetCnet(0x011C21B4, 10, "GNET::AuctionBid_Re");
	SetCnet(0x011C21E0, 10, "GNET::AuctionClose_Re");
	SetCnet(0x011C220C, 10, "GNET::AuctionList_Re");
	SetCnet(0x011C2238, 10, "GNET::AuctionGet_Re");
	SetCnet(0x011C2264, 10, "GNET::AuctionAttendList_Re");
	SetCnet(0x011C2290, 10, "GNET::AuctionExitBid_Re");
	SetCnet(0x011C22BC, 10, "GNET::UpdateRemainTime");
	SetCnet(0x011C22E8, 10, "GNET::AuctionGetItem_Re");
	SetCnet(0x011C2314, 6, "GNET::GTerritory");
	SetCnet(0x011C2330, 10, "GNET::BattleGetMap_Re");
	SetCnet(0x011C235C, 10, "GNET::BattleChallenge_Re");
	SetCnet(0x011C2388, 6, "GNET::GBattleChallenge");
	SetCnet(0x011C23A4, 10, "GNET::BattleChallengeMap_Re");
	SetCnet(0x011C23D0, 10, "GNET::BattleEnter_Re");
	SetCnet(0x011C23FC, 10, "GNET::BattleStatus_Re");
	SetCnet(0x011C2428, 6, "GNET::SellPointInfo");
	SetCnet(0x011C2444, 10, "GNET::SellPoint_Re");
	SetCnet(0x011C2470, 10, "GNET::GetSellList_Re");
	SetCnet(0x011C249C, 10, "GNET::FindSellPointInfo_Re");
	SetCnet(0x011C24C8, 10, "GNET::AnnounceSellResult");
	SetCnet(0x011C24F4, 10, "GNET::SellCancel_Re");
	SetCnet(0x011C2520, 10, "GNET::BuyPoint_Re");
	SetCnet(0x011C254C, 6, "GNET::StockPrice");
	SetCnet(0x011C2568, 10, "GNET::StockCommission_Re");
	SetCnet(0x011C2594, 10, "GNET::StockAccount_Re");
	SetCnet(0x011C25C0, 10, "GNET::StockTransaction_Re");
	SetCnet(0x011C25EC, 1, "GNET::StockOrder");
	SetCnet(0x011C2608, 6, "GNET::StockLog");
	SetCnet(0x011C2624, 10, "GNET::StockBill_Re");
	SetCnet(0x011C2650, 10, "GNET::StockCancel_Re");
	SetCnet(0x011C267C, 10, "GNET::CashLock_Re");
	SetCnet(0x011C26A8, 10, "GNET::CashPasswordSet_Re");
	SetCnet(0x011C26D4, 10, "GNET::MatrixChallenge");
	SetCnet(0x011C2700, 10, "GNET::ACQuestion");
	SetCnet(0x011C272C, 10, "GNET::AutolockSet_Re");
	SetCnet(0x011C2758, 10, "GNET::AuctionListUpdate_Re");
	SetCnet(0x011C2784, 10, "GNET::RefWithdrawBonus_Re");
	SetCnet(0x011C27B0, 6, "GNET::ReferralBrief");
	SetCnet(0x011C27CC, 10, "GNET::RefListReferrals_Re");
	SetCnet(0x011C27F8, 10, "GNET::RefGetReferenceCode_Re");
	SetCnet(0x011C2824, 6, "GNET::RewardItem");
	SetCnet(0x011C2840, 6, "GNET::RpcDataVector<GNET::RewardItem>");
	SetCnet(0x011C285C, 10, "GNET::GetRewardList_Re");
	SetCnet(0x011C2888, 10, "GNET::ExchangeConsumePoints_Re");
	SetCnet(0x011C28B4, 10, "GNET::RewardMatureNotice");
	SetCnet(0x011C28E0, 6, "GNET::GWebTradeItem");
	SetCnet(0x011C28FC, 10, "GNET::WebTradePrePost_Re");
	SetCnet(0x011C2928, 10, "GNET::WebTradePreCancelPost_Re");
	SetCnet(0x011C2954, 10, "GNET::WebTradeList_Re");
	SetCnet(0x011C2980, 10, "GNET::WebTradeGetItem_Re");
	SetCnet(0x011C29AC, 10, "GNET::WebTradeAttendList_Re");
	SetCnet(0x011C29D8, 6, "GNET::GWebTradeDetail");
	SetCnet(0x011C29F4, 10, "GNET::WebTradeGetDetail_Re");
	SetCnet(0x011C2A20, 10, "GNET::WebTradeUpdate_Re");
	SetCnet(0x011C2A4C, 1, "GNET::GSysAuctionItem");
	SetCnet(0x011C2A68, 10, "GNET::SysAuctionList_Re");
	SetCnet(0x011C2A94, 10, "GNET::SysAuctionGetItem_Re");
	SetCnet(0x011C2AC0, 10, "GNET::SysAuctionAccount_Re");
	SetCnet(0x011C2AEC, 10, "GNET::SysAuctionBid_Re");
	SetCnet(0x011C2B18, 10, "GNET::SysAuctionCashTransfer_Re");
	SetCnet(0x011C2B44, 6, "GNET::GFactionFortressBriefInfo");
	SetCnet(0x011C2B60, 10, "GNET::CreateFactionFortress_Re");
	SetCnet(0x011C2B8C, 10, "GNET::FactionFortressList_Re");
	SetCnet(0x011C2BB8, 10, "GNET::FactionFortressChallenge_Re");
	SetCnet(0x011C2BE4, 6, "GNET::GFactionFortressBattleInfo");
	SetCnet(0x011C2C00, 10, "GNET::FactionFortressBattleList_Re");
	SetCnet(0x011C2C2C, 10, "GNET::FactionFortressGet_Re");
	SetCnet(0x011C2C58, 10, "GNET::FactionAllianceApply_Re");
	SetCnet(0x011C2C84, 10, "GNET::FactionAllianceReply_Re");
	SetCnet(0x011C2CB0, 10, "GNET::FactionHostileApply_Re");
	SetCnet(0x011C2CDC, 10, "GNET::FactionHostileReply_Re");
	SetCnet(0x011C2D08, 10, "GNET::FactionRemoveRelationApply_Re");
	SetCnet(0x011C2D34, 10, "GNET::FactionRemoveRelationReply_Re");
	SetCnet(0x011C2D60, 6, "GNET::GFactionAlliance");
	SetCnet(0x011C2D7C, 6, "GNET::GFactionHostile");
	SetCnet(0x011C2D98, 6, "GNET::RpcDataVector<GNET::GFactionAlliance>");
	SetCnet(0x011C2DB4, 6, "GNET::RpcDataVector<GNET::GFactionHostile>");
	SetCnet(0x011C2DD0, 6, "GNET::RpcDataVector<GNET::GFactionRelationApply>");
	SetCnet(0x011C2DEC, 10, "GNET::FactionListRelation_Re");
	SetCnet(0x011C2E18, 10, "GNET::FactionRelationRecvApply");
	SetCnet(0x011C2E44, 10, "GNET::FactionRelationRecvReply");
	SetCnet(0x011C2E70, 10, "GNET::FactionListOnline_Re");
	SetCnet(0x011C2E9C, 10, "GNET::FactionRenameAnnounce");
	SetCnet(0x011C2EC8, 10, "GNET::UserCoupon_Re");
	SetCnet(0x011C2EF4, 10, "GNET::UserCouponExchange_Re");
	SetCnet(0x011C2F20, 10, "GNET::AccountLoginRecord");
	SetCnet(0x011C2F4C, 10, "GNET::UserAddCash_Re");
	SetCnet(0x011C2F78, 6, "GNET::GFriendExtInfo");
	SetCnet(0x011C2F94, 6, "GNET::GSendAUMailRecord");
	SetCnet(0x011C2FB0, 6, "GNET::RpcDataVector<GNET::GFriendExtInfo>");
	SetCnet(0x011C2FCC, 6, "GNET::RpcDataVector<GNET::GSendAUMailRecord>");
	SetCnet(0x011C2FE8, 10, "GNET::FriendExtList");
	SetCnet(0x011C3014, 10, "GNET::SendAUMail_Re");
	SetCnet(0x011C3040, 6, "GNET::PlayerConsumeInfo");
	SetCnet(0x011C305C, 6, "GNET::RpcDataVector<GNET::PlayerConsumeInfo>");
	SetCnet(0x011C3078, 10, "GNET::GMGetPlayerConsumeInfo_Re");
	SetCnet(0x011C30A4, 10, "GNET::SSOGetTicket_Re");
	SetCnet(0x011C30D0, 10, "GNET::CountryBattleMove_Re");
	SetCnet(0x011C30FC, 10, "GNET::CountryBattleSyncPlayerLocation");
	SetCnet(0x011C3128, 6, "GNET::GCountryBattleDomain");
	SetCnet(0x011C3144, 10, "GNET::CountryBattleGetMap_Re");
	SetCnet(0x011C3170, 10, "GNET::CountryBattleGetScore_Re");
	SetCnet(0x011C319C, 10, "GNET::CountryBattleGetConfig_Re");
	SetCnet(0x011C31C8, 10, "GNET::CountryBattlePreEnterNotify");
	SetCnet(0x011C31F4, 10, "GNET::CountryBattleResult");
	SetCnet(0x011C3220, 10, "GNET::CountryBattleSingleBattleResult");
	SetCnet(0x011C324C, 10, "GNET::CountryBattleKingAssignAssault_Re");
	SetCnet(0x011C3278, 10, "GNET::CountryBattleGetBattleLimit_Re");
	SetCnet(0x011C32A4, 10, "GNET::CountryBattleGetKingCommandPoint_Re");
	SetCnet(0x011C32D0, 6, "GNET::QPDiscountLevel");
	SetCnet(0x011C32EC, 6, "GNET::RpcDataVector<GNET::QPDiscountLevel>");
	SetCnet(0x011C3308, 6, "GNET::QPDiscountInfo");
	SetCnet(0x011C3324, 6, "GNET::RpcDataVector<GNET::QPDiscountInfo>");
	SetCnet(0x011C3340, 10, "GNET::QPAnnounceDiscount");
	SetCnet(0x011C336C, 10, "GNET::QPGetActivatedServices_Re");
	SetCnet(0x011C3398, 10, "GNET::QPAddCash_Re");
	SetCnet(0x011C33C4, 6, "GNET::PlayerPositionResetRqstArg");
	SetCnet(0x011C33E0, 6, "GNET::PlayerPositionResetRqstRes");
	SetCnet(0x011C33FC, 14, "GNET::PlayerPositionResetRqst");
	SetCnet(0x011C3438, 10, "GNET::GMSetTimelessAutoLock_Re");
	SetCnet(0x011C3464, 10, "GNET::PlayerChangeDS_Re");
	SetCnet(0x011C3490, 10, "GNET::ChangeDS_Re");
	SetCnet(0x011C34BC, 10, "GNET::PlayerRename_Re");
	SetCnet(0x011C34E8, 10, "GNET::PlayerNameUpdate");
	SetCnet(0x011C3514, 6, "GNET::KEKing");
	SetCnet(0x011C3530, 6, "GNET::KECandidate");
	SetCnet(0x011C354C, 6, "GNET::RpcDataVector<GNET::KECandidate>");
	SetCnet(0x011C3568, 10, "GNET::KEGetStatus_Re");
	SetCnet(0x011C3594, 10, "GNET::KECandidateApply_Re");
	SetCnet(0x011C35C0, 10, "GNET::KEVoting_Re");
	SetCnet(0x011C35EC, 10, "GNET::PlayerGivePresent_Re");
	SetCnet(0x011C3618, 10, "GNET::PlayerAskForPresent_Re");
	SetCnet(0x011C3644, 10, "GNET::FactionDelayExpelAnnounce");
	SetCnet(0x011C3670, 10, "GNET::PShopCreate_Re");
	SetCnet(0x011C369C, 6, "GNET::PShopItem");
	SetCnet(0x011C36B8, 10, "GNET::PShopBuy_Re");
	SetCnet(0x011C36E4, 10, "GNET::PShopSell_Re");
	SetCnet(0x011C3710, 10, "GNET::PShopCancelGoods_Re");
	SetCnet(0x011C373C, 10, "GNET::PShopPlayerBuy_Re");
	SetCnet(0x011C3768, 10, "GNET::PShopPlayerSell_Re");
	SetCnet(0x011C3794, 10, "GNET::PShopSetType_Re");
	SetCnet(0x011C37C0, 10, "GNET::PShopActive_Re");
	SetCnet(0x011C37EC, 10, "GNET::PShopManageFund_Re");
	SetCnet(0x011C3818, 10, "GNET::PShopDrawItem_Re");
	SetCnet(0x011C3844, 6, "GNET::RpcDataVector<GNET::PShopItem>");
	SetCnet(0x011C3860, 10, "GNET::PShopClearGoods_Re");
	SetCnet(0x011C388C, 6, "GNET::PShopDetail");
	SetCnet(0x011C38A8, 10, "GNET::PShopSelfGet_Re");
	SetCnet(0x011C38D4, 6, "GNET::PShopBase");
	SetCnet(0x011C38F0, 10, "GNET::PShopPlayerGet_Re");
	SetCnet(0x011C391C, 1, "GNET::PShopEntry");
	SetCnet(0x011C3938, 6, "GNET::RpcDataVector<GNET::PShopEntry>");
	SetCnet(0x011C3954, 10, "GNET::PShopList_Re");
	SetCnet(0x011C3980, 6, "GNET::PShopItemEntry");
	SetCnet(0x011C399C, 6, "GNET::RpcDataVector<GNET::PShopItemEntry>");
	SetCnet(0x011C39B8, 10, "GNET::PShopListItem_Re");
	SetCnet(0x011C39E4, 10, "GNET::PlayerProfileGetProfileData_Re");
	SetCnet(0x011C3A10, 6, "GNET::ProfileMatchResult");
	SetCnet(0x011C3A2C, 10, "GNET::PlayerProfileGetMatchResult_Re");
	SetCnet(0x011C3A58, 6, "GNET::GUniqueDataElem");
	SetCnet(0x011C3A74, 6, "GNET::GUniqueDataElemNode");
	SetCnet(0x011C3A90, 6, "GNET::RpcDataVector<GNET::GUniqueDataElemNode>");
	SetCnet(0x011C3AAC, 10, "GNET::UniqueDataModifyBroadcast");
	SetCnet(0x011C3AD8, 10, "GNET::TankBattlePlayerApply_Re");
	SetCnet(0x011C3B04, 10, "GNET::TankBattlePlayerGetRank_Re");
	SetCnet(0x011C3B30, 10, "GNET::AutoTeamSetGoal_Re");
	SetCnet(0x011C3B5C, 10, "GNET::AutoTeamPlayerLeave");
	SetCnet(0x011C3B88, 6, "GNET::RpcDataVector<GNET::IntOctets>");
	SetCnet(0x011C3BA4, 10, "GNET::GetCNetServerConfig_Re");
	SetCnet(0x011C3BD0, 10, "GNET::PlayerAccuse_Re");
	SetCnet(0x011C3BFC, 10, "GNET::FactionResourceBattlePlayerQueryResult");
	SetCnet(0x011C3C28, 10, "GNET::FactionResourceBattleGetMap_Re");
	SetCnet(0x011C3C54, 6, "GNET::GFactionResourceBattleRecord");
	SetCnet(0x011C3C70, 10, "GNET::FactionResourceBattleGetRecord_Re");
	SetCnet(0x011C3C9C, 10, "GNET::FactionResourceBattleNotifyPlayerEvent");
	SetCnet(0x011C3CC8, 10, "GNET::AddFriendRemarks_Re");
	SetCnet(0x011C3CF4, 6, "GNET::SoloChallengeRankData");
	SetCnet(0x011C3D10, 10, "GNET::GetSoloChallengeRank_Re");
	SetCnet(0x011C3D3C, 6, "GNET::MNDomainData");
	SetCnet(0x011C3D58, 6, "GNET::MNFactionApplyData");
	SetCnet(0x011C3D74, 6, "GNET::RpcDataVector<GNET::MNDomainData>");
	SetCnet(0x011C3D90, 6, "GNET::RpcDataVector<GNET::MNFactionApplyData>");
	SetCnet(0x011C3DAC, 10, "GNET::MNGetDomainData_Re");
	SetCnet(0x011C3DD8, 10, "GNET::MNGetPlayerLastEnterInfo_Re");
	SetCnet(0x011C3E04, 6, "GNET::MNFactionBriefInfo");
	SetCnet(0x011C3E20, 10, "GNET::MNGetFactionBriefInfo_Re");
	SetCnet(0x011C3E4C, 10, "GNET::MNGetTopList");
	SetCnet(0x011C3E78, 6, "GNET::RpcDataVector<GNET::MNFactionBriefInfo>");
	SetCnet(0x011C3E94, 10, "GNET::MNGetTopList_Re");
	SetCnet(0x011C3EC0, 10, "GNET::MNFactionBattleApply_Re");
	SetCnet(0x011C3EEC, 6, "GNET::MNFactionInfo");
	SetCnet(0x011C3F08, 10, "GNET::MNGetFactionInfo_Re");
	SetCnet(0x011C3F34, 6, "GNET::GEnemyList");
	SetCnet(0x011C3F50, 10, "GNET::UpdateEnemyList_Re");
	SetCnet(0x011C3F7C, 6, "GNET::RpcDataVector<GNET::GEnemyList>");
	SetCnet(0x011C3F98, 10, "GNET::GetEnemyList_Re");
	SetCnet(0x011C3FC4, 10, "GNET::HomeBrief");
	SetCnet(0x011C3FF0, 6, "GNET::GHomeSync");
	SetCnet(0x011C400C, 10, "GNET::HomeSyncNoticeClient");
	SetCnet(0x011C4038, 10, "GNET::HomeSceneElements");
	SetCnet(0x011C4064, 10, "GNET::HomeEditRes");
	SetCnet(0x011C4090, 6, "GNET::HomeVisitorInfoData");
	SetCnet(0x011C40AC, 6, "GNET::RpcDataVector<GNET::HomeVisitorInfoData>");
	SetCnet(0x011C40C8, 10, "GNET::HomeVisitorInfo");
	SetCnet(0x011C40F4, 10, "GNET::HomeBrowseInfoQuery_Re");
	SetCnet(0x011C4120, 10, "GNET::RedEnvelopeDeliver_Re");
	SetCnet(0x011C414C, 10, "GNET::RedEnvelopeGrab_Re");
	SetCnet(0x011C4178, 10, "GNET::RedEnvelopeErrNotice");
	SetCnet(0x011C41A4, 10, "GNET::RedEnvelopeLatestGet_Re");
	SetCnet(0x011C41D0, 10, "GNET::RedEnvelopeTakeLeft_Re");
	SetCnet(0x011C41FC, 10, "GNET::RedEnvelopeCancel_Re");
	SetCnet(0x011C4228, 10, "GNET::RedEnvelopeDataUpdate");
	SetCnet(0x011C4254, 10, "GNET::LotteryTicketFloorInfoGet_Re");
	SetCnet(0x011C4280, 10, "GNET::LotteryTicketLuckyAwardBroadCast");
	SetCnet(0x011C42AC, 10, "GNET::HomeLadderClientNotify");
	SetCnet(0x011C42D8, 10, "GNET::HomeBattleRecordSync");
	SetCnet(0x011C4304, 10, "GNET::HomeBattleInfoSync");
	SetCnet(0x011C4330, 10, "GNET::HomeMirrorSyncToClient");
	SetCnet(0x011C435C, 10, "GNET::HomeBattleScoreTopListQuery_Re");
	SetCnet(0x011C4388, 6, "GNET::GEffigy");
	SetCnet(0x011C43A4, 10, "GNET::EffigyQuery_Re");
	SetCnet(0x011C43D0, 10, "GNET::DriftBottleBroadcast_Re");
	SetCnet(0x011C43FC, 10, "GNET::DriftBottleGet_Re");
	SetCnet(0x011C4428, 6, "GNET::FactionRecruitApply");
	SetCnet(0x011C4444, 6, "GNET::RpcDataVector<GNET::FactionRecruitApply>");
	SetCnet(0x011C4460, 10, "GNET::FactionRecruitApplyList_Re");
	SetCnet(0x011C448C, 6, "GNET::FactionRecruitClientData");
	SetCnet(0x011C44A8, 6, "GNET::RpcDataVector<GNET::FactionRecruitClientData>");
	SetCnet(0x011C44C4, 10, "GNET::FactionRecruitList_Re");
	SetCnet(0x011C44F0, 10, "GNET::FactionRecruitOpResult");
	SetCnet(0x011C451C, 6, "GNET::FactionStoreHouse");
	SetCnet(0x011C4538, 10, "GNET::FactionStoreHouseList_Re");
	SetCnet(0x011C4564, 6, "GNET::GFactionRecruit");
	SetCnet(0x011C4580, 10, "GNET::FactionRecruitSelf_Re");
	SetCnet(0x011C45AC, 6, "GNET::FactionDivideMaterialData");
	SetCnet(0x011C45C8, 6, "GNET::FactionDivideMaterialClientData");
	SetCnet(0x011C45E4, 6, "GNET::RpcDataVector<GNET::FactionDivideMaterialClientData>");
	SetCnet(0x011C4600, 10, "GNET::FactionDivideHouseListMember_Re");
	SetCnet(0x011C462C, 6, "GNET::RpcDataVector<GNET::FactionDivideMaterialData>");
	SetCnet(0x011C4648, 6, "GNET::FactionDivideMaterialHouse");
	SetCnet(0x011C4664, 10, "GNET::FactionDivideHouseListMaster_Re");
	SetCnet(0x011C4690, 6, "GNET::RpcDataVector<unsigned int>");
	SetCnet(0x011C46AC, 6, "GNET::CustomizedLogData");
	SetCnet(0x011C46C8, 6, "GNET::RpcDataVector<GNET::CustomizedLogData>");
	SetCnet(0x011C46E4, 10, "GNET::FactionLogRequest_Re");
	SetCnet(0x011C4710, 10, "GNET::FactionSignalNotify");
	SetCnet(0x011C473C, 10, "GNET::GetFactionCrossBriefInfo_Re");
	SetCnet(0x011C4768, 10, "GNET::GetFactionCrossInfo_Re");
	SetCnet(0x011C4794, 10, "GNET::FactionCrossBattleNotify");
	SetCnet(0x011C47C0, 6, "GNET::RpcDataVector<GNET::LDDomainInfo>");
	SetCnet(0x011C47DC, 10, "GNET::LDBattleListClientNotice");
	SetCnet(0x011C4808, 10, "GNET::LDBattleEnterNotice");
	SetCnet(0x011C4834, 6, "GNET::RpcDataVector<GNET::LDTeamInfo>");
	SetCnet(0x011C4850, 10, "GNET::LDBattleTeamClientNotice");
	SetCnet(0x011C487C, 6, "GNET::MNBattleInfo");
	SetCnet(0x011C4898, 6, "GNET::RpcDataVector<GNET::MNBattleInfo>");
	SetCnet(0x011C48B4, 10, "GNET::MNBattleListNotice");
	SetCnet(0x011C48E0, 10, "GNET::GetSavedMsg2_Re");
	SetCnet(0x011C490C, 10, "GNET::CrossMatchActCount_Re");
	SetCnet(0x011C4938, 10, "GNET::CrossMatchActTime_Re");
	SetCnet(0x011C4964, 10, "GNET::LDBattlePersonList");
	SetCnet(0x011C4990, 3, "GNET::STLContainer<std::vector<GNET::MNBattleInfo,std::allocator<GNET::MNBattleInfo> > >");
	SetCnet(0x011C49A0, 3, "GNET::STLContainer<std::vector<GNET::LDDomainInfo,std::allocator<GNET::LDDomainInfo> > >");
	SetCnet(0x011C49B0, 3, "GNET::STLContainer<std::vector<GNET::LDTeamInfo,std::allocator<GNET::LDTeamInfo> > >");
	SetCnet(0x011C49C0, 3, "GNET::STLContainer<std::vector<GNET::CustomizedLogData,std::allocator<GNET::CustomizedLogData> > >");
	SetCnet(0x011C49D0, 3, "GNET::STLContainer<std::vector<GNET::FactionDivideMaterialClientData,std::allocator<GNET::FactionDivideMaterialClientData> > >");
	SetCnet(0x011C49E0, 3, "GNET::STLContainer<std::vector<GNET::FactionDivideMaterialData,std::allocator<GNET::FactionDivideMaterialData> > >");
	SetCnet(0x011C49F0, 3, "GNET::STLContainer<std::vector<GNET::FactionRecruitClientData,std::allocator<GNET::FactionRecruitClientData> > >");
	SetCnet(0x011C4A00, 3, "GNET::STLContainer<std::vector<GNET::FactionRecruitApply,std::allocator<GNET::FactionRecruitApply> > >");
	SetCnet(0x011C4A10, 3, "GNET::STLContainer<std::vector<GNET::HomeVisitorInfoData,std::allocator<GNET::HomeVisitorInfoData> > >");
	SetCnet(0x011C4A20, 3, "GNET::STLContainer<std::vector<GNET::GEnemyList,std::allocator<GNET::GEnemyList> > >");
	SetCnet(0x011C4A30, 3, "GNET::STLContainer<std::vector<GNET::MNFactionBriefInfo,std::allocator<GNET::MNFactionBriefInfo> > >");
	SetCnet(0x011C4A40, 3, "GNET::STLContainer<std::vector<GNET::MNFactionApplyData,std::allocator<GNET::MNFactionApplyData> > >");
	SetCnet(0x011C4A50, 3, "GNET::STLContainer<std::vector<GNET::MNDomainData,std::allocator<GNET::MNDomainData> > >");
	SetCnet(0x011C4A60, 3, "GNET::STLContainer<std::vector<GNET::GUniqueDataElemNode,std::allocator<GNET::GUniqueDataElemNode> > >");
	SetCnet(0x011C4A70, 3, "GNET::STLContainer<std::vector<GNET::PShopItemEntry,std::allocator<GNET::PShopItemEntry> > >");
	SetCnet(0x011C4A80, 3, "GNET::STLContainer<std::vector<GNET::PShopEntry,std::allocator<GNET::PShopEntry> > >");
	SetCnet(0x011C4A90, 3, "GNET::STLContainer<std::vector<GNET::PShopItem,std::allocator<GNET::PShopItem> > >");
	SetCnet(0x011C4AA0, 3, "GNET::STLContainer<std::vector<GNET::KECandidate,std::allocator<GNET::KECandidate> > >");
	SetCnet(0x011C4AB0, 3, "GNET::STLContainer<std::vector<GNET::QPDiscountInfo,std::allocator<GNET::QPDiscountInfo> > >");
	SetCnet(0x011C4AC0, 3, "GNET::STLContainer<std::vector<GNET::QPDiscountLevel,std::allocator<GNET::QPDiscountLevel> > >");
	SetCnet(0x011C4AD0, 3, "GNET::STLContainer<std::vector<GNET::PlayerConsumeInfo,std::allocator<GNET::PlayerConsumeInfo> > >");
	SetCnet(0x011C4AE0, 3, "GNET::STLContainer<std::vector<GNET::GSendAUMailRecord,std::allocator<GNET::GSendAUMailRecord> > >");
	SetCnet(0x011C4AF0, 3, "GNET::STLContainer<std::vector<GNET::GFriendExtInfo,std::allocator<GNET::GFriendExtInfo> > >");
	SetCnet(0x011C4B00, 3, "GNET::STLContainer<std::vector<GNET::GFactionRelationApply,std::allocator<GNET::GFactionRelationApply> > >");
	SetCnet(0x011C4B10, 3, "GNET::STLContainer<std::vector<GNET::GFactionHostile,std::allocator<GNET::GFactionHostile> > >");
	SetCnet(0x011C4B20, 3, "GNET::STLContainer<std::vector<GNET::GFactionAlliance,std::allocator<GNET::GFactionAlliance> > >");
	SetCnet(0x011C4B30, 3, "GNET::STLContainer<std::vector<GNET::RewardItem,std::allocator<GNET::RewardItem> > >");
	SetCnet(0x011C4B40, 3, "GNET::STLContainer<std::vector<GNET::GMPlayerInfo,std::allocator<GNET::GMPlayerInfo> > >");
	SetCnet(0x011C4B50, 3, "GNET::STLContainer<std::vector<GNET::GChatRoom,std::allocator<GNET::GChatRoom> > >");
	SetCnet(0x011C4B60, 3, "GNET::STLContainer<std::vector<GNET::Message,std::allocator<GNET::Message> > >");
	SetCnet(0x011C4B70, 3, "GNET::STLContainer<std::vector<GNET::GGroupInfo,std::allocator<GNET::GGroupInfo> > >");
	SetCnet(0x011C4B80, 3, "GNET::STLContainer<std::vector<GNET::GFriendInfo,std::allocator<GNET::GFriendInfo> > >");
	SetCnet(0x011C4B90, 3, "GNET::STLContainer<std::vector<GNET::FMemberInfo,std::allocator<GNET::FMemberInfo> > >");
	SetCnet(0x011C4BA0, 3, "GNET::STLContainer<std::vector<GNET::PlayerBriefInfo,std::allocator<GNET::PlayerBriefInfo> > >");
	SetCnet(0x011C4BB0, 3, "GNET::STLContainer<std::vector<GNET::GRoleForbid,std::allocator<GNET::GRoleForbid> > >");
	SetCnet(0x011C4BC0, 3, "GNET::STLContainer<std::vector<GNET::RoleInfo,std::allocator<GNET::RoleInfo> > >");
	SetCnet(0x011C4BD0, 3, "GNET::STLContainer<std::vector<GNET::IntOctets,std::allocator<GNET::IntOctets> > >");
	SetCnet(0x011C4BE0, 3, "GNET::STLContainer<std::vector<unsigned char,std::allocator<unsigned char> > >");
	SetCnet(0x011C4BF0, 3, "GNET::STLContainer<std::vector<GNET::GAuctionItem,std::allocator<GNET::GAuctionItem> > >");
	SetCnet(0x011C4C00, 3, "GNET::STLContainer<std::vector<GNET::GTerritory,std::allocator<GNET::GTerritory> > >");
	SetCnet(0x011C4C10, 3, "GNET::STLContainer<std::vector<GNET::GBattleChallenge,std::allocator<GNET::GBattleChallenge> > >");
	SetCnet(0x011C4C20, 3, "GNET::STLContainer<std::vector<GNET::ChallengeWish,std::allocator<GNET::ChallengeWish> > >");
	SetCnet(0x011C4C30, 3, "GNET::STLContainer<std::vector<GNET::SellPointInfo,std::allocator<GNET::SellPointInfo> > >");
	SetCnet(0x011C4C40, 3, "GNET::STLContainer<std::vector<GNET::StockPrice,std::allocator<GNET::StockPrice> > >");
	SetCnet(0x011C4C50, 3, "GNET::STLContainer<std::vector<GNET::StockOrder,std::allocator<GNET::StockOrder> > >");
	SetCnet(0x011C4C60, 3, "GNET::STLContainer<std::vector<GNET::StockLog,std::allocator<GNET::StockLog> > >");
	SetCnet(0x011C4C70, 3, "GNET::STLContainer<std::vector<GNET::ReferralBrief,std::allocator<GNET::ReferralBrief> > >");
	SetCnet(0x011C4C80, 3, "GNET::STLContainer<std::vector<GNET::GWebTradeItem,std::allocator<GNET::GWebTradeItem> > >");
	SetCnet(0x011C4C90, 3, "GNET::STLContainer<std::vector<GNET::GSysAuctionItem,std::allocator<GNET::GSysAuctionItem> > >");
	SetCnet(0x011C4CA0, 3, "GNET::STLContainer<std::vector<GNET::GFactionFortressBriefInfo,std::allocator<GNET::GFactionFortressBriefInfo> > >");
	SetCnet(0x011C4CB0, 3, "GNET::STLContainer<std::vector<GNET::GFactionFortressBattleInfo,std::allocator<GNET::GFactionFortressBattleInfo> > >");
	SetCnet(0x011C4CC0, 3, "GNET::STLContainer<std::vector<GNET::GCountryBattleDomain,std::allocator<GNET::GCountryBattleDomain> > >");
	SetCnet(0x011C4CD0, 3, "GNET::STLContainer<std::vector<GNET::ProfileMatchResult,std::allocator<GNET::ProfileMatchResult> > >");
	SetCnet(0x011C4CE0, 3, "GNET::STLContainer<std::vector<GNET::GFactionResourceBattleRecord,std::allocator<GNET::GFactionResourceBattleRecord> > >");
	SetCnet(0x011C4CF0, 3, "GNET::STLContainer<std::vector<GNET::SoloChallengeRankData,std::allocator<GNET::SoloChallengeRankData> > >");
	SetCnet(0x011C4D00, 3, "GNET::STLContainer<std::map<int,GNET::GDriftBottle,std::less<int>,std::allocator<std::pair<int const ,GNET::GDriftBottle> > > >");
	SetCnet(0x011C4D10, 3, "GNET::STLContainer<std::map<__int64,GNET::Octets,std::less<__int64>,std::allocator<std::pair<__int64 const ,GNET::Octets> > > >");
	SetCnet(0x011C4D38, 10, "GNET::ArenaClientNotify");
	SetCnet(0x011C4D64, 10, "GNET::ArenaPlayerDataNotify");
	SetCnet(0x011C4D90, 10, "GNET::ArenaTeamDataNotify");
	SetCnet(0x011C4DBC, 10, "GNET::ArenaTeamAndPlayerDataNotify");
	SetCnet(0x011C4DE8, 10, "GNET::ArenaTeamMatch");
	SetCnet(0x011C4E14, 10, "GNET::ArenaTeamCreate");
	SetCnet(0x011C4E40, 10, "GNET::ArenaQuery_Re");
	SetCnet(0x011C4E6C, 10, "GNET::ArenaBattleInfoNotifyClient");
	SetCnet(0x011C4E98, 10, "GNET::ArenaPlayerTotalInfoQuery_Re");
	SetCnet(0x011C4EC4, 10, "GNET::ArenaTeamTopListQuery_Re");
	SetCnet(0x011C4EF0, 10, "GNET::ArenaTeamTopListDetailQuery_Re");
	SetCnet(0x011C4F1C, 10, "GNET::ArenaPlayerTopListQuery_Re");
	SetCnet(0x011C4F48, 6, "GNET::RpcDataVector<GNET::ArenaTeamMemberOnlineInfo>");
	SetCnet(0x011C4F64, 10, "GNET::ArenaOnlineInfoNotify");
	SetCnet(0x011C4F90, 10, "GNET::FactionFieldBattleDataQuery_Re");
	SetCnet(0x011C4FBC, 10, "GNET::FactionFieldBattleCombatInfoQuery_Re");
	SetCnet(0x011C4FE8, 10, "GNET::FactionFieldBattleNotify");
	SetCnet(0x011C5014, 10, "GNET::GameChannelOperation");
	SetCnet(0x011C5040, 10, "GNET::FactionExtraClientNotify");
	SetCnet(0x011C506C, 10, "GNET::FactionTargetFinishNotify");
	SetCnet(0x011C5098, 10, "GNET::FactionFieldBattleCombatInfoQuery_Re2");
	SetCnet(0x011C50C4, 10, "GNET::FactionFieldBattleIDQuery_Re");
	SetCnet(0x011C50F0, 1, "GNET::ApprenticeData");
	SetCnet(0x011C510C, 6, "GNET::ApprenticeHistoryData");
	SetCnet(0x011C5128, 6, "GNET::ApprenticeLeaveData");
	SetCnet(0x011C5144, 6, "GNET::RpcDataVector<GNET::ApprenticeData>");
	SetCnet(0x011C5160, 6, "GNET::RpcDataVector<GNET::ApprenticeHistoryData>");
	SetCnet(0x011C517C, 6, "GNET::RpcDataVector<GNET::ApprenticeLeaveData>");
	SetCnet(0x011C5198, 6, "GNET::MasterQueryData");
	SetCnet(0x011C51B4, 10, "GNET::MasterQuery_Re");
	SetCnet(0x011C51E0, 6, "GNET::ApprenticeBriefData");
	SetCnet(0x011C51FC, 6, "GNET::RpcDataVector<GNET::ApprenticeBriefData>");
	SetCnet(0x011C5218, 6, "GNET::ApprenticeQueryData");
	SetCnet(0x011C5234, 10, "GNET::ApprenticeQuery_Re");
	SetCnet(0x011C5260, 10, "GNET::MasterApprenticeErrorMessage");
	SetCnet(0x011C528C, 10, "GNET::MasterApprenticeOnlineQuery_Re");
	SetCnet(0x011C52B8, 6, "GNET::MasterApprenticeRecruitBriefData");
	SetCnet(0x011C52D4, 6, "GNET::RpcDataVector<GNET::MasterApprenticeRecruitBriefData>");
	SetCnet(0x011C52F0, 10, "GNET::MasterApprenticeRecruitQuery_Re");
	SetCnet(0x011C531C, 6, "GNET::MasterApprenticeRecruitApplyData");
	SetCnet(0x011C5338, 6, "GNET::RpcDataVector<GNET::MasterApprenticeRecruitApplyData>");
	SetCnet(0x011C5354, 10, "GNET::MasterApprenticeSelfRecruitApplyQuery_Re");
	SetCnet(0x011C5380, 6, "GNET::MasterApprenticeTopListData");
	SetCnet(0x011C539C, 6, "GNET::RpcDataVector<GNET::MasterApprenticeTopListData>");
	SetCnet(0x011C53B8, 10, "GNET::MasterApprenticeTopListQuery_Re");
	SetCnet(0x011C53E4, 10, "GNET::ApprenticeHistoryQuery_Re");
	SetCnet(0x011C5410, 10, "GNET::MasterApprenticeSelfRecruitApplyBriefQuery_Re");
	SetCnet(0x011C543C, 6, "GNET::SpouseDivorceData");
	SetCnet(0x011C5458, 6, "GNET::SpouseData");
	SetCnet(0x011C5474, 10, "GNET::SpouseSync");
	SetCnet(0x011C54A0, 10, "GNET::SpouseLastLoginQuery_Re");
	SetCnet(0x011C54CC, 10, "GNET::SpouseMessage");
	SetCnet(0x011C54F8, 6, "GNET::RedBookRankClientData");
	SetCnet(0x011C5514, 6, "GNET::RpcDataVector<GNET::RedBookRankClientData>");
	SetCnet(0x011C5530, 10, "GNET::ReqRedBookRank_Re");
	SetCnet(0x011C555C, 10, "GNET::GetCampRank_Re");
	SetCnet(0x011C5588, 6, "GNET::CampKillRankData");
	SetCnet(0x011C55A4, 6, "GNET::RpcDataVector<GNET::CampKillRankData>");
	SetCnet(0x011C55C0, 10, "GNET::GetCampKillRank_Re");
	SetCnet(0x011C55EC, 10, "GNET::FactionChangeCampNotice");
	SetCnet(0x011C5618, 10, "GNET::LDBattleClientOperateNotice");
	SetCnet(0x011C5644, 10, "GNET::LDBattleClientState");
	SetCnet(0x011C5670, 6, "GNET::LDRoomInfo");
	SetCnet(0x011C568C, 10, "GNET::LDBattleRoomState");
	SetCnet(0x011C56B8, 10, "GNET::LDBattleUpdateRoomList");
	SetCnet(0x011C56E4, 6, "GNET::CrossMatchPlayer");
	SetCnet(0x011C5700, 6, "GNET::RpcDataVector<GNET::CrossMatchPlayer>");
	SetCnet(0x011C571C, 6, "GNET::CrossMatchTeamChip");
	SetCnet(0x011C5738, 6, "GNET::RpcDataVector<GNET::CrossMatchTeamChip>");
	SetCnet(0x011C5754, 6, "GNET::CrossMatchTeam");
	SetCnet(0x011C5770, 10, "GNET::CrossMatchTeamInfo");
	SetCnet(0x011C579C, 10, "GNET::QueryWardrobeInfo");
	SetCnet(0x011C57C8, 3, "GNET::STLContainer<std::vector<GNET::CrossMatchTeamChip,std::allocator<GNET::CrossMatchTeamChip> > >");
	SetCnet(0x011C57D8, 3, "GNET::STLContainer<std::vector<GNET::CrossMatchPlayer,std::allocator<GNET::CrossMatchPlayer> > >");
	SetCnet(0x011C57E8, 3, "GNET::STLContainer<std::vector<GNET::CampKillRankData,std::allocator<GNET::CampKillRankData> > >");
	SetCnet(0x011C57F8, 3, "GNET::STLContainer<std::vector<GNET::RedBookRankClientData,std::allocator<GNET::RedBookRankClientData> > >");
	SetCnet(0x011C5808, 3, "GNET::STLContainer<std::vector<GNET::MasterApprenticeTopListData,std::allocator<GNET::MasterApprenticeTopListData> > >");
	SetCnet(0x011C5818, 3, "GNET::STLContainer<std::vector<GNET::MasterApprenticeRecruitApplyData,std::allocator<GNET::MasterApprenticeRecruitApplyData> > >");
	SetCnet(0x011C5828, 3, "GNET::STLContainer<std::vector<GNET::MasterApprenticeRecruitBriefData,std::allocator<GNET::MasterApprenticeRecruitBriefData> > >");
	SetCnet(0x011C5838, 3, "GNET::STLContainer<std::vector<GNET::ApprenticeBriefData,std::allocator<GNET::ApprenticeBriefData> > >");
	SetCnet(0x011C5848, 3, "GNET::STLContainer<std::vector<GNET::ApprenticeLeaveData,std::allocator<GNET::ApprenticeLeaveData> > >");
	SetCnet(0x011C5858, 3, "GNET::STLContainer<std::vector<GNET::ApprenticeHistoryData,std::allocator<GNET::ApprenticeHistoryData> > >");
	SetCnet(0x011C5868, 3, "GNET::STLContainer<std::vector<GNET::ApprenticeData,std::allocator<GNET::ApprenticeData> > >");
	SetCnet(0x011C5878, 3, "GNET::STLContainer<std::vector<GNET::ArenaTeamMemberOnlineInfo,std::allocator<GNET::ArenaTeamMemberOnlineInfo> > >");
	SetCnet(0x011C5888, 3, "GNET::STLContainer<std::map<int,GNET::FactionFieldBattlePlayerInfo,std::less<int>,std::allocator<std::pair<int const ,GNET::FactionFieldBattlePlayerInfo> > > >");
	SetCnet(0x011C5898, 1, "CParamArray");
	SetCnet(0x011C58A0, 7, "CParam");
	SetCnet(0x011C5CDC, 19, "pb::Animation::Point3F");
	SetCnet(0x011C5D2C, 19, "pb::Animation::Point4F");
	SetCnet(0x011C5D7C, 19, "pb::Animation::SunMoonAction");
	SetCnet(0x011C5DCC, 19, "pb::Animation::ColorFiltersAction");
	SetCnet(0x011C5E1C, 19, "pb::Animation::UIAction");
	SetCnet(0x011C6114, 18, "google::protobuf::internal::MapFieldBase");
	SetCnet(0x011C6160, 19, "pb::Animation::WorldInstance");
	SetCnet(0x011C61B0, 21, "google::protobuf::internal::MapEntryImpl<pb::Animation::C2E_ReplyInitData_MapWorldInstanceEntry_DoNotUse,google::protobuf::Message,unsigned int,pb::Animation::WorldInstance,13,11,0>");
	SetCnet(0x011C6208, 21, "google::protobuf::internal::MapEntry<pb::Animation::C2E_ReplyInitData_MapWorldInstanceEntry_DoNotUse,unsigned int,pb::Animation::WorldInstance,13,11,0>");
	SetCnet(0x011C6260, 21, "pb::Animation::C2E_ReplyInitData_MapWorldInstanceEntry_DoNotUse");
	SetCnet(0x011C62B8, 21, "google::protobuf::internal::TypeDefinedMapFieldBase<unsigned int,pb::Animation::WorldInstance>");
	SetCnet(0x011C6310, 21, "google::protobuf::internal::MapField<pb::Animation::C2E_ReplyInitData_MapWorldInstanceEntry_DoNotUse,unsigned int,pb::Animation::WorldInstance,13,11,0>");
	SetCnet(0x011C6368, 19, "pb::Animation::C2E_ReplyInitData");
	SetCnet(0x011C750C, 19, "pb::EC_COMBOSKILL");
	SetCnet(0x011C755C, 19, "pb::EC_VIDEO_SETTING");
	SetCnet(0x011C75AC, 19, "pb::EC_USERCHANNEL_CHATS");
	SetCnet(0x011C75FC, 19, "pb::EC_GAME_SETTING");
	SetCnet(0x011C764C, 19, "pb::EC_BLACKLIST_SETTING");
	SetCnet(0x011C769C, 19, "pb::ITEM_GROUP");
	SetCnet(0x011C76EC, 19, "pb::EC_COMPUTER_AIDED_SETTING");
	SetCnet(0x011C773C, 19, "pb::EC_LOTTERY_BATCH_SETTING");
	SetCnet(0x011C778C, 19, "pb::EC_ARENA_LAST_PLAYER");
	SetCnet(0x011C77DC, 19, "pb::EC_CHATROOM_SETTING");
	SetCnet(0x011C782C, 19, "pb::DIVINATION_INFO");
	SetCnet(0x011C787C, 19, "pb::EC_ADVERTISEMENT_TIME");
	SetCnet(0x011C78CC, 19, "pb::EC_USER_OPERATE_DATA");
	SetCnet(0x011C791C, 19, "pb::UserConfig");
	SetCnet(0x011C7A28, 10, "ATL::CComModule");
	SetCnet(0x011C7AAC, 6, "ATL::CRegObject");
	SetCnet(0x011C8148, 4, "ATL::CComObject<ATL::CAxFrameWindow>");
	SetCnet(0x011C815C, 15, "ATL::CComObject<ATL::CAxFrameWindow>");
	SetCnet(0x011C819C, 4, "ATL::CComObject<ATL::CAxUIWindow>");
	SetCnet(0x011C81B0, 9, "ATL::CComObject<ATL::CAxUIWindow>");
	SetCnet(0x011C81F8, 8, "ATL::CComObject<ATL::CComEnum<IEnumUnknown,&__s_GUID const _GUID_00000100_0000_0000_c000_000000000046,IUnknown *,ATL::_CopyInterface<IUnknown>,ATL::CComMultiThreadModel> >");
	SetCnet(0x011C82A8, 4, "CPWBrowser");
	SetCnet(0x011C82BC, 20, "CPWBrowser");
	SetCnet(0x011C84B4, 10, "ATL::CComObject<CPWIESink>");
	SetCnet(0x011C84E0, 10, "ATL::CComObject<CPWBackIESink>");
	SetCnet(0x011C850C, 23, "ATL::CComObject<CPWIEDocHostUIHandler>");
	SetCnet(0x011C8600, 5, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8618, 11, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8648, 9, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8670, 30, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C86EC, 10, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8718, 6, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8734, 6, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8750, 4, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8764, 8, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8788, 18, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C87D4, 36, "ATL::CComContainedObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8868, 4, "ATL::CComPolyObject<ATL::CAxHostWindow>");
	SetCnet(0x011C8C3C, 17, "");
	SetCnet(0x011C8EF4, 17, "");
	SetCnet(0x011C959C, 3, "ATaskTempl::TaskRecursiveChecker");
	SetCnet(0x011C9830, 3, "`public: bool __thiscall TaskInterface::HasTopTaskRelatingMarriage(0xabase::vector<unsigned long,abase::default_alloc> *)'::`2'::TaskMarriageChecker");
	SetCnet(0x011C9840, 3, "`public: bool __thiscall TaskInterface::HasTopTaskRelatingWedding(0xabase::vector<unsigned long,abase::default_alloc> *)'::`2'::TaskWeddingChecker");
	SetCnet(0x011C9850, 3, "`public: bool __thiscall TaskInterface::HasTopTaskRelatingSpouse(0xabase::vector<unsigned long,abase::default_alloc> *)'::`2'::TaskSpouseChecker");
	SetCnet(0x011C9860, 3, "`public: bool __thiscall TaskInterface::HasTopTaskRelatingGender(0xabase::vector<unsigned long,abase::default_alloc> *)'::`2'::TaskGenderChecker");
	SetCnet(0x011CC294, 1, "ATaskTempl");
	SetCnet(0x011CC29C, 1, "CSafeString");
	SetCnet(0x011CC594, 1, "WikiDataReader");
	SetCnet(0x011CC59C, 8, "WikiFileInterface");
	SetCnet(0x011CC5C0, 8, "WikiFileInterfaceImpl<AScriptFile>");
	SetCnet(0x011CC5E4, 8, "WikiFileInterfaceImpl<AWScriptFile>");
	SetCnet(0x011CC608, 18, "WikiEquipmentProp");
	SetCnet(0x011CC654, 18, "EssenceExtractor<FASHION_ESSENCE,FASHION_SUB_TYPE>");
	SetCnet(0x011CC6A0, 18, "EssenceExtractor<WEAPON_ESSENCE,WEAPON_SUB_TYPE>");
	SetCnet(0x011CC6EC, 18, "AstrolabeEssenceExtractor");
	SetCnet(0x011CC738, 18, "BibleEssenceExtractor");
	SetCnet(0x011CC784, 18, "EssenceExtractor<ARMOR_ESSENCE,ARMOR_SUB_TYPE>");
	SetCnet(0x011CC7D0, 18, "EssenceExtractor<DECORATION_ESSENCE,DECORATION_SUB_TYPE>");
	SetCnet(0x011CC8E8, 7, "WikiItemProp");
	SetCnet(0x011CC908, 7, "ItemExtractor");
	SetCnet(0x011CC928, 1, "WikiEntity::UserData");
	SetCnet(0x011CC930, 1, "APtrList<WikiSearcher::SearchCommand *>");
	SetCnet(0x011CC938, 3, "WikiSearchSuite");
	SetCnet(0x011CC948, 4, "WikiEntityPtrProvider");
	SetCnet(0x011CC95C, 3, "WikiSerialDataProvider::Entity");
	SetCnet(0x011CC96C, 4, "WikiSerialDataProvider");
	SetCnet(0x011CC980, 3, "WikiSearchRandPropOnEquipment");
	SetCnet(0x011CC990, 3, "WikiSearchDropItemOnMonster");
	SetCnet(0x011CC9A0, 4, "WikiElementDataProvider");
	SetCnet(0x011CC9B4, 3, "WikiSearchBySpecificID");
	SetCnet(0x011CC9C4, 3, "WikiSearchMonsterDropByItemID");
	SetCnet(0x011CC9D4, 3, "WikiSearchRecipeByProductID");
	SetCnet(0x011CC9E4, 3, "WikiSearchRecipeByMaterialID");
	SetCnet(0x011CC9F4, 4, "WikiSearchByName");
	SetCnet(0x011CCA08, 4, "WikiSearchItemByName");
	SetCnet(0x011CCA1C, 3, "WikiSkillDataProvider::Entity");
	SetCnet(0x011CCA2C, 4, "WikiSkillDataProvider");
	SetCnet(0x011CCA40, 3, "WikiSearchSkillByLevelRequire");
	SetCnet(0x011CCA50, 3, "WikiSearchSkillBySpecificID");
	SetCnet(0x011CCA60, 3, "WikiSearchSkillByClassLimit");
	SetCnet(0x011CCA70, 3, "WikiSearchFeatureByLevel");
	SetCnet(0x011CCA80, 3, "WikiSearchEquipmentGuide");
	SetCnet(0x011CCA90, 3, "WikiSearchAreaByLevel");
	SetCnet(0x011CCAAC, 1, "WikiEntity::UserDataConstHolder<MONSTER_ESSENCE>");
	SetCnet(0x011CCAB4, 1, "WikiEntity::UserDataConstHolder<RECIPE_ESSENCE>");
	SetCnet(0x011CCABC, 1, "WikiEntity::UserDataHolder<WikiEquipmentProp>");
	SetCnet(0x011CCAC4, 1, "WikiEntity::UserDataHolder<WikiItemProp>");
	SetCnet(0x011CCACC, 1, "WikiEntity::UserDataHolder<CECSkill>");
	SetCnet(0x011CCAD4, 1, "WikiEntity::UserDataConstHolder<WikiGuideFeature>");
	SetCnet(0x011CCADC, 1, "WikiEntity::UserDataConstHolder<WikiGuideEqu>");
	SetCnet(0x011CCAE4, 1, "WikiEntity::UserDataConstHolder<WikiGuideArea>");
	SetCnet(0x011CCAEC, 6, "WikiSearcher");
	SetCnet(0x011CCB08, 1, "WikiEntity::UserDataConstHolder<NPC_ESSENCE>");
	SetCnet(0x011CCB10, 3, "WikiTaskDataProvider::Entity");
	SetCnet(0x011CCB20, 4, "WikiTaskDataProvider");
	SetCnet(0x011CCB34, 3, "WikiSearchTaskByMonster");
	SetCnet(0x011CCB44, 3, "WikiSearchTaskByItemID");
	SetCnet(0x011CCB54, 3, "WikiSearchTaskBySpecificID");
	SetCnet(0x011CCB64, 3, "WikiSearchTaskByLevel");
	SetCnet(0x011CCB74, 3, "WikiSearchTaskByClassLimit");
	SetCnet(0x011CCB84, 3, "WikiSearchTaskForGuide");
	SetCnet(0x011CCEB4, 1, "AMemVector<AMemPool::POOLSLOT>");
	SetCnet(0x011CCEBC, 1, "AMemPool");
	SetCnet(0x011CCEC4, 1, "AMemSmall");
	SetCnet(0x011CCECC, 1, "AMemLarge");
	SetCnet(0x011CCED4, 1, "AMemoryMan");
	SetCnet(0x011CCEEC, 1, "ALog");
	SetCnet(0x011CD394, 1, "ACounter");
	SetCnet(0x011CD39C, 1, "AMSoundStream");
	SetCnet(0x011CDA90, 7, "CAsyncStream");
	SetCnet(0x011CDAB0, 7, "CEncryptedStream");
	SetCnet(0x011CDAD0, 10, "CAsyncFilter");
	SetCnet(0x011CDAFC, 15, "CAsyncFilter");
	SetCnet(0x011CDB3C, 5, "CAsyncFilter");
	SetCnet(0x011CDB54, 5, "CAsyncFilter");
	SetCnet(0x011CE168, 1, "APtrList<AMSoundBuffer *>");
	SetCnet(0x011CE170, 1, "APtrList<AMSoundBufferMan::LOADED3D *>");
	SetCnet(0x011CE178, 1, "AArray<AMSoundBufferMan::AUTOBUFFER,AMSoundBufferMan::AUTOBUFFER &>");
	SetCnet(0x011CE180, 1, "AArray<AMSoundBufferMan::AUTO3DGROUP,AMSoundBufferMan::AUTO3DGROUP &>");
	SetCnet(0x011CE188, 1, "APtrArray<AMSoundBufferMan::ASCACHEITEM *>");
	SetCnet(0x011CE190, 1, "AMSoundBufferMan");
	SetCnet(0x011CE334, 1, "AMSoundEngine");
	SetCnet(0x011CE4BC, 2, "AM3DSoundDevice");
	SetCnet(0x011CE61C, 13, "AMSoundBuffer");
	SetCnet(0x011CE92C, 13, "AM3DSoundBuffer");
	SetCnet(0x011CEB2C, 1, "CFFT");
	SetCnet(0x011CEC08, 1, "AMMp3File");
	SetCnet(0x011CEC94, 1, "AMOggFile");
	SetCnet(0x011CED5C, 49, "AMSurfaceRenderer");
	SetCnet(0x011CEE24, 15, "AMSurfaceRenderer");
	SetCnet(0x011CEE64, 5, "AMSurfaceRenderer");
	SetCnet(0x011CEE7C, 9, "AMSurfaceRenderer");
	SetCnet(0x011CEEA4, 5, "AMSurfaceRenderer");
	SetCnet(0x011CEF14, 1, "AMConfig");
	SetCnet(0x011CEFE4, 2, "AMSoundDevice");
	SetCnet(0x011CF800, 15, "AFileImage");
	SetCnet(0x011CF9D8, 15, "AFileUnicode");
	SetCnet(0x011CFA18, 15, "AFile");
	SetCnet(0x011CFA60, 1, "AWScriptFile");
	SetCnet(0x011CFB1C, 1, "AScriptFile");
	SetCnet(0x011CFC14, 6, "AFilePackBase");
	SetCnet(0x011CFC30, 4, "AFilePackage::entry");
	SetCnet(0x011CFC44, 4, "AFilePackage::directory");
	SetCnet(0x011CFC58, 4, "AFilePackage::file");
	SetCnet(0x011CFC6C, 1, "APtrArray<AFilePackage::FILEENTRY *>");
	SetCnet(0x011CFC74, 1, "APtrArray<AFilePackage::FILEENTRYCACHE *>");
	SetCnet(0x011CFC7C, 6, "AFilePackage");
	SetCnet(0x011D021C, 1, "APtrArray<AIniFile::s_KEY *>");
	SetCnet(0x011D0224, 1, "APtrArray<AIniFile::s_SECTION *>");
	SetCnet(0x011D022C, 1, "AIniFile");
	SetCnet(0x011D035C, 1, "APtrArray<AWIniFile::s_KEY *>");
	SetCnet(0x011D0364, 1, "APtrArray<AWIniFile::s_SECTION *>");
	SetCnet(0x011D036C, 1, "AWIniFile");
	SetCnet(0x011D049C, 16, "AMemFile");
	SetCnet(0x011D085C, 1, "APtrArray<AFilePackGame::FILEENTRY *>");
	SetCnet(0x011D0864, 1, "AArray<AFilePackGame::NAMEBUFFER,AFilePackGame::NAMEBUFFER &>");
	SetCnet(0x011D086C, 6, "AFilePackGame");
	SetCnet(0x011D0C84, 1, "APtrArray<A3DSkinModel::SKIN *>");
	SetCnet(0x011D0C8C, 1, "APtrArray<A3DHanger *>");
	SetCnet(0x011D0C94, 1, "APtrArray<A3DSkinModel *>");
	SetCnet(0x011D0C9C, 1, "APtrList<A3DSkinModelActionCore *>");
	SetCnet(0x011D0CA4, 1, "APtrArray<A3DSkinHitBox *>");
	SetCnet(0x011D0CAC, 1, "AArray<OBBBEVELS,OBBBEVELS &>");
	SetCnet(0x011D0CB4, 1, "APtrArray<A3DSkinPhyShape *>");
	SetCnet(0x011D0CBC, 18, "A3DSkinModel");
	SetCnet(0x011D0D08, 7, "A3DHanger");
	SetCnet(0x011D0D28, 7, "A3DGFXHanger");
	SetCnet(0x011D10C4, 1, "AArray<float,float>");
	SetCnet(0x011D10F4, 14, "A3DCameraBase");
	SetCnet(0x011D1130, 5, "A3DStream");
	SetCnet(0x011D2264, 10, "A3DTexture");
	SetCnet(0x011D2930, 1, "APtrList<A3DTextureMan::TEXTURERECORD *>");
	SetCnet(0x011D2938, 1, "A3DTextureMan");
	SetCnet(0x011D2C44, 1, "AArray<AString,AString &>");
	SetCnet(0x011D2C4C, 2, "A3DLitMesh");
	SetCnet(0x011D2C58, 1, "APtrArray<A3DLitMesh *>");
	SetCnet(0x011D2C60, 2, "A3DLitModel");
	SetCnet(0x011D2EB8, 1, "AArray<A3DLMVERTEX_POS_NORMAL_UV_TANGENT,A3DLMVERTEX_POS_NORMAL_UV_TANGENT &>");
	SetCnet(0x011D2EC0, 1, "AArray<A3DVECTOR3,A3DVECTOR3 &>");
	SetCnet(0x011D2EC8, 1, "AArray<unsigned short,unsigned short &>");
	SetCnet(0x011D3190, 2, "A3DViewport");
	SetCnet(0x011D319C, 2, "A3DLight");
	SetCnet(0x011D31A8, 2, "A3DMaterial");
	SetCnet(0x011D324C, 2, "A3DMesh");
	SetCnet(0x011D361C, 1, "A3DBoneController");
	SetCnet(0x011D3624, 1, "A3DBoneMatrixController");
	SetCnet(0x011D362C, 1, "A3DBoneBodyTurnController");
	SetCnet(0x011D3634, 1, "AArray<short,short &>");
	SetCnet(0x011D363C, 1, "AArray<A3DBone::STATE,A3DBone::STATE &>");
	SetCnet(0x011D3644, 2, "A3DBone");
	SetCnet(0x011D3704, 4, "A3DSkeletonHook");
	SetCnet(0x011D3718, 1, "APtrArray<A3DBone *>");
	SetCnet(0x011D3720, 1, "APtrArray<A3DJoint *>");
	SetCnet(0x011D3728, 1, "APtrArray<A3DSkeletonHook *>");
	SetCnet(0x011D3730, 16, "A3DSkeleton");
	SetCnet(0x011D3AB4, 1, "A3DEngine");
	SetCnet(0x011D4804, 1, "APtrArray<A2DSpriteItem *>");
	SetCnet(0x011D480C, 2, "A2DSprite");
	SetCnet(0x011D4A64, 14, "A3DCamera");
	SetCnet(0x011D4AA0, 1, "APtrArray<A2DSpriteTextures::TEXTURE_RECT *>");
	SetCnet(0x011D4AA8, 2, "A2DSpriteTextures");
	SetCnet(0x011D4E18, 1, "A3DSurfaceMan");
	SetCnet(0x011D56C0, 1, "A3DEnvironment");
	SetCnet(0x011D5710, 2, "A3DSurface");
	SetCnet(0x011D5774, 5, "A3DFlatCollector");
	SetCnet(0x011D5894, 1, "A3DGDI");
	SetCnet(0x011D59CC, 2, "A3DHLSLCore");
	SetCnet(0x011D59D8, 1, "A3DHLSL::CONSTREGCONTEXT");
	SetCnet(0x011D59E0, 2, "A3DHLSL");
	SetCnet(0x011D5D9C, 10, "A3DEffect");
	SetCnet(0x011D61EC, 1, "APtrArray<A3DTexture *>");
	SetCnet(0x011D61F4, 1, "APtrArray<A3DMaterial *>");
	SetCnet(0x011D61FC, 1, "AArray<A3DSkinMeshRef,A3DSkinMeshRef &>");
	SetCnet(0x011D6204, 2, "A3DSkin");
	SetCnet(0x011D649C, 5, "A3DWireCollector");
	SetCnet(0x011D65EC, 1, "APtrArray<A3DFont::TEXTURESLOT *>");
	SetCnet(0x011D65F4, 1, "A3DFont");
	SetCnet(0x011D6794, 1, "APtrArray<A3DFont::CHARPROP *>");
	SetCnet(0x011D6840, 1, "APtrArray<A3DTerrain2Block *>");
	SetCnet(0x011D6848, 1, "APtrList<A3DTerrain2Block *>");
	SetCnet(0x011D6850, 1, "APtrArray<A3DTerrain2::TEXTURE *>");
	SetCnet(0x011D6858, 1, "AArray<A3DTerrain2::SUBTERRAIN,A3DTerrain2::SUBTERRAIN &>");
	SetCnet(0x011D6860, 8, "A3DTerrain2");
	SetCnet(0x011D6DDC, 1, "APtrArray<A3DSkinMesh::SUBMESH *>");
	SetCnet(0x011D6DE4, 17, "A3DSkinMesh");
	SetCnet(0x011D7378, 1, "APtrArray<s_PROCSUBMESH *>");
	SetCnet(0x011D757C, 1, "APtrArray<A3DWaterArea2 *>");
	SetCnet(0x011D7584, 1, "APtrArray<A3DTerrainWater2::HeightWaterAreaArray *>");
	SetCnet(0x011D758C, 1, "A3DTerrainWater2");
	SetCnet(0x011D78AC, 1, "APtrList<A3DCoordinate *>");
	SetCnet(0x011D78B4, 16, "A3DCoordinate");
	SetCnet(0x011D78F8, 5, "A3DCursor");
	SetCnet(0x011D7910, 5, "A3DSysCursor");
	SetCnet(0x011D7960, 1, "APtrArray<A3DFontMan::FONTTYPE *>");
	SetCnet(0x011D7968, 1, "A3DFontMan");
	SetCnet(0x011D7AA4, 1, "A3DLightMan");
	SetCnet(0x011D7B70, 1, "APtrArray<A3DLitModelRender::RENDERSLOT *>");
	SetCnet(0x011D7B78, 1, "APtrArray<A3DLitModel *>");
	SetCnet(0x011D7B80, 1, "A3DLitModelRender");
	SetCnet(0x011D7DD0, 1, "AArray<A3DLitMesh *,A3DLitMesh * &>");
	SetCnet(0x011D7FD4, 1, "APtrArray<A3DSkeleton *>");
	SetCnet(0x011D7FDC, 1, "A3DSkinMan");
	SetCnet(0x011D8404, 1, "APtrArray<A3DSkinMesh *>");
	SetCnet(0x011D840C, 1, "APtrArray<A3DRigidMesh *>");
	SetCnet(0x011D8414, 1, "APtrArray<A3DMorphSkinMesh *>");
	SetCnet(0x011D841C, 1, "APtrArray<A3DMorphRigidMesh *>");
	SetCnet(0x011D8424, 1, "APtrArray<A3DSuppleMesh *>");
	SetCnet(0x011D842C, 1, "APtrArray<A3DMuscleMesh *>");
	SetCnet(0x011D8434, 1, "A3DSkinMeshMan");
	SetCnet(0x011D85E4, 7, "A3DTrackData<A3DQUATERNION>");
	SetCnet(0x011D8604, 7, "A3DQuaternionTrack");
	SetCnet(0x011D8624, 7, "A3DTrackData<A3DVECTOR3>");
	SetCnet(0x011D8644, 7, "A3DVector3Track");
	SetCnet(0x011D8664, 7, "A3DTrackData<float>");
	SetCnet(0x011D8684, 7, "A3DFloatTrack");
	SetCnet(0x011D86A4, 1, "A3DSklTrackSet");
	SetCnet(0x011D86AC, 1, "AList2<A3DTrackMan::TRACKNODE,A3DTrackMan::TRACKNODE &>");
	SetCnet(0x011D86B4, 1, "A3DTrackMan");
	SetCnet(0x011D8A34, 1, "AArray<int,int &>");
	SetCnet(0x011D8A3C, 1, "AList2<A3DTrackMan::TRACKNODE,A3DTrackMan::TRACKNODE &>::c_NodePool");
	SetCnet(0x011D8A44, 13, "A3DFrame");
	SetCnet(0x011D8BDC, 1, "AArray<A3DTerrain2Mask::LAYER,A3DTerrain2Mask::LAYER &>");
	SetCnet(0x011D8BE4, 3, "A3DTerrain2Mask");
	SetCnet(0x011D8BF4, 3, "A3DTerrain2Block");
	SetCnet(0x011D8CEC, 1, "AArray<A3DTLVERTEX,A3DTLVERTEX const &>");
	SetCnet(0x011D8D20, 2, "A3DSkinModelActionCore");
	SetCnet(0x011D8D2C, 1, "A3DSkinModelAction");
	SetCnet(0x011D8D34, 1, "APtrList<A3DSMActionChannel::ACT_NODE *>");
	SetCnet(0x011D8D3C, 1, "A3DSMActionChannel");
	SetCnet(0x011D95FC, 5, "A3DRenderTarget");
	SetCnet(0x011D98EC, 24, "A3DParticleSystem");
	SetCnet(0x011DA18C, 24, "A3DRain");
	SetCnet(0x011DA290, 7, "A3DSkySphere");
	SetCnet(0x011DA684, 24, "A3DSnow");
	SetCnet(0x011DA6E8, 1, "A3DWaterMeshBlock2");
	SetCnet(0x011DA6F0, 1, "APtrArray<A3DWaterWave2 *>");
	SetCnet(0x011DA6F8, 1, "APtrArray<A3DWaterMeshBlock2 *>");
	SetCnet(0x011DA700, 1, "A3DWaterArea2");
	SetCnet(0x011DA8D0, 9, "A3DTerrain2Loader");
	SetCnet(0x011DA8F8, 1, "AArray<A3DTrn2SubLoaderB::LAYER,A3DTrn2SubLoaderB::LAYER &>");
	SetCnet(0x011DA900, 2, "A3DTrn2SubLoaderB");
	SetCnet(0x011DA90C, 1, "APtrArray<A3DTrn2SubLoaderB *>");
	SetCnet(0x011DA914, 10, "A3DTerrain2LoaderB");
	SetCnet(0x011DB7A4, 14, "A3DOrthoCamera");
	SetCnet(0x011DB7E0, 1, "AArray<A3DTerrain2CullHC::BLKEDGE,A3DTerrain2CullHC::BLKEDGE &>");
	SetCnet(0x011DB7E8, 6, "A3DTerrain2CullHC");
	SetCnet(0x011DB930, 7, "A3DSkinModelHanger");
	SetCnet(0x011DBCFC, 1, "APtrArray<A3DSkinModelActionCore *>");
	SetCnet(0x011DBD04, 1, "A3DSkinModelMan");
	SetCnet(0x011DDEF4, 13, "");
	SetCnet(0x011DE104, 11, "A3DCBPlayer9");
	SetCnet(0x011E142C, 12, "");
	SetCnet(0x011E1610, 1, "APtrArray<AStack<A3DRenderTargetMan::RT_SURFS,A3DRenderTargetMan::RT_SURFS &> *>");
	SetCnet(0x011E1618, 1, "APtrArray<A3DRenderTarget *>");
	SetCnet(0x011E1620, 1, "APtrArray<A3DCubeRenderTarget *>");
	SetCnet(0x011E1628, 1, "A3DRenderTargetMan");
	SetCnet(0x011E1630, 1, "AArray<A3DRenderTargetMan::RT_SURFS,A3DRenderTargetMan::RT_SURFS &>");
	SetCnet(0x011E1638, 1, "AStack<A3DRenderTargetMan::RT_SURFS,A3DRenderTargetMan::RT_SURFS &>");
	SetCnet(0x011E1824, 1, "A3DVertexDecl");
	SetCnet(0x011E182C, 5, "A3DVertexShader");
	SetCnet(0x011E18E4, 5, "A3DPixelShader");
	SetCnet(0x011E1960, 1, "APtrList<A3DShaderMan::SHADERNODE *>");
	SetCnet(0x011E1968, 1, "A3DShaderMan");
	SetCnet(0x011E1BB8, 15, "A3DVolumeTexture");
	SetCnet(0x011E1DA4, 10, "A3DCubeTexture");
	SetCnet(0x011E1E28, 1, "AArray<A3DLitMeshSharedData *,A3DLitMeshSharedData * &>");
	SetCnet(0x011E1EF0, 1, "AArray<A3DMeshCollector::_MESHINFO *,A3DMeshCollector::_MESHINFO *>");
	SetCnet(0x011E1EF8, 1, "A3DMeshCollector");
	SetCnet(0x011E1FD0, 9, "A3DJoint");
	SetCnet(0x011E1FF8, 9, "A3DAnimJoint");
	SetCnet(0x011E2020, 9, "A3DControlledJoint");
	SetCnet(0x011E2048, 9, "A3DSpringJoint");
	SetCnet(0x011E2070, 9, "A3DAxisSpringJoint");
	SetCnet(0x011E21C0, 1, "A3DControl");
	SetCnet(0x011E21C8, 1, "APtrArray<A3DTerrain2LOD *>");
	SetCnet(0x011E21D0, 1, "A3DTerrain2Env");
	SetCnet(0x011E2EE4, 2, "A3DModel");
	SetCnet(0x011E3A30, 1, "APtrList<A2DSpriteTexMan::TEXTURERECORD *>");
	SetCnet(0x011E3A38, 1, "A2DSpriteTexMan");
	SetCnet(0x011E3A40, 1, "AUITextureAtlas");
	SetCnet(0x011E3CC0, 1, "A3DMoxMan");
	SetCnet(0x011E3F00, 1, "A3DImageModelMan");
	SetCnet(0x011E3F08, 1, "APtrList<A3DSkinRender::MESHNODE *>");
	SetCnet(0x011E3F10, 1, "APtrArray<A3DSkinRender::RENDERSLOT *>");
	SetCnet(0x011E3F18, 1, "APtrArray<A3DSkinRender::MESHNODE *>");
	SetCnet(0x011E3F20, 1, "AArray<A3DSkinRender::MODIFIERITEM,A3DSkinRender::MODIFIERITEM &>");
	SetCnet(0x011E3F28, 15, "A3DSkinRender");
	SetCnet(0x011E4054, 1, "APtrList<A3DSkinRenderWithEffect::MESHNODE *>");
	SetCnet(0x011E405C, 1, "APtrArray<A3DSkinRenderWithEffect::RENDERSLOT *>");
	SetCnet(0x011E4064, 1, "APtrArray<A3DSkinRenderWithEffect::MESHNODE *>");
	SetCnet(0x011E406C, 1, "AArray<A3DSkinRenderWithEffect::MODIFIERITEM,A3DSkinRenderWithEffect::MODIFIERITEM &>");
	SetCnet(0x011E4074, 15, "A3DSkinRenderWithEffect");
	SetCnet(0x011E4270, 1, "APtrArray<A3DMeshSorter::MESHNODE *>");
	SetCnet(0x011E4278, 1, "APtrList<A3DMeshSorter::MESHNODE *>");
	SetCnet(0x011E4280, 1, "A3DMeshSorter");
	SetCnet(0x011E42EC, 1, "A3DVertexCollector");
	SetCnet(0x011E4524, 5, "A3DOcclusionProxy");
	SetCnet(0x011E453C, 10, "A3DOcclusionMan");
	SetCnet(0x011E4568, 1, "AArray<A3DOcclusionProxyHW *,A3DOcclusionProxyHW * &>");
	SetCnet(0x011E4570, 10, "A3DOcclusionManHW");
	SetCnet(0x011E459C, 5, "A3DOcclusionManHW");
	SetCnet(0x011E45B4, 5, "A3DOcclusionProxyHW");
	SetCnet(0x011E4824, 1, "AArray<A3DMipmapBuffer::MipmapRec *,A3DMipmapBuffer::MipmapRec * &>");
	SetCnet(0x011E482C, 1, "AArray<A3DOcclusionProxySW *,A3DOcclusionProxySW * &>");
	SetCnet(0x011E4834, 1, "AArray<A3DVECTOR4,A3DVECTOR4 &>");
	SetCnet(0x011E483C, 10, "A3DOcclusionManSW");
	SetCnet(0x011E4868, 5, "A3DOcclusionProxySW");
	SetCnet(0x011E4A08, 10, "A3DShadowMap::A3DShadowMapTexture");
	SetCnet(0x011E4D90, 3, "AStatGroup");
	SetCnet(0x011E4F1C, 2, "A3DHLSLDataSrcInclude");
	SetCnet(0x011E4F28, 2, "A3DHLSLDataSrc");
	SetCnet(0x011E52C8, 1, "APtrArray<A3DMorphMesh::CHANNEL *>");
	SetCnet(0x011E52D0, 1, "A3DMorphMesh");
	SetCnet(0x011E56D4, 1, "AArray<A3DClothMeshImp::VERTEX_INFO,A3DClothMeshImp::VERTEX_INFO &>");
	SetCnet(0x011E56DC, 13, "A3DClothMeshImp");
	SetCnet(0x011E5714, 18, "A3DCustomMeshImp");
	SetCnet(0x011E5794, 1, "APtrArray<void *>");
	SetCnet(0x011E579C, 11, "A3DShader");
	SetCnet(0x011E62E0, 1, "APtrArray<A3DTrn2RenderSlot *>");
	SetCnet(0x011E62E8, 1, "A3DTerrain2Render");
	SetCnet(0x011E62F0, 1, "A3DTerrain2TexMerger");
	SetCnet(0x011E62F8, 1, "APtrArray<A3DTerrain2Block::RENDERDATA *>");
	SetCnet(0x011E63D4, 9, "A3DTerrain2LoaderA");
	SetCnet(0x011E6D84, 13, "A3DMeshBase");
	SetCnet(0x011E6DBC, 8, "A3DTerrainWater2Render");
	SetCnet(0x011E6DE0, 9, "A3DTerrainWater2SimpleRender");
	SetCnet(0x011E6F68, 8, "A3DTerrainWater2NormalRender");
	SetCnet(0x011E6F8C, 5, "A3DTerrainWater2NormalRender");
	SetCnet(0x011E7460, 14, "A3DRigidMesh");
	SetCnet(0x011E79DC, 15, "A3DMorphRigidMesh");
	SetCnet(0x011E7AC0, 18, "A3DMorphSkinMesh");
	SetCnet(0x011E7BEC, 13, "A3DSuppleMesh");
	SetCnet(0x011E7F14, 13, "A3DMuscleMesh");
	SetCnet(0x011E8154, 1, "A3DTerrain2LOD");
	SetCnet(0x011E8298, 1, "A3DAbsTrackMaker");
	SetCnet(0x011E82A0, 1, "APtrArray<A3DSklTrackSet::BONETRACK *>");
	SetCnet(0x011E82DC, 2, "A3DGFXPlayEvent");
	SetCnet(0x011E82E8, 2, "A3DGraphicsFX");
	SetCnet(0x011E8774, 24, "A3DSuperSpray");
	SetCnet(0x011E884C, 6, "A3DSky");
	SetCnet(0x011E89E4, 1, "A3DHorizonCull");
	SetCnet(0x011E8ABC, 5, "A3DCoverageMap");
	SetCnet(0x011E8D94, 1, "A3DTrn2RenderSlot");
	SetCnet(0x011E8D9C, 1, "AList2<A3DTrn2StreamMan::STREAM_NODE,A3DTrn2StreamMan::STREAM_NODE &>");
	SetCnet(0x011E8DA4, 1, "A3DTrn2StreamMan");
	SetCnet(0x011E8EBC, 1, "AList2<A3DTrn2StreamMan::STREAM_NODE,A3DTrn2StreamMan::STREAM_NODE &>::c_NodePool");
	SetCnet(0x011E8F20, 1, "A3DSimpleQuad");
	SetCnet(0x011E8FD4, 3, "A3DDecal");
	SetCnet(0x011E90A8, 3, "A3DSuperDecal");
	SetCnet(0x011E91C8, 2, "A3DBillBoard");
	SetCnet(0x011E9370, 24, "A3DPArray");
	SetCnet(0x011E9874, 1, "APtrList<A3DCombActDynData *>");
	SetCnet(0x011E987C, 1, "APtrList<CECModel::ChannelActNode *>");
	SetCnet(0x011E9884, 1, "APtrList<AM3DSoundBuffer *>");
	SetCnet(0x011E988C, 16, "CECModel");
	SetCnet(0x011E9BA4, 1, "AList2<TrackBoneVelocity::NODE,TrackBoneVelocity::NODE &>");
	SetCnet(0x011E9E3C, 1, "AList2<TrackBoneVelocity::NODE,TrackBoneVelocity::NODE &>::c_NodePool");
	SetCnet(0x011EA014, 2, "IExitAction");
	SetCnet(0x011EA020, 2, "IOperation");
	SetCnet(0x011EA02C, 2, "OptStart");
	SetCnet(0x011EA038, 2, "OptPause");
	SetCnet(0x011EA044, 2, "OptStop");
	SetCnet(0x011EA050, 2, "OptResume");
	SetCnet(0x011EA05C, 1, "APtrList<A3DGFXElement *>");
	SetCnet(0x011EA064, 3, "A3DGFXEx");
	SetCnet(0x011EA2C8, 2, "GfxIdleAction");
	SetCnet(0x011EA354, 2, "GfxWaitingAction");
	SetCnet(0x011EA3D4, 5, "A3DSharedStream");
	SetCnet(0x011EA3EC, 1, "APtrList<A3DGFXEx *>");
	SetCnet(0x011EA3F4, 1, "CachedItemMan<A3DGFXEx *>");
	SetCnet(0x011EA3FC, 1, "APtrList<A3DParticle *>");
	SetCnet(0x011EA404, 1, "APtrList<A3DGFXExMan::FadeOutGfx *>");
	SetCnet(0x011EA40C, 1, "APtrList<A3DGFXExMan::PlayedSfx *>");
	SetCnet(0x011EA414, 3, "AStatBase");
	SetCnet(0x011EA424, 3, "AStat<unsigned int>");
	SetCnet(0x011EA434, 3, "AStatCounter");
	SetCnet(0x011EA444, 3, "ACycleCounter");
	SetCnet(0x011EA454, 3, "A3DGFXStatGroup");
	SetCnet(0x011EA558, 1, "CachedItemMan<A3DTexture *>");
	SetCnet(0x011EA560, 9, "A3DGFXInterface");
	SetCnet(0x011EA588, 9, "A3DGFXInterfaceDefImpl");
	SetCnet(0x011EA5B0, 9, "EditorGFXInterfaceDefImpl");
	SetCnet(0x011EA6CC, 1, "CachedItem<A3DGFXEx *>");
	SetCnet(0x011EA8FC, 8, "A3DGFXKeyPoint");
	SetCnet(0x011EA920, 12, "A3DGFXCtrlMove");
	SetCnet(0x011EA954, 12, "A3DGFXCtrlRot");
	SetCnet(0x011EA988, 12, "A3DGFXCtrlRotAxis");
	SetCnet(0x011EA9BC, 12, "A3DGFXCtrlRevol");
	SetCnet(0x011EA9F0, 12, "A3DGFXCtrlCentriMove");
	SetCnet(0x011EAA24, 12, "A3DGFXCtrlColorChange");
	SetCnet(0x011EAA58, 12, "A3DGFXCtrlClTrans");
	SetCnet(0x011EAA8C, 12, "A3DGFXCtrlScaleTrans");
	SetCnet(0x011EAAC0, 12, "A3DGFXCtrlScaleChange");
	SetCnet(0x011EAAF4, 12, "A3DGFXCtrlColorNoise");
	SetCnet(0x011EAB28, 12, "A3DGFXCtrlScaleNoise");
	SetCnet(0x011EAB5C, 12, "A3DGFXCtrlJitter");
	SetCnet(0x011EAB90, 12, "A3DGFXCtrlCurveMove");
	SetCnet(0x011EAC74, 1, "AArray<ACTIONDYN_DATA,ACTIONDYN_DATA &>");
	SetCnet(0x011EAC7C, 5, "A3DCombActDynData");
	SetCnet(0x011EAC94, 5, "A3DWalkRunDynData");
	SetCnet(0x011EACAC, 5, "A3DWalkRunUpDownDynData");
	SetCnet(0x011EACC4, 5, "A3DRunTurnDynData");
	SetCnet(0x011EACDC, 4, "_SGC::GFX_CUSTOM_MOVE_PARAM");
	SetCnet(0x011EACF0, 4, "_SGC::GFX_CUSTOM_LINK_MOVE_PARAM");
	SetCnet(0x011EAD04, 4, "_SGC::GFX_CUSTOM_PARAMBOLIC_MOVE_PARAM");
	SetCnet(0x011EAD18, 4, "_SGC::GFX_CUSTOM_MISSILE_MOVE_PARAM");
	SetCnet(0x011EAD2C, 4, "_SGC::GFX_CUSTOM_METEORIC_MOVE_PARAM");
	SetCnet(0x011EAD40, 7, "_SGC::CGfxMoveBase");
	SetCnet(0x011EAD60, 7, "_SGC::CGfxLinearMove");
	SetCnet(0x011EAD80, 7, "_SGC::CGfxParabolicMove");
	SetCnet(0x011EADA0, 7, "_SGC::CGfxMissileMove");
	SetCnet(0x011EADC0, 7, "_SGC::CGfxMeteoricMove");
	SetCnet(0x011EADE0, 7, "_SGC::CGfxHelixMove");
	SetCnet(0x011EAE00, 7, "_SGC::CGfxCurvedMove");
	SetCnet(0x011EAE20, 7, "_SGC::CGfxAccMove");
	SetCnet(0x011EAE40, 7, "_SGC::CGfxOnTargetMove");
	SetCnet(0x011EAE60, 7, "_SGC::CGfxOnTargetFixMove");
	SetCnet(0x011EAE80, 7, "_SGC::CGfxLinkMove");
	SetCnet(0x011EAEA0, 7, "_SGC::CGfxRandMove");
	SetCnet(0x011EAEC0, 7, "_SGC::CGfxCustomParabolicMove");
	SetCnet(0x011EAEE0, 7, "_SGC::CGfxCustomMissileMove");
	SetCnet(0x011EAF00, 7, "_SGC::CGfxCustomMeteoricMove");
	SetCnet(0x011EAF20, 9, "_SGC::A3DSkillGfxEvent");
	SetCnet(0x011EB230, 1, "GfxSoundParamInfo");
	SetCnet(0x011EB238, 7, "EVENT_INFO");
	SetCnet(0x011EB258, 7, "FX_BASE_INFO");
	SetCnet(0x011EB278, 5, "FX_BINDING_BASE");
	SetCnet(0x011EB290, 7, "GFX_INFO");
	SetCnet(0x011EB2B0, 7, "SFX_INFO");
	SetCnet(0x011EB2D0, 5, "SFX_BINDING");
	SetCnet(0x011EB2E8, 8, "AUDIOEVENT_INFO");
	SetCnet(0x011EB30C, 7, "ChildActInfo");
	SetCnet(0x011EB32C, 7, "MaterialScaleChange");
	SetCnet(0x011EB34C, 5, "MATCHG_BINDING");
	SetCnet(0x011EB364, 7, "SGCAttackPointMark");
	SetCnet(0x011EB384, 7, "GfxScriptEvent");
	SetCnet(0x011EB3A4, 7, "CameraControlEvent");
	SetCnet(0x011EB3C4, 1, "APtrArray<BoneScaleChange::BoneScaleParam *>");
	SetCnet(0x011EB3CC, 7, "BoneScaleChange");
	SetCnet(0x011EB3EC, 7, "MaterialScaleTrans");
	SetCnet(0x011EB40C, 1, "APtrList<ACTION_INFO *>");
	SetCnet(0x011EB414, 1, "APtrList<EVENT_INFO *>");
	SetCnet(0x011EB41C, 2, "A3DCombinedAction");
	SetCnet(0x011EB968, 5, "GFX_BINDING");
	SetCnet(0x011EBAAC, 10, "APhysXObjectConnectorDesc");
	SetCnet(0x011EBAD8, 11, "APhysXJointDesc");
	SetCnet(0x011EBB08, 11, "APhysXFixedJointDesc");
	SetCnet(0x011EBB38, 1, "AArray<APhysXObjectConnector *,APhysXObjectConnector * &>");
	SetCnet(0x011EBB40, 1, "APtrArray<A3DModelPhysics::SKIN_SLOT *>");
	SetCnet(0x011EBB48, 1, "APtrArray<A3DModelPhysics::EMBED_ACTOR *>");
	SetCnet(0x011EBB50, 1, "APtrArray<NxActor *>");
	SetCnet(0x011EBB58, 1, "A3DModelPhysics");
	SetCnet(0x011EBC18, 1, "AArray<HL_CONNECT,HL_CONNECT &>");
	SetCnet(0x011EBE70, 4, "IShakeCamera");
	SetCnet(0x011EBE84, 4, "ShakeCamera");
	SetCnet(0x011EBE98, 4, "ShakeCamera2");
	SetCnet(0x011EBEAC, 1, "SANone");
	SetCnet(0x011EBEB4, 1, "SADampingLinear");
	SetCnet(0x011EBEBC, 1, "SADampingQuadratic");
	SetCnet(0x011EC9A4, 2, "IRenderEvent");
	SetCnet(0x011EC9B0, 1, "A3DGFXKeyPointSet");
	SetCnet(0x011EC9B8, 2, "GfxRenderEvent");
	SetCnet(0x011EC9C4, 51, "A3DGFXElement");
	SetCnet(0x011ECA94, 51, "A3DGFXRing");
	SetCnet(0x011ECB64, 51, "A3DGFXLtnBolt");
	SetCnet(0x011ECC34, 51, "A3DParaboloid");
	SetCnet(0x011ECFE8, 2, "GFXReplaceHLSL");
	SetCnet(0x011ED0AC, 1, "ECMActionBlurInfo");
	SetCnet(0x011ED128, 3, "ECMActionBlurReplaceHLSL");
	SetCnet(0x011ED14C, 3, "NxShapeDesc");
	SetCnet(0x011ED15C, 3, "NxForceFieldShapeDesc");
	SetCnet(0x011ED16C, 3, "NxSphereForceFieldShapeDesc");
	SetCnet(0x011ED17C, 3, "NxSphereShapeDesc");
	SetCnet(0x011ED18C, 1, "APhysXRefCountable");
	SetCnet(0x011ED194, 4, "APhysXActorDesc");
	SetCnet(0x011ED1A8, 14, "APhysXShapeDesc");
	SetCnet(0x011ED1E4, 14, "APhysXSphereShapeDesc");
	SetCnet(0x011ED220, 6, "APhysXObjectDesc");
	SetCnet(0x011ED23C, 4, "APhysXObjectDesc");
	SetCnet(0x011ED250, 8, "APhysXRigidBodyObjectDesc");
	SetCnet(0x011ED274, 4, "APhysXRigidBodyObjectDesc");
	SetCnet(0x011ED288, 8, "APhysXDynamicRBObjectDesc");
	SetCnet(0x011ED2AC, 4, "APhysXDynamicRBObjectDesc");
	SetCnet(0x011ED2C0, 6, "APhysXCompoundObjectDesc");
	SetCnet(0x011ED2DC, 4, "APhysXCompoundObjectDesc");
	SetCnet(0x011ED2F0, 10, "APhysXAttacherDesc");
	SetCnet(0x011ED31C, 4, "APhysXAttacherDesc");
	SetCnet(0x011ED348, 10, "APhysXRBAttacherDesc");
	SetCnet(0x011ED374, 4, "APhysXRBAttacherDesc");
	SetCnet(0x011ED3A4, 1, "APtrArray<A3DModelPhysSyncData::BONE_DATA *>");
	SetCnet(0x011ED3AC, 1, "APtrArray<A3DModelPhysSyncData::JOINT_DATA *>");
	SetCnet(0x011ED3B4, 2, "A3DModelPhysSyncData::ACTOR_DATA");
	SetCnet(0x011ED3C0, 1, "APtrArray<A3DModelPhysSyncData::ACTOR_DATA *>");
	SetCnet(0x011ED3C8, 1, "APtrArray<A3DModelPhysSyncData::ATTACHER_DATA *>");
	SetCnet(0x011ED3D0, 1, "APtrArray<SoftKeyFrameConfigDesc *>");
	SetCnet(0x011ED3D8, 1, "APtrArray<SoftKeyFrameDescNotify *>");
	SetCnet(0x011ED3E0, 1, "A3DModelPhysSyncData");
	SetCnet(0x011ED484, 2, "NxUserContactReport");
	SetCnet(0x011ED490, 3, "NxJointDesc");
	SetCnet(0x011ED4A0, 3, "NxD6JointDesc");
	SetCnet(0x011ED4B0, 4, "APhysXUserBreakReport");
	SetCnet(0x011ED4C4, 4, "APhysXObjectInstanceDesc");
	SetCnet(0x011ED4D8, 2, "SoftKeyFrameDescNotify");
	SetCnet(0x011ED4E4, 2, "PhysD6JointDriveInfo");
	SetCnet(0x011ED4F0, 1, "APtrArray<A3DModelPhysSync::ACTOR_IMP *>");
	SetCnet(0x011ED4F8, 1, "APtrArray<A3DModelPhysSync::JOINT_IMP *>");
	SetCnet(0x011ED500, 1, "APtrArray<A3DModelPhysSync::ATTACHER_LINK *>");
	SetCnet(0x011ED508, 1, "AArray<A3DModelPhysSync::BONE_MAT,A3DModelPhysSync::BONE_MAT &>");
	SetCnet(0x011ED510, 1, "APtrArray<A3DModelPhysSync::BONE_SCALE_CACHE_DATA *>");
	SetCnet(0x011ED518, 1, "AArray<bool,bool const &>");
	SetCnet(0x011ED520, 1, "APtrArray<A3DModelPhysSync::ROTATION_BONE_INFO *>");
	SetCnet(0x011ED528, 1, "A3DModelPhysSync");
	SetCnet(0x011ED530, 4, "ASkinModelBreakReport");
	SetCnet(0x011ED544, 2, "AECMHitGroundReport");
	SetCnet(0x011EEFC0, 16, "A3DHLPixelShader");
	SetCnet(0x011EF188, 16, "A3DHLPixelShaderA22");
	SetCnet(0x011EF23C, 5, "IGFXPhysSyncData");
	SetCnet(0x011EF254, 1, "A3DGFXPhysDataMan");
	SetCnet(0x011EF454, 1, "CachedItem<A3DTexture *>");
	SetCnet(0x011EF45C, 2, "FBaseGraphTask");
	SetCnet(0x011EF59C, 2, "TGraphTask<GfxTickAnimationTask>");
	SetCnet(0x011EF5A8, 2, "TGraphTask<GfxComputeVTXTask>");
	SetCnet(0x011EF610, 6, "std::_Func_base<bool,unsigned __int64>");
	SetCnet(0x011EF62C, 6, "std::_Func_base<unsigned int,unsigned __int64>");
	SetCnet(0x011EF648, 9, "std::_Func_impl<<lambda_ba065b736a31fd22cbcee9fd86a04836>,std::allocator<int>,bool,unsigned __int64>");
	SetCnet(0x011EF73C, 6, "RenderActionBase");
	SetCnet(0x011EF758, 6, "RATriangleList");
	SetCnet(0x011EF774, 6, "RATriangleStrip");
	SetCnet(0x011EF790, 6, "RAModelPrimitive");
	SetCnet(0x011EF7AC, 6, "RAPointList");
	SetCnet(0x011EF9F4, 9, "A3DGFXInterfaceDefImpl2");
	SetCnet(0x011EFA5C, 5, "MODEL_SCALE_BINDING");
	SetCnet(0x011EFA74, 5, "MATTRANS_BINDING");
	SetCnet(0x011EFA8C, 1, "RandStringContainer");
	SetCnet(0x011EFA94, 10, "APhysXClothAttacherDesc");
	SetCnet(0x011EFAC0, 4, "APhysXClothAttacherDesc");
	SetCnet(0x011EFAD4, 1, "AArray<A3DSkinPhysSync::RBACTOR_LINK,A3DSkinPhysSync::RBACTOR_LINK &>");
	SetCnet(0x011EFADC, 1, "APtrArray<A3DSkinPhysSync::AnimVertInfo *>");
	SetCnet(0x011EFAE4, 1, "APtrArray<A3DAdhereMesh *>");
	SetCnet(0x011EFAEC, 1, "A3DSkinPhysSync");
	SetCnet(0x011EFD5C, 6, "APhysXSimpleMeshDesc");
	SetCnet(0x011EFD78, 8, "APhysXSkeletonRBObjectDesc");
	SetCnet(0x011EFD9C, 4, "APhysXSkeletonRBObjectDesc");
	SetCnet(0x011EFDB0, 6, "APhysXClothObjectDesc");
	SetCnet(0x011EFDCC, 4, "APhysXClothObjectDesc");
	SetCnet(0x011EFDE0, 1, "AArray<unsigned long,unsigned long &>");
	SetCnet(0x011EFDE8, 2, "A3DSkinPhysSyncData::ACTOR_DATA");
	SetCnet(0x011EFDF4, 1, "APtrArray<A3DSkinPhysSyncData::ACTOR_DATA *>");
	SetCnet(0x011EFDFC, 1, "APtrArray<A3DSkinPhysSyncData::MESH_DATA *>");
	SetCnet(0x011EFE04, 1, "APtrArray<A3DSkinPhysSyncData::SRC_MESH *>");
	SetCnet(0x011EFE0C, 1, "A3DSkinPhysSyncData");
	SetCnet(0x011EFE14, 1, "A3DSkinPhysSyncDataMan");
	SetCnet(0x011EFE1C, 1, "APtrArray<A3DMeshBase *>");
	SetCnet(0x011EFE24, 1, "AArray<ACTOR_DESC *,ACTOR_DESC * &>");
	SetCnet(0x011F035C, 20, "A3DAnimatableBase");
	SetCnet(0x011F03B0, 20, "A3DAnimatableImpl<1,A3DAnimatableIntAdapter>");
	SetCnet(0x011F0404, 20, "A3DAnimatable_PSConstInt");
	SetCnet(0x011F0458, 20, "A3DAnimatableImpl<1,A3DAnimatableFloatAdapter>");
	SetCnet(0x011F04AC, 20, "A3DAnimatable_PSConstFloat");
	SetCnet(0x011F0500, 20, "A3DAnimatableImpl<1,A3DAnimatableVector2Adapter>");
	SetCnet(0x011F0554, 20, "A3DAnimatable_PSConstVector2");
	SetCnet(0x011F05A8, 20, "A3DAnimatableImpl<1,A3DAnimatableVector3Adapter>");
	SetCnet(0x011F05FC, 20, "A3DAnimatable_PSConstVector3");
	SetCnet(0x011F0650, 20, "A3DAnimatableImpl<1,A3DAnimatableVector4Adapter>");
	SetCnet(0x011F06A4, 20, "A3DAnimatable_PSConstVector4");
	SetCnet(0x011F06F8, 20, "A3DAnimatableImpl<1,A3DAnimatableColorAdapter>");
	SetCnet(0x011F074C, 20, "A3DAnimatable_PSConstColor");
	SetCnet(0x011F07A0, 20, "A3DAnimatableImpl<0,A3DAnimatableIntAdapter>");
	SetCnet(0x011F07F4, 20, "A3DAnimatable_ApplyNoneInt");
	SetCnet(0x011F0848, 20, "A3DAnimatableImpl<0,A3DAnimatableFloatAdapter>");
	SetCnet(0x011F089C, 20, "A3DAnimatable_ApplyNoneFloat");
	SetCnet(0x011F08F0, 20, "A3DAnimatableImpl<0,A3DAnimatableVector2Adapter>");
	SetCnet(0x011F0944, 20, "A3DAnimatable_ApplyNoneVector2");
	SetCnet(0x011F0998, 20, "A3DAnimatableImpl<0,A3DAnimatableVector3Adapter>");
	SetCnet(0x011F09EC, 20, "A3DAnimatable_ApplyNoneVector3");
	SetCnet(0x011F0A40, 20, "A3DAnimatableImpl<0,A3DAnimatableVector4Adapter>");
	SetCnet(0x011F0A94, 20, "A3DAnimatable_ApplyNoneVector4");
	SetCnet(0x011F0AE8, 20, "A3DAnimatableImpl<0,A3DAnimatableColorAdapter>");
	SetCnet(0x011F0B3C, 20, "A3DAnimatable_ApplyNoneColor");
	SetCnet(0x011F0DD8, 51, "A3DGFXLight");
	SetCnet(0x011F0EA8, 51, "A3DDecalEx");
	SetCnet(0x011F1044, 51, "A3DGFXContainer");
	SetCnet(0x011F1278, 57, "A3DGFXLightning");
	SetCnet(0x011F13B4, 57, "A3DGFXLightningEx");
	SetCnet(0x011F149C, 51, "A3DGFXModel");
	SetCnet(0x011F15E4, 51, "A3DGFXECModel");
	SetCnet(0x011F17E8, 52, "A3DGFXSound");
	SetCnet(0x011F18BC, 51, "A3DGridDecalEx");
	SetCnet(0x011F1AD0, 51, "A3DLtnTrail");
	SetCnet(0x011F1C88, 51, "A3DParticleSystemEx");
	SetCnet(0x011F1E68, 54, "A3DTrail");
	SetCnet(0x011F1F5C, 56, "A3DPhysElement");
	SetCnet(0x011F2160, 54, "A3DRibbon");
	SetCnet(0x011F223C, 51, "A3DGFXModelProxy");
	SetCnet(0x011F2340, 6, "ModelState");
	SetCnet(0x011F235C, 6, "UnActivedState");
	SetCnet(0x011F2378, 6, "ActivedState");
	SetCnet(0x011F2394, 6, "FinishedState");
	SetCnet(0x011F240C, 54, "A3DTrailEx");
	SetCnet(0x011F24E8, 1, "APtrArray<APhysXShapeDesc *>");
	SetCnet(0x011F24F0, 2, "A3DPhysActor");
	SetCnet(0x011F24FC, 1, "APhysXGraph");
	SetCnet(0x011F2504, 4, "APhysXGraph");
	SetCnet(0x011F2518, 8, "APhysXSimpleBreakableSkeletonRBObjectDesc");
	SetCnet(0x011F253C, 4, "APhysXSimpleBreakableSkeletonRBObjectDesc");
	SetCnet(0x011F2550, 8, "APhysXBreakableSkeletonRBObjectDesc");
	SetCnet(0x011F2574, 4, "APhysXBreakableSkeletonRBObjectDesc");
	SetCnet(0x011F2588, 8, "A3DPhysRBCreator");
	SetCnet(0x011F25AC, 8, "A3DPhysNoneBreakableRBCreator");
	SetCnet(0x011F25D0, 8, "A3DPhysSimpleBreakableRBCreator");
	SetCnet(0x011F25F4, 8, "A3DPhysBreakableRBCreator");
	SetCnet(0x011F2618, 3, "NxBoxForceFieldShapeDesc");
	SetCnet(0x011F2628, 3, "NxBoxShapeDesc");
	SetCnet(0x011F2638, 14, "APhysXBoxShapeDesc");
	SetCnet(0x011F2674, 6, "APhysXFluidObjectDesc");
	SetCnet(0x011F2690, 4, "APhysXFluidObjectDesc");
	SetCnet(0x011F26A4, 6, "APhysXOrientedParticleObjectDesc");
	SetCnet(0x011F26C0, 4, "APhysXOrientedParticleObjectDesc");
	SetCnet(0x011F26D4, 10, "APhysXFluidEmitterAttacherDesc");
	SetCnet(0x011F2700, 4, "APhysXFluidEmitterAttacherDesc");
	SetCnet(0x011F2734, 9, "IPhysXFluidObjectDescCreator");
	SetCnet(0x011F275C, 9, "A3DNormalFluidObjectDescCreator");
	SetCnet(0x011F2784, 9, "A3DOrientFluidObjectDescCreator");
	SetCnet(0x011F27AC, 5, "A3DPhysFluidSyncData");
	SetCnet(0x011F2960, 2, "A3DAdhereMesh");
	SetCnet(0x011F2B20, 9, "A3DGFXAnimable");
	SetCnet(0x011F2B48, 9, "A3DGFXFloatValueTrans");
	SetCnet(0x011F2B80, 6, "ECMLoader");
	SetCnet(0x011F2B9C, 6, "NormalLoader");
	SetCnet(0x011F2BB8, 6, "CustomECMLoader");
	SetCnet(0x011F2BD4, 6, "CustomSkinLoader");
	SetCnet(0x011F2D94, 14, "GFXSOUNDIMP");
	SetCnet(0x011F2DD0, 15, "GFXSOUNDIMP22");
	SetCnet(0x011F2E54, 20, "A3DParticleEmitter");
	SetCnet(0x011F2EA8, 20, "A3DAreaEmitter");
	SetCnet(0x011F2EFC, 20, "A3DBoxEmitter");
	SetCnet(0x011F2F50, 20, "A3DCurveEmitter");
	SetCnet(0x011F2FA4, 20, "A3DCylinderEmitter");
	SetCnet(0x011F2FF8, 20, "A3DEllipsoidEmitter");
	SetCnet(0x011F304C, 20, "A3DMultiPlaneEmitter");
	SetCnet(0x011F30B0, 20, "A3DPointEmitter");
	SetCnet(0x011F320C, 11, "ITrailList");
	SetCnet(0x011F323C, 12, "SplineTrailList");
	SetCnet(0x011F3270, 11, "LineTrailList");
	SetCnet(0x011F32A0, 12, "LineTrailGravityList");
	SetCnet(0x011F3390, 1, "A3DPhysParticle");
	SetCnet(0x011F3398, 56, "A3DPhysEmitter");
	SetCnet(0x011F34CC, 58, "A3DPhysPointEmitter");
	SetCnet(0x011F374C, 20, "A3DSkeletonEmitter");
	SetCnet(0x011F37A0, 56, "A3DPhysFluidEmitter");
	SetCnet(0x011F3898, 1, "AArray<A3DVECTOR3,A3DVECTOR3 const &>");
	SetCnet(0x011F38A0, 1, "AArray<CHBasedCD::CFace *,CHBasedCD::CFace *>");
	SetCnet(0x011F38A8, 9, "CHBasedCD::CConvexHullData");
	SetCnet(0x011F39A0, 1, "AArray<CHBasedCD::CHalfSpace,CHBasedCD::CHalfSpace const &>");
	SetCnet(0x011F39A8, 2, "CHBasedCD::CFace");
	SetCnet(0x011F42C4, 28, "AUIObject");
	SetCnet(0x011F4564, 34, "AUIDialog");
	SetCnet(0x011F5DB4, 26, "AUIManager");
	SetCnet(0x011F6570, 28, "AUIImagePicture");
	SetCnet(0x011F6A50, 28, "AUIScroll");
	SetCnet(0x011F6F44, 35, "AUILuaDialog");
	SetCnet(0x011F70D4, 28, "AUIProgress");
	SetCnet(0x011F7634, 29, "AUISubDialog");
	SetCnet(0x011F8030, 28, "AUICheckBox");
	SetCnet(0x011F8414, 29, "AUICtrlFolder");
	SetCnet(0x011F874C, 28, "AUISlider");
	SetCnet(0x011F8AAC, 28, "AUITextArea");
	SetCnet(0x011F8B20, 5, "AUITextTag");
	SetCnet(0x011F8B38, 3, "AUITextTagCache");
	SetCnet(0x011F8B48, 3, "AUITextTagQuote::AUITextTagQuoteCache");
	SetCnet(0x011F8B58, 5, "AUITextTagQuote");
	SetCnet(0x011F8B70, 5, "AUITextTagQuoteTA");
	SetCnet(0x011F935C, 29, "AUIListBox");
	SetCnet(0x011FA094, 28, "AUIStillImageButton");
	SetCnet(0x011FA408, 28, "AUIRadioButton");
	SetCnet(0x011FA6C4, 1, "ime_str_val");
	SetCnet(0x011FA6CC, 33, "AUIEditBox");
	SetCnet(0x011FAE8C, 28, "AUIComboBox");
	SetCnet(0x011FB2D0, 1, "AUIClockIcon");
	SetCnet(0x011FB360, 1, "AUIFrame");
	SetCnet(0x011FBCBC, 28, "AUILabel");
	SetCnet(0x011FBE5C, 28, "AUITreeView");
	SetCnet(0x011FCC08, 30, "AUIConsole");
	SetCnet(0x011FCD70, 1, "CWndManager");
	SetCnet(0x011FCDA4, 1, "AList2<CWndManager,CWndManager &>");
	SetCnet(0x011FCDAC, 1, "WNDLIST");
	SetCnet(0x011FCDB4, 1, "CWndThreadManager");
	SetCnet(0x011FCDBC, 1, "AList2<CWndManager,CWndManager &>::c_NodePool");
	SetCnet(0x011FCE5C, 33, "AUIWindowPicture");
	SetCnet(0x011FD148, 27, "AUILuaManager");
	SetCnet(0x011FD264, 1, "A2DDotLineMan");
	SetCnet(0x011FD43C, 5, "AUITextTagReturn");
	SetCnet(0x011FD454, 5, "AUITextTagCtrl");
	SetCnet(0x011FD46C, 5, "AUITextTagCtrlFont");
	SetCnet(0x011FD484, 5, "AUITextTagCtrlUnderline");
	SetCnet(0x011FD49C, 5, "AUITextTagCtrlUnderlineX");
	SetCnet(0x011FD4B4, 5, "AUITextTagCtrlWordspace");
	SetCnet(0x011FD4CC, 5, "AUITextTagCtrlDefaultColor");
	SetCnet(0x011FD4E4, 3, "AUITextTagCtrlChannel::AUITextTagCtrlChannelCache");
	SetCnet(0x011FD4F4, 5, "AUITextTagCtrlChannel");
	SetCnet(0x011FD50C, 5, "AUITextTagCtrlColor");
	SetCnet(0x011FD524, 7, "AUITextTagItem");
	SetCnet(0x011FD544, 3, "AUITextTagItemImage::AUITextTagItemImageCache");
	SetCnet(0x011FD554, 7, "AUITextTagItemImage");
	SetCnet(0x011FD574, 3, "AUITextTagItemEmotion::AUITextTagItemEmotionCache");
	SetCnet(0x011FD584, 7, "AUITextTagItemEmotion");
	SetCnet(0x011FD5A4, 7, "AUITextTagItemText");
	SetCnet(0x011FD5C4, 3, "AUITextTagItemBox::AUITextTagItemBoxCache");
	SetCnet(0x011FD5D4, 7, "AUITextTagItemBox");
	SetCnet(0x011FD5F4, 5, "AUITextTagFakReturn");
	SetCnet(0x011FD60C, 5, "AUITextTagTable");
	SetCnet(0x011FD624, 3, "AUITextTagTextCache");
	SetCnet(0x011FFDCC, 35, "AUITemplate");
	SetCnet(0x011FFE5C, 27, "AUITemplateManager");
	SetCnet(0x011FFECC, 5, "UIRenderTarget");
	SetCnet(0x011FFF7C, 30, "AUICustomize");
	SetCnet(0x01200024, 28, "AUIModelPicture");
	SetCnet(0x012003BC, 28, "AUIVerticalText");
	SetCnet(0x012009BC, 28, "AUIScrollNum");
	SetCnet(0x01200D4C, 1, "A2DDotLine");
	SetCnet(0x01200D54, 28, "AUIPicture");
	SetCnet(0x01200E04, 18, "A3DAlterableSkinModel");
	SetCnet(0x01200E50, 5, "FWFlatCollector");
	SetCnet(0x01200E68, 3, "FWTemplate");
	SetCnet(0x01201010, 1, "FWAssemblySet");
	SetCnet(0x01201024, 1, "AArray<FWRuntimeClass *,FWRuntimeClass *>");
	SetCnet(0x0120102C, 1, "FWArchive");
	SetCnet(0x01201150, 1, "APtrList<FWGlyph *>");
	SetCnet(0x01201158, 3, "FWObPtrList<FWGlyph *>");
	SetCnet(0x01201168, 1, "AList2<s_LISTPOSITION *,s_LISTPOSITION * &>");
	SetCnet(0x01201170, 8, "FWGlyphList");
	SetCnet(0x01201228, 1, "AList2<s_LISTPOSITION *,s_LISTPOSITION * &>::c_NodePool");
	SetCnet(0x012012F4, 51, "FWGlyphText");
	SetCnet(0x012013F4, 51, "FWGlyphFirework");
	SetCnet(0x012014D4, 13, "FWFireworkLanch");
	SetCnet(0x0120151C, 1, "FWLog");
	SetCnet(0x012015D8, 1, "AList2<AWString,AWString &>");
	SetCnet(0x012015E0, 1, "FWFontEnum");
	SetCnet(0x012015E8, 1, "AList2<AWString,AWString &>::c_NodePool");
	SetCnet(0x012015F0, 2, "FWInfo");
	SetCnet(0x012015FC, 2, "FWAssemblyInfo");
	SetCnet(0x01201608, 1, "APtrList<FWAssemblyInfo *>");
	SetCnet(0x01201610, 1, "FWInfoSet<FWAssemblyInfo>");
	SetCnet(0x01201618, 2, "FWAssemblyCache");
	SetCnet(0x012018B4, 2, "FWModifierInfo");
	SetCnet(0x012018C0, 1, "APtrList<FWModifierInfo *>");
	SetCnet(0x012018C8, 1, "FWInfoSet<FWModifierInfo>");
	SetCnet(0x012018D0, 2, "FWModifierCreator");
	SetCnet(0x012018F4, 2, "FWArtInfo");
	SetCnet(0x01201900, 1, "APtrList<FWArtInfo *>");
	SetCnet(0x01201908, 1, "FWInfoSet<FWArtInfo>");
	SetCnet(0x01201910, 2, "FWArtCreator");
	SetCnet(0x01201A24, 51, "FWGlyph");
	SetCnet(0x01201B08, 51, "FWGlyphGraphBase");
	SetCnet(0x01201D50, 1, "CCharOutline");
	SetCnet(0x01201D58, 1, "APtrList<CCharContour *>");
	SetCnet(0x01201E04, 1, "CGLUTess");
	SetCnet(0x01201E0C, 1, "APtrList<double *>");
	SetCnet(0x01201E94, 1, "CGLUPolygon");
	SetCnet(0x01201E9C, 1, "APtrList<CGLUContour *>");
	SetCnet(0x01201F2C, 1, "AArray<CTriangle,CTriangle &>");
	SetCnet(0x01201F34, 1, "CMesh");
	SetCnet(0x01202044, 16, "FWDialogText");
	SetCnet(0x01202184, 13, "FWFireworkLeaf");
	SetCnet(0x012021BC, 3, "FWAssemblyProfile");
	SetCnet(0x012022B4, 18, "FWState");
	SetCnet(0x01202310, 18, "FWStateSelect");
	SetCnet(0x01202384, 13, "FWDialogBase");
	SetCnet(0x01202460, 13, "FWDialogBoard");
	SetCnet(0x0120257C, 3, "FWCommandSetGlyphProp");
	SetCnet(0x012025F4, 1, "APtrList<FWFormula *>");
	SetCnet(0x012025FC, 1, "FWFormulaList");
	SetCnet(0x0120262C, 13, "FWModifierParabola");
	SetCnet(0x01202690, 13, "FWModifierRing");
	SetCnet(0x012026D8, 7, "FWArt");
	SetCnet(0x012026F8, 7, "FWArtNoChange");
	SetCnet(0x01202724, 7, "FWArtTilt");
	SetCnet(0x0120275C, 7, "FWArtArc");
	SetCnet(0x01202790, 7, "FWArtWave");
	SetCnet(0x012027DC, 7, "FWArtDoubleArc");
	SetCnet(0x01202818, 7, "FWArtStepScale");
	SetCnet(0x01202864, 3, "FWObject");
	SetCnet(0x01202880, 13, "FWFirework");
	SetCnet(0x012028C8, 13, "FWFireworkGraph");
	SetCnet(0x0120298C, 1, "APtrList<CCharCurve *>");
	SetCnet(0x01202A28, 1, "APtrList<CCharVerticesBuffer *>");
	SetCnet(0x01202AD4, 1, "CGLUContour");
	SetCnet(0x01202B70, 16, "FWDialogGraph");
	SetCnet(0x01202C44, 16, "FWDialogPropBase");
	SetCnet(0x01202D28, 2, "FWOutterProperty");
	SetCnet(0x01202D34, 1, "APtrList<FWOutterProperty *>");
	SetCnet(0x01202D3C, 1, "FWInfoSet<FWOutterProperty>");
	SetCnet(0x01202D44, 1, "FWOutterPropertyList");
	SetCnet(0x01202E3C, 18, "FWStateNetSelect");
	SetCnet(0x01202E9C, 18, "FWStateMoveHandle");
	SetCnet(0x01202EF4, 1, "AList2<APoint<int>,APoint<int> &>");
	SetCnet(0x01202EFC, 18, "FWStateMove");
	SetCnet(0x01202F48, 1, "AArray<FWGlyph *,FWGlyph *>");
	SetCnet(0x01202F50, 1, "AArray<APoint<int>,APoint<int> &>");
	SetCnet(0x01202F58, 1, "AList2<APoint<int>,APoint<int> &>::c_NodePool");
	SetCnet(0x01202F60, 18, "FWStateMoveWindow");
	SetCnet(0x01202FC0, 13, "FWDialogEdit");
	SetCnet(0x01203228, 13, "FWDialogMain");
	SetCnet(0x012032E4, 13, "FWDialogGraphMenu");
	SetCnet(0x01203354, 13, "FWDialogPlay");
	SetCnet(0x012033B8, 13, "FWDialogScale");
	SetCnet(0x01203444, 16, "FWDialogSimple");
	SetCnet(0x012034A0, 16, "FWDialogCustom");
	SetCnet(0x01203578, 1, "AArray<FWParam,FWParam &>");
	SetCnet(0x01203580, 13, "FWDialogParam");
	SetCnet(0x01203698, 16, "FWDialogLanch");
	SetCnet(0x012036F0, 13, "FWDialogBezierMenu");
	SetCnet(0x012039C0, 13, "FWDialogTool");
	SetCnet(0x01203A90, 13, "FWDialogPolygonMenu");
	SetCnet(0x01203BE8, 3, "FWCommand");
	SetCnet(0x01203BF8, 1, "APtrList<FWFormulaElement *>");
	SetCnet(0x01203C00, 1, "FWFormula");
	SetCnet(0x01203C08, 2, "FWOperand");
	SetCnet(0x01203C14, 2, "FWOperator");
	SetCnet(0x01203C20, 1, "AArray<FWFormulaElement *,FWFormulaElement *>");
	SetCnet(0x01203C28, 1, "AStack<FWFormulaElement *,FWFormulaElement *>");
	SetCnet(0x01203D7C, 13, "FWModifier");
	SetCnet(0x01203F54, 3, "FWCommandMoveHandle");
	SetCnet(0x01203F64, 3, "FWCommandMove");
	SetCnet(0x01203F74, 3, "FWCommandDelete");
	SetCnet(0x01203FCC, 3, "FWCommandCreate");
	SetCnet(0x01203FDC, 16, "FWSharedFile");
	SetCnet(0x012040A8, 18, "FWStateCreateFirework");
	SetCnet(0x01204108, 18, "FWStateCreateText");
	SetCnet(0x01204168, 13, "FWFireworkSimple");
	SetCnet(0x012041B4, 13, "FWFireworkCustom");
	SetCnet(0x01204200, 53, "FWGlyphRectangle");
	SetCnet(0x012042EC, 18, "FWStateCreateRect");
	SetCnet(0x01204348, 53, "FWGlyphEllipse");
	SetCnet(0x01204438, 2, "FWArray<APoint<int>,APoint<int> &>");
	SetCnet(0x01204444, 18, "FWStateCreatePolygon");
	SetCnet(0x01204490, 51, "FWGlyphPolygon");
	SetCnet(0x01204654, 18, "FWStateCreateBezier");
	SetCnet(0x012046A0, 2, "FWArray<int,int &>");
	SetCnet(0x012046AC, 51, "FWGlyphBezier");
	SetCnet(0x01204824, 3, "FWCommandSetBezierMode");
	SetCnet(0x01204834, 3, "FWCommandDuplicateHandle");
	SetCnet(0x01204844, 3, "FWCommandRemoveHandle");
	SetCnet(0x01204854, 3, "FWCommandCombine");
	SetCnet(0x01204864, 3, "FWCommandUnCombine");
	SetCnet(0x01204888, 1, "AList2<FWGlyphComposite::Ratio,FWGlyphComposite::Ratio &>");
	SetCnet(0x01204890, 51, "FWGlyphComposite");
	SetCnet(0x0120498C, 1, "AList2<FWGlyphComposite::Ratio,FWGlyphComposite::Ratio &>::c_NodePool");
	SetCnet(0x01204994, 18, "FWStateResize");
	SetCnet(0x01204AD8, 18, "FWStateRotate");
	SetCnet(0x01204B88, 2, "FWFormulaElement");
	SetCnet(0x01204E4C, 13, "FWFireworkElement");
	SetCnet(0x01204E94, 53, "FWGlyphRectBase");
	SetCnet(0x01204F94, 3, "FWCommandResize");
	SetCnet(0x01204FA4, 3, "FWCommandRotate");
	SetCnet(0x01204FB4, 6, "FWGfxWithModifier");
	SetCnet(0x01205054, 1, "CLuaState");
	SetCnet(0x01205108, 1, "CLuaMemTbl");
	SetCnet(0x01205334, 3, "CLuaScript");
	SetCnet(0x01205368, 3, "LDM_Interface");
	SetCnet(0x01205378, 3, "LDM_ReportError");
	SetCnet(0x01205388, 3, "LDM_SendAllLocalVar");
	SetCnet(0x01205398, 3, "LDM_SendWatchVar");
	SetCnet(0x012053A8, 3, "LDM_RunToCursor");
	SetCnet(0x012053B8, 3, "LDM_StackChange");
	SetCnet(0x012053C8, 3, "LDM_BreakPoint");
	SetCnet(0x0120544C, 1, "APtrList<LuaDebugMsg *>");
	SetCnet(0x01205454, 1, "CLuaDebug");
	SetCnet(0x01205538, 1, "CLuaDebugIPC");
	SetCnet(0x012056E4, 3, "LDM_SendBuffer");
	SetCnet(0x012056F4, 3, "LDM_Break");
	SetCnet(0x01205704, 3, "LDM_RequestWatchVar");
	SetCnet(0x012057A0, 3, "LDM_ShowBufferLine");
	SetCnet(0x012057B0, 1, "CDebugger");
	SetCnet(0x012057C8, 1, "CLuaDebugHelper");
	SetCnet(0x01209560, 8, "CEnumPins");
	SetCnet(0x01209584, 8, "CEnumMediaTypes");
	SetCnet(0x012095A8, 22, "CMediaSample");
	SetCnet(0x01209604, 6, "CMemAllocator");
	SetCnet(0x01209620, 11, "CMemAllocator");
	SetCnet(0x01209880, 15, "CRendererInputPin");
	SetCnet(0x012098C0, 18, "CRendererInputPin");
	SetCnet(0x0120990C, 5, "CRendererInputPin");
	SetCnet(0x01209924, 9, "CRendererInputPin");
	SetCnet(0x0120994C, 45, "CBaseRenderer");
	SetCnet(0x01209A04, 15, "CBaseRenderer");
	SetCnet(0x01209A44, 5, "CBaseRenderer");
	SetCnet(0x01209A5C, 49, "CBaseVideoRenderer");
	SetCnet(0x01209B24, 15, "CBaseVideoRenderer");
	SetCnet(0x01209B64, 5, "CBaseVideoRenderer");
	SetCnet(0x01209B7C, 9, "CBaseVideoRenderer");
	SetCnet(0x01209BA4, 5, "CBaseVideoRenderer");
	SetCnet(0x01209BD0, 21, "CPosPassThru");
	SetCnet(0x01209C28, 18, "CPosPassThru");
	SetCnet(0x01209C74, 4, "CPosPassThru");
	SetCnet(0x01209C88, 21, "CRendererPosPassThru");
	SetCnet(0x01209CE0, 18, "CRendererPosPassThru");
	SetCnet(0x01209D2C, 4, "CRendererPosPassThru");
	SetCnet(0x0120DD1C, 4, "NxUserOutputStream");
	SetCnet(0x0120DD30, 8, "NxUserAllocator");
	SetCnet(0x0120DD54, 8, "APhysXAllocator");
	SetCnet(0x0120DD78, 4, "APhysXOutputStream");
	SetCnet(0x0120DE38, 12, "APhysXTerrainQuadManager");
	SetCnet(0x0120DE6C, 12, "APhysXTerrain");
	SetCnet(0x0120E154, 3, "NxPlaneShapeDesc");
	SetCnet(0x0120E164, 10, "APhysXBreakable");
	SetCnet(0x0120E190, 11, "APhysXSimpleBreakable");
	SetCnet(0x0120E1C0, 33, "APhysXObject");
	SetCnet(0x0120E248, 51, "APhysXRigidBodyObject");
	SetCnet(0x0120E318, 51, "APhysXDummyRBObject");
	SetCnet(0x0120E3E8, 51, "APhysXStaticRBObject");
	SetCnet(0x0120E4B8, 51, "APhysXDynamicRBObject");
	SetCnet(0x0120E588, 51, "APhysXTerrainPatchRBObject");
	SetCnet(0x0120E658, 51, "APhysXSkeletonRBObject");
	SetCnet(0x0120E728, 33, "APhysXClothObject");
	SetCnet(0x0120E7B0, 33, "APhysXCompoundObject");
	SetCnet(0x0120E838, 33, "APhysXAttacher");
	SetCnet(0x0120E8C0, 33, "APhysXRBAttacher");
	SetCnet(0x0120E948, 33, "APhysXClothAttacher");
	SetCnet(0x0120E9D0, 36, "APhysXFluidObject");
	SetCnet(0x0120EA64, 36, "APhysXOrientedParticleObject");
	SetCnet(0x0120EAF8, 33, "APhysXFluidEmitterAttacher");
	SetCnet(0x0120EB80, 33, "APhysXForceFieldObject");
	SetCnet(0x0120EC08, 33, "APhysXWindForceFieldObject");
	SetCnet(0x0120EC90, 33, "APhysXBossForceFieldObject");
	SetCnet(0x0120ED18, 4, "APhysXRBHitModifier");
	SetCnet(0x0120ED2C, 51, "APhysXSimpleBreakableSkeletonRBObject");
	SetCnet(0x0120EDFC, 11, "APhysXSimpleBreakableSkeletonRBObject");
	SetCnet(0x0120EE2C, 51, "APhysXBreakableSkeletonRBObject");
	SetCnet(0x0120EEFC, 10, "APhysXBreakableSkeletonRBObject");
	SetCnet(0x0120EF28, 4, "APhysXAddForceSubSimulationReport");
	SetCnet(0x0120EF3C, 4, "APhysXSetActorPoseSubSimulationReport");
	SetCnet(0x0120F390, 11, "APhysXCylindricalJointDesc");
	SetCnet(0x0120F3C0, 11, "APhysXPointInPlaneJointDesc");
	SetCnet(0x0120F3F0, 11, "APhysXPointOnLineJointDesc");
	SetCnet(0x0120F420, 11, "APhysXPrismaticJointDesc");
	SetCnet(0x0120F450, 11, "APhysXDistanceJointDesc");
	SetCnet(0x0120F480, 11, "APhysXD6JointDesc");
	SetCnet(0x0120F4B0, 11, "APhysXPulleyJointDesc");
	SetCnet(0x0120F4E0, 11, "APhysXRevoluteJointDesc");
	SetCnet(0x0120F510, 11, "APhysXSphericalJointDesc");
	SetCnet(0x0120F540, 10, "APhysXClothAttachRBConnectorDesc");
	SetCnet(0x0120F56C, 10, "APhysXFluidEmitterAttachRBConnectorDesc");
	SetCnet(0x0120F598, 4, "APhysXRBSubSimulationReport");
	SetCnet(0x0120F674, 1, "APhysXSphereSweepRBObjectHitReport");
	SetCnet(0x0120F704, 13, "NxStream");
	SetCnet(0x0120F73C, 13, "APhysXFileImageStream");
	SetCnet(0x0120F774, 13, "APhysXMemoryWriteBuffer");
	SetCnet(0x0120F7AC, 13, "APhysXMemoryReadBuffer");
	SetCnet(0x0120F7E4, 3, "NxCapsuleForceFieldShapeDesc");
	SetCnet(0x0120F7F4, 3, "NxCapsuleShapeDesc");
	SetCnet(0x0120F804, 3, "NxConvexShapeDesc");
	SetCnet(0x0120F814, 14, "APhysXCapsuleShapeDesc");
	SetCnet(0x0120F850, 14, "APhysXConvexShapeDesc");
	SetCnet(0x0120F88C, 14, "APhysXPlaneShapeDesc");
	SetCnet(0x0120F8C8, 14, "APhysXHeightFieldShapeDesc");
	SetCnet(0x0120FABC, 2, "NxUserTriggerReport");
	SetCnet(0x0120FAC8, 3, "APhysXContactReport");
	SetCnet(0x0120FAD8, 2, "APhysXTriggerReport");
	SetCnet(0x0120FAE4, 4, "APhysXBreakReport");
	SetCnet(0x0120FAF8, 7, "APhysXUserCreationDeletionReport");
	SetCnet(0x0120FB18, 7, "APhysXCreationDeletionReport");
	SetCnet(0x0120FB38, 4, "APhysXSubSimulationReport");
	SetCnet(0x0120FC00, 4, "APhysXConstraintClothSubSimulationReport");
	SetCnet(0x0120FD88, 4, "APhysXGraphVertex");
	SetCnet(0x0120FD9C, 3, "NxConvexForceFieldShapeDesc");
	SetCnet(0x01210814, 8, "APhysXDummyRBObjectDesc");
	SetCnet(0x01210838, 4, "APhysXDummyRBObjectDesc");
	SetCnet(0x0121084C, 8, "APhysXStaticRBObjectDesc");
	SetCnet(0x01210870, 4, "APhysXStaticRBObjectDesc");
	SetCnet(0x01210884, 8, "APhysXTerrainPatchRBObjectDesc");
	SetCnet(0x012108A8, 4, "APhysXTerrainPatchRBObjectDesc");
	SetCnet(0x012108BC, 6, "APhysXForceFieldObjectDesc");
	SetCnet(0x012108D8, 4, "APhysXForceFieldObjectDesc");
	SetCnet(0x01210908, 4, "APhysXTerrainBlock");
	SetCnet(0x0121091C, 12, "APhysXTerrainBlock");
	SetCnet(0x01210A44, 11, "APhysXCharacterControllerManager");
	SetCnet(0x01210A74, 11, "APhysXCharCtrlerMgrImp");
	SetCnet(0x01210ED0, 7, "NxForceFieldKernel");
	SetCnet(0x01210F9C, 7, "NxForceFieldKernelWind");
	SetCnet(0x01211018, 7, "NxForceFieldKernelBossAura");
	SetCnet(0x012110AC, 8, "APhysXObjectConnector");
	SetCnet(0x012110D0, 8, "APhysXJoint");
	SetCnet(0x012110F4, 8, "APhysXClothAttachRBConnector");
	SetCnet(0x01211118, 8, "APhysXFluidEmitterAttachRBConnector");
	SetCnet(0x01211204, 5, "NxHeightFieldShapeDesc");
	SetCnet(0x0121121C, 2, "APhysXUtility::COverlapDetector::Report");
	SetCnet(0x0121139C, 6, "APhysXVacuumForceFieldObjectDesc");
	SetCnet(0x012113B8, 4, "APhysXVacuumForceFieldObjectDesc");
	SetCnet(0x012113CC, 6, "APhysXGravitationForceFieldObjectDesc");
	SetCnet(0x012113E8, 4, "APhysXGravitationForceFieldObjectDesc");
	SetCnet(0x012113FC, 6, "APhysXBuoyancyForceFieldObjectDesc");
	SetCnet(0x01211418, 4, "APhysXBuoyancyForceFieldObjectDesc");
	SetCnet(0x0121142C, 6, "APhysXVortexForceFieldObjectDesc");
	SetCnet(0x01211448, 4, "APhysXVortexForceFieldObjectDesc");
	SetCnet(0x0121145C, 6, "APhysXExplosionForceFieldObjectDesc");
	SetCnet(0x01211478, 4, "APhysXExplosionForceFieldObjectDesc");
	SetCnet(0x0121148C, 6, "APhysXWindForceFieldObjectDesc");
	SetCnet(0x012114A8, 4, "APhysXWindForceFieldObjectDesc");
	SetCnet(0x012114BC, 6, "APhysXBossForceFieldObjectDesc");
	SetCnet(0x012114D8, 4, "APhysXBossForceFieldObjectDesc");
	SetCnet(0x01211544, 13, "APhysXCCBase");
	SetCnet(0x0121157C, 23, "APhysXHostCCBase");
	SetCnet(0x012115DC, 23, "APhysXCharacterController");
	SetCnet(0x0121163C, 1, "EntityReport");
	SetCnet(0x01211644, 23, "APhysXCCImp");
	SetCnet(0x01211994, 14, "APhysXLWCharCtrler");
	SetCnet(0x012119D0, 1, "EntityReportSweep");
	SetCnet(0x012119D8, 14, "APhysXLWCCImp");
	SetCnet(0x01211AEC, 3, "NxDistanceJointDesc");
	SetCnet(0x01211AFC, 28, "APhysXDynCharCtrler");
	SetCnet(0x01211B70, 1, "EntityReportSweepForClosestNonDynamic");
	SetCnet(0x01211B78, 28, "APhysXDynCCImp");
	SetCnet(0x01211FF8, 23, "APhysXNxCharCtrler");
	SetCnet(0x01212058, 23, "APhysXNxCCImp");
	SetCnet(0x01212130, 3, "NxPointInPlaneJointDesc");
	SetCnet(0x01212140, 3, "NxRevoluteJointDesc");
	SetCnet(0x01212150, 3, "NxPrismaticJointDesc");
	SetCnet(0x01212160, 3, "NxCylindricalJointDesc");
	SetCnet(0x01212170, 3, "NxSphericalJointDesc");
	SetCnet(0x01212180, 3, "NxFixedJointDesc");
	SetCnet(0x01212218, 6, "APhysXCCHitReport");
	SetCnet(0x01212234, 1, "EntityReportSweepForDynCC");
	SetCnet(0x0121223C, 1, "EntityReportSweepForPushing");
	SetCnet(0x01212358, 2, "SCStandNotBind");
	SetCnet(0x01212364, 2, "SCStandAndBind");
	SetCnet(0x01212370, 2, "SCCtrlMoveNotBind");
	SetCnet(0x0121237C, 2, "SCCtrlMoveAndBind");
	SetCnet(0x01212388, 2, "SCSlideFree");
	SetCnet(0x01212394, 2, "SCSlideCtrl");
	SetCnet(0x012123A0, 2, "SCJumpStart");
	SetCnet(0x012123AC, 2, "SCJumpOrInair");
	SetCnet(0x012123B8, 2, "SCHangStart");
	SetCnet(0x012123C4, 2, "SCHanging");
	SetCnet(0x012123D0, 2, "SCHangEnd");
	SetCnet(0x012123DC, 2, "SCHangEndJumping");
	SetCnet(0x012123E8, 2, "SCHangPost");
	SetCnet(0x01212650, 11, "CAsyncOutputPin");
	SetCnet(0x01212680, 14, "CAsyncOutputPin");
	SetCnet(0x012126BC, 18, "CAsyncOutputPin");
	SetCnet(0x01212708, 5, "CAsyncOutputPin");
	SetCnet(0x01212720, 10, "CAsyncReader");
	SetCnet(0x0121274C, 15, "CAsyncReader");
	SetCnet(0x0121278C, 5, "CAsyncReader");
	SetCnet(0x01212834, 1, "AutoMove::BrushTestWrapper");
	SetCnet(0x0121283C, 2, "AutoMove::CheckNeighborBase");
	SetCnet(0x01212848, 2, "AutoMove::CheckNeighborReachable");
	SetCnet(0x01212854, 2, "AutoMove::CheckNeighborAny");
	SetCnet(0x01212880, 1, "AutoMove::CPfClu");
	SetCnet(0x01212888, 1, "AutoMove::CluExpandLimit");
	SetCnet(0x01212890, 1, "AutoMove::CluExpandLimit");
	SetCnet(0x0121290C, 1, "AutoMove::CIsland");
	SetCnet(0x01212914, 1, "AutoMove::CIslandList");
	SetCnet(0x0121291C, 1, "AutoMove::CBitImage");
	SetCnet(0x01212924, 1, "AutoMove::CBlockImage<short>");
	SetCnet(0x0121292C, 1, "AutoMove::CGAStar");
	SetCnet(0x01212A8C, 10, "AutoMove::MOpen");
	SetCnet(0x01212AB8, 10, "AutoMove::MOpenArray");
	SetCnet(0x01212AE4, 10, "AutoMove::MOpenHeap");
	SetCnet(0x01212B98, 1, "type_info");
	SetCnet(0x01212D14, 1, "ARandomGen");
	SetCnet(0x01212D34, 1, "AMEngine");
	SetCnet(0x01212E60, 1, "APtrArray<APtrArray<AString *> *>");
	SetCnet(0x01212E68, 1, "ATextTabFile");
	SetCnet(0x01213414, 2, "A3DMatBlend");
	SetCnet(0x01213420, 3, "A3DSkeletonBlend");
	SetCnet(0x0121343C, 2, "A3DHermiteSpline");
	SetCnet(0x01213464, 1, "ECViewport");
	SetCnet(0x012179C4, 1, "APtrArray<A3DGrassType *>");
	SetCnet(0x01217C10, 1, "A3DTerrainOutline2");
	SetCnet(0x01218180, 5, "ElementRender");
	SetCnet(0x01218198, 5, "A3DPostSystem");
	SetCnet(0x012181B0, 1, "AArray<ECManager *,ECManager * &>");
	SetCnet(0x012181B8, 5, "ElementRenderObject");
	SetCnet(0x01218784, 8, "A3DGrassCollectRender");
	SetCnet(0x012187E0, 8, "A3DGrassHWInstanceRender");
	SetCnet(0x01218804, 8, "A3DGrassRender");
	SetCnet(0x0121890C, 1, "A3DOutlineTextureCache");
	SetCnet(0x01218914, 1, "A3DOutlineTexture");
	SetCnet(0x0121891C, 5, "A3DPostSilhouette");
	SetCnet(0x01218934, 5, "A3DPost");
	SetCnet(0x01218CCC, 1, "APtrArray<A3DMirrorPlane *>");
	SetCnet(0x01219254, 1, "AArray<float,float &>");
	SetCnet(0x0121925C, 6, "A3DDistantObjectRender");
	SetCnet(0x01219278, 1, "AArray<A3DDistantBoard *,A3DDistantBoard * &>");
	SetCnet(0x01219564, 5, "A3DPostAA");
	SetCnet(0x01219944, 5, "A3DPostWarp");
	SetCnet(0x0121995C, 5, "A3DPostBloom");
	SetCnet(0x01219974, 5, "A3DPostDof");
	SetCnet(0x0121998C, 5, "A3DPostGodRay");
	SetCnet(0x012199A4, 5, "A3DPostSunMoon");
	SetCnet(0x012199BC, 5, "A3DPostMotionBlur");
	SetCnet(0x012199D4, 5, "A3DPostRadialBlur");
	SetCnet(0x012199EC, 5, "A3DPostRadialBlurFast");
	SetCnet(0x01219A04, 5, "A3DPostFullGlow");
	SetCnet(0x01219A1C, 5, "A3DPostCC");
	SetCnet(0x01219A34, 5, "A3DPostFlare");
	SetCnet(0x01219B9C, 5, "A3DGrassBlock");
	SetCnet(0x01219BB4, 1, "AArray<bool,bool>");
	SetCnet(0x01219BBC, 5, "A3DGrassBlockHW");
	SetCnet(0x0121C5B8, 6, "std::_Func_base<unsigned __int64,unsigned __int64>");
	SetCnet(0x0121C5D4, 6, "std::_Func_impl<<lambda_ce2618d8d2ea11c9208b515867ed7f55>,std::allocator<int>,bool,unsigned __int64>");
	SetCnet(0x0121C5F0, 6, "std::_Func_impl<<lambda_197a24465fdf04d5037e9e3384d81aa6>,std::allocator<int>,unsigned __int64,unsigned __int64>");
	SetCnet(0x0121C60C, 6, "std::_Func_impl<<lambda_53be5aad249052507418daac0251ec78>,std::allocator<int>,unsigned int,unsigned __int64>");
	SetCnet(0x0121C628, 2, "TGraphTask<FReturnGraphTask>");
	SetCnet(0x0121C634, 2, "TGraphTask<FNullGraphTask>");
	SetCnet(0x0121C640, 2, "TGraphTask<FTriggerEventGraphTask>");
	SetCnet(0x0121C64C, 2, "FNamedTaskThread");
	SetCnet(0x0121C658, 13, "FNamedTaskThread");
	SetCnet(0x0121C690, 12, "FTaskGraphImplementation");
	SetCnet(0x0121C6C4, 13, "FTaskThreadAnyThread");
	SetCnet(0x0121C6FC, 2, "FTaskThreadAnyThread");
	SetCnet(0x0121C708, 13, "FTaskThreadBase");
	SetCnet(0x0121C740, 2, "FTaskThreadBase");
	SetCnet(0x0121C74C, 6, "FRunnable");
	SetCnet(0x0121C768, 2, "FSingleThreadRunnable");
	SetCnet(0x0121C774, 12, "FTaskGraphInterface");
	SetCnet(0x0121C7E4, 7, "FRunnableThreadWin");
	SetCnet(0x0121C804, 6, "FSafeRecyclableEvent");
	SetCnet(0x0121C820, 6, "FEventWin");
	SetCnet(0x0121C83C, 6, "FEvent");
	SetCnet(0x0121C858, 7, "FRunnableThread");
	SetCnet(0x0121E6D0, 1, "CustomCharFactory");
	SetCnet(0x0121E6D8, 10, "CustomizeTexture");
	SetCnet(0x0121E704, 5, "CustomizeTexture");
	SetCnet(0x0121E89C, 1, "MSObject::Transform::Scale");
	SetCnet(0x0121E8A4, 1, "MSObject::Transform");
	SetCnet(0x0121E8AC, 1, "MSObject::Transform::Rotation");
	SetCnet(0x0121E8B4, 1, "A3DBoneMatrixControllerEx");
	SetCnet(0x0121E8BC, 1, "MSObject::Transform::_TransformBase");
	SetCnet(0x0121E8C4, 1, "MSObject::Transform::Position");
	SetCnet(0x0121EDE4, 17, "CAnimationManager");
	SetCnet(0x0121EE54, 25, "CAnmObject");
	SetCnet(0x0121EEBC, 25, "CAnmCamera");
	SetCnet(0x0121EF24, 7, "CAnmColorMap");
	SetCnet(0x0121EF44, 26, "CAnmPlayer");
	SetCnet(0x0121EFB0, 11, "SmartCamera");
	SetCnet(0x0121EFE0, 25, "CAnmGFX");
	SetCnet(0x0121F048, 7, "CAnmWeather");
	SetCnet(0x0121F068, 7, "CAnmPlaySound");
	SetCnet(0x0121F098, 26, "CAnmNPC");
	SetCnet(0x0121F104, 7, "CAnmAction");
	SetCnet(0x0121F124, 7, "CAnmTransparent");
	SetCnet(0x0121F144, 7, "CAnmMotion");
	SetCnet(0x0121F164, 7, "CAnmDialogue");
	SetCnet(0x0121F184, 7, "CAnmBezierMove");
	SetCnet(0x0121F1A4, 7, "CAnmSound");
	SetCnet(0x0121F1C4, 7, "CAnmHook");
	SetCnet(0x0121F1E4, 7, "CAnmCameraOscillatory");
	SetCnet(0x0121F204, 7, "CAnmJump");
	SetCnet(0x0121F224, 7, "CAnmDispatch");
	SetCnet(0x0121F244, 7, "CAnmScale");
	SetCnet(0x0121F264, 7, "CAnmHideWorldAction");
	SetCnet(0x0121F284, 7, "CAnmDisplayHide");
	SetCnet(0x0121F2A4, 3, "CAnmSunMoon");
	SetCnet(0x0121F2B4, 7, "CAnmSunMoon");
	SetCnet(0x0121F2D4, 3, "IPbData");
	SetCnet(0x0121F2E4, 7, "CAnmBind");
	SetCnet(0x0121F304, 7, "CAnmMove");
	SetCnet(0x0121F324, 7, "CAnmLock");
	SetCnet(0x0121F344, 7, "CAnmFOV");
	SetCnet(0x0121F364, 7, "CAnmLock2");
	SetCnet(0x0121F384, 7, "CAnmUI");
	SetCnet(0x0121F3A4, 3, "CAnmUI");
	SetCnet(0x0121F3B4, 7, "CAnmBezierMove2");
	SetCnet(0x0121F3D4, 7, "CAnmPauseGameSound");
	SetCnet(0x0121F3F4, 7, "CAnmSpeedControl");
	SetCnet(0x0121F414, 7, "CAnmRotate");
	SetCnet(0x0121F434, 8, "CAnmActionBlur");
	SetCnet(0x0121F458, 7, "CAnmColorFilters");
	SetCnet(0x0121F478, 3, "CAnmColorFilters");
	SetCnet(0x0121F708, 6, "google::protobuf::io::ZeroCopyOutputStream");
	SetCnet(0x0121F724, 5, "google::protobuf::io::ZeroCopyInputStream");
	SetCnet(0x0121F73C, 2, "google::protobuf::FatalException");
	SetCnet(0x01220A90, 2, "google::protobuf::`anonymous namespace'::GeneratedMessageFactory");
	SetCnet(0x01220A9C, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<int>");
	SetCnet(0x01220AE8, 19, "google::protobuf::internal::RepeatedPtrFieldStringAccessor");
	SetCnet(0x01220B38, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<float>");
	SetCnet(0x01220B84, 19, "google::protobuf::internal::RepeatedPtrFieldMessageAccessor");
	SetCnet(0x01220BD4, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned __int64>");
	SetCnet(0x01220C20, 2, "google::protobuf::MessageFactory");
	SetCnet(0x01220C2C, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<unsigned int>");
	SetCnet(0x01220C78, 20, "google::protobuf::internal::MapFieldAccessor");
	SetCnet(0x01220CCC, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<bool>");
	SetCnet(0x01220D18, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<__int64>");
	SetCnet(0x01220D64, 18, "google::protobuf::internal::RepeatedFieldPrimitiveAccessor<double>");
	SetCnet(0x01221494, 21, "google::protobuf::internal::DynamicMapField");
	SetCnet(0x01223E84, 3, "google::protobuf::`anonymous namespace'::AggregateErrorCollector");
	SetCnet(0x01223E94, 3, "google::protobuf::io::ErrorCollector");
	SetCnet(0x01223EA4, 5, "google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder");
	SetCnet(0x01223EBC, 5, "google::protobuf::TextFormat::Finder");
	SetCnet(0x012240FC, 6, "google::protobuf::io::StringOutputStream");
	SetCnet(0x01224118, 5, "google::protobuf::io::ArrayInputStream");
	SetCnet(0x01224304, 2, "google::protobuf::internal::ExtensionFinder");
	SetCnet(0x01224310, 2, "google::protobuf::internal::GeneratedExtensionFinder");
	SetCnet(0x012244E4, 2, "google::protobuf::internal::DescriptorPoolExtensionFinder");
	SetCnet(0x012244F0, 19, "google::protobuf::ServiceDescriptorProto");
	SetCnet(0x01224540, 19, "google::protobuf::OneofDescriptorProto");
	SetCnet(0x01224590, 19, "google::protobuf::FileDescriptorSet");
	SetCnet(0x012245E0, 19, "google::protobuf::SourceCodeInfo_Location");
	SetCnet(0x01224630, 19, "google::protobuf::EnumDescriptorProto_EnumReservedRange");
	SetCnet(0x01224680, 19, "google::protobuf::DescriptorProto_ReservedRange");
	SetCnet(0x012246D0, 19, "google::protobuf::GeneratedCodeInfo");
	SetCnet(0x01224720, 19, "google::protobuf::UninterpretedOption_NamePart");
	SetCnet(0x01224770, 19, "google::protobuf::UninterpretedOption");
	SetCnet(0x012247C0, 19, "google::protobuf::DescriptorProto_ExtensionRange");
	SetCnet(0x01224810, 19, "google::protobuf::GeneratedCodeInfo_Annotation");
	SetCnet(0x01224860, 19, "google::protobuf::FieldDescriptorProto");
	SetCnet(0x012248B0, 19, "google::protobuf::EnumValueDescriptorProto");
	SetCnet(0x01224900, 19, "google::protobuf::DescriptorProto");
	SetCnet(0x01224950, 19, "google::protobuf::EnumDescriptorProto");
	SetCnet(0x012249A0, 19, "google::protobuf::MethodDescriptorProto");
	SetCnet(0x012249F0, 19, "google::protobuf::FileDescriptorProto");
	SetCnet(0x01224A40, 19, "google::protobuf::MessageOptions");
	SetCnet(0x01224A90, 19, "google::protobuf::EnumOptions");
	SetCnet(0x01224AE0, 19, "google::protobuf::EnumValueOptions");
	SetCnet(0x01224B30, 19, "google::protobuf::MethodOptions");
	SetCnet(0x01224B80, 19, "google::protobuf::ServiceOptions");
	SetCnet(0x01224BD0, 19, "google::protobuf::FileOptions");
	SetCnet(0x01224C20, 19, "google::protobuf::FieldOptions");
	SetCnet(0x01224C70, 19, "google::protobuf::OneofOptions");
	SetCnet(0x01224CC0, 19, "google::protobuf::SourceCodeInfo");
	SetCnet(0x01224D10, 19, "google::protobuf::ExtensionRangeOptions");
	SetCnet(0x01224DA8, 6, "google::protobuf::EncodedDescriptorDatabase");
	SetCnet(0x01224DC4, 6, "google::protobuf::DescriptorDatabase");
	SetCnet(0x012253CC, 2, "google::protobuf::DynamicMessageFactory");
	SetCnet(0x012253D8, 19, "google::protobuf::DynamicMessage");
	SetCnet(0x01225B54, 5, "google::protobuf::TextFormat::Printer::TextGenerator");
	SetCnet(0x01225B6C, 16, "google::protobuf::TextFormat::FastFieldValuePrinter");
	SetCnet(0x01225BB0, 3, "google::protobuf::TextFormat::Parser::ParserImpl::ParserErrorCollector");
	SetCnet(0x01225BC0, 5, "google::protobuf::TextFormat::BaseTextGenerator");
#endif

}

void ClassInformer::SetCnet(size_t addr, size_t count, const char* str)
{
	size_t len = strlen(str);
	if (!len || len > 1024) return;
	cnet.protocol[cnet.count].addr = addr;
	cnet.protocol[cnet.count].count = count;
	cnet.protocol[cnet.count].str_size = len;
	memset(cnet.protocol[cnet.count].str, 0, 1024);
	memcpy(cnet.protocol[cnet.count].str, str, len);
	cnet.count++;
}

ClassInformer::PROTOCOL ClassInformer::GetCnet(size_t addr)
{
	if (addr > CONFIG::SECTION_RDATA_BEGIN || addr < (CONFIG::SECTION_RDATA_BEGIN + CONFIG::SECTION_RDATA_END))
	{
		for (size_t i = 0; cnet.protocol[i].addr && i < cnet.count; i++)
			if (cnet.protocol[i].addr == addr)
				return cnet.protocol[i];
	}
	return cnet.protocol[0];
}

const char* ClassInformer::GetCNameRecv(size_t type)
{
	switch (type)
	{
	case 513:
		return "GET_SHIELD_ENERGY";
		break;
	default:
		break;
	}

	if (type > 426) return "NOP!!!";
	return cgame_r[type];
}

const char* ClassInformer::GetCGameSend(size_t type)
{
	switch (type)
	{
	case 227:
		return "CAST_SHIELD_SKILL";
		break;
	default:
		break;
	}

	if (type > 191) return "NOP!!!";
	return cgame_s[type];
}